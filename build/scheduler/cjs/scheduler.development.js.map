{"version":3,"file":"scheduler.development.js","sources":["../../../../packages/scheduler/src/SchedulerFeatureFlags.js","../../../../packages/scheduler/src/SchedulerMinHeap.js","../../../../packages/scheduler/src/SchedulerPriorities.js","../../../../packages/scheduler/src/SchedulerProfiling.js","../../../../packages/scheduler/src/forks/Scheduler.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nexport const enableSchedulerDebugging = false;\nexport const enableIsInputPending = false;\nexport const enableProfiling = false;\nexport const enableIsInputPendingContinuous = false;\nexport const frameYieldMs = 5;\nexport const continuousYieldMs = 50;\nexport const maxYieldMs = 300;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\ntype Heap = Array<Node>;\ntype Node = {|\n  id: number,\n  sortIndex: number,\n|};\n\nexport function push(heap: Heap, node: Node): void {\n  const index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\n\nexport function peek(heap: Heap): Node | null {\n  return heap.length === 0 ? null : heap[0];\n}\n\nexport function pop(heap: Heap): Node | null {\n  if (heap.length === 0) {\n    return null;\n  }\n  const first = heap[0];\n  const last = heap.pop();\n  if (last !== first) {\n    heap[0] = last;\n    siftDown(heap, last, 0);\n  }\n  return first;\n}\n\nfunction siftUp(heap, node, i) {\n  let index = i;\n  while (index > 0) {\n    const parentIndex = (index - 1) >>> 1;\n    const parent = heap[parentIndex];\n    if (compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  let index = i;\n  const length = heap.length;\n  const halfLength = length >>> 1;\n  while (index < halfLength) {\n    const leftIndex = (index + 1) * 2 - 1;\n    const left = heap[leftIndex];\n    const rightIndex = leftIndex + 1;\n    const right = heap[rightIndex];\n\n    // If the left or right node is smaller, swap with the smaller of those.\n    if (compare(left, node) < 0) {\n      if (rightIndex < length && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (rightIndex < length && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  const diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type PriorityLevel = 0 | 1 | 2 | 3 | 4 | 5;\n\n// TODO: Use symbols?\nexport const NoPriority = 0;\nexport const ImmediatePriority = 1;\nexport const UserBlockingPriority = 2;\nexport const NormalPriority = 3;\nexport const LowPriority = 4;\nexport const IdlePriority = 5;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {PriorityLevel} from './SchedulerPriorities';\nimport {enableProfiling} from './SchedulerFeatureFlags';\n\nlet runIdCounter: number = 0;\nlet mainThreadIdCounter: number = 0;\n\n// Bytes per element is 4\nconst INITIAL_EVENT_LOG_SIZE = 131072;\nconst MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes\n\nlet eventLogSize = 0;\nlet eventLogBuffer = null;\nlet eventLog = null;\nlet eventLogIndex = 0;\n\nconst TaskStartEvent = 1;\nconst TaskCompleteEvent = 2;\nconst TaskErrorEvent = 3;\nconst TaskCancelEvent = 4;\nconst TaskRunEvent = 5;\nconst TaskYieldEvent = 6;\nconst SchedulerSuspendEvent = 7;\nconst SchedulerResumeEvent = 8;\n\nfunction logEvent(entries) {\n  if (eventLog !== null) {\n    const offset = eventLogIndex;\n    eventLogIndex += entries.length;\n    if (eventLogIndex + 1 > eventLogSize) {\n      eventLogSize *= 2;\n      if (eventLogSize > MAX_EVENT_LOG_SIZE) {\n        // Using console['error'] to evade Babel and ESLint\n        console['error'](\n          \"Scheduler Profiling: Event log exceeded maximum size. Don't \" +\n            'forget to call `stopLoggingProfilingEvents()`.',\n        );\n        stopLoggingProfilingEvents();\n        return;\n      }\n      const newEventLog = new Int32Array(eventLogSize * 4);\n      newEventLog.set(eventLog);\n      eventLogBuffer = newEventLog.buffer;\n      eventLog = newEventLog;\n    }\n    eventLog.set(entries, offset);\n  }\n}\n\nexport function startLoggingProfilingEvents(): void {\n  eventLogSize = INITIAL_EVENT_LOG_SIZE;\n  eventLogBuffer = new ArrayBuffer(eventLogSize * 4);\n  eventLog = new Int32Array(eventLogBuffer);\n  eventLogIndex = 0;\n}\n\nexport function stopLoggingProfilingEvents(): ArrayBuffer | null {\n  const buffer = eventLogBuffer;\n  eventLogSize = 0;\n  eventLogBuffer = null;\n  eventLog = null;\n  eventLogIndex = 0;\n  return buffer;\n}\n\nexport function markTaskStart(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      // performance.now returns a float, representing milliseconds. When the\n      // event is logged, it's coerced to an int. Convert to microseconds to\n      // maintain extra degrees of precision.\n      logEvent([TaskStartEvent, ms * 1000, task.id, task.priorityLevel]);\n    }\n  }\n}\n\nexport function markTaskCompleted(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskCompleteEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskCanceled(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskCancelEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskErrored(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskErrorEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskRun(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    runIdCounter++;\n\n    if (eventLog !== null) {\n      logEvent([TaskRunEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\n\nexport function markTaskYield(task: {id: number, ...}, ms: number) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskYieldEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\n\nexport function markSchedulerSuspended(ms: number) {\n  if (enableProfiling) {\n    mainThreadIdCounter++;\n\n    if (eventLog !== null) {\n      logEvent([SchedulerSuspendEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\n\nexport function markSchedulerUnsuspended(ms: number) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([SchedulerResumeEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/* eslint-disable no-var */\n\nimport {\n  enableSchedulerDebugging,\n  enableProfiling,\n  enableIsInputPending,\n  enableIsInputPendingContinuous,\n  frameYieldMs,\n  continuousYieldMs,\n  maxYieldMs,\n} from '../SchedulerFeatureFlags';\n\nimport {push, pop, peek} from '../SchedulerMinHeap';\n\n// TODO: Use symbols?\nimport {\n  ImmediatePriority,\n  UserBlockingPriority,\n  NormalPriority,\n  LowPriority,\n  IdlePriority,\n} from '../SchedulerPriorities';\nimport {\n  markTaskRun,\n  markTaskYield,\n  markTaskCompleted,\n  markTaskCanceled,\n  markTaskErrored,\n  markSchedulerSuspended,\n  markSchedulerUnsuspended,\n  markTaskStart,\n  stopLoggingProfilingEvents,\n  startLoggingProfilingEvents,\n} from '../SchedulerProfiling';\n\nlet getCurrentTime;\nconst hasPerformanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function';\n\nif (hasPerformanceNow) {\n  const localPerformance = performance;\n  getCurrentTime = () => localPerformance.now();\n} else {\n  const localDate = Date;\n  const initialTime = localDate.now();\n  getCurrentTime = () => localDate.now() - initialTime;\n}\n\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\nvar maxSigned31BitInt = 1073741823;\n\n// Times out immediately\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1;\n// Eventually times out\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000;\n// Never times out\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;\n\n// Tasks are stored on a min heap\nvar taskQueue = [];\nvar timerQueue = [];\n\n// Incrementing id counter. Used to maintain insertion order.\nvar taskIdCounter = 1;\n\n// Pausing the scheduler is useful for debugging.\nvar isSchedulerPaused = false;\n\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority;\n\n// This is set while performing work, to prevent re-entrance.\nvar isPerformingWork = false;\n\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false;\n\n// Capture local references to native APIs, in case a polyfill overrides them.\nconst localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;\nconst localClearTimeout =\n  typeof clearTimeout === 'function' ? clearTimeout : null;\nconst localSetImmediate =\n  typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom\n\nconst isInputPending =\n  typeof navigator !== 'undefined' &&\n  navigator.scheduling !== undefined &&\n  navigator.scheduling.isInputPending !== undefined\n    ? navigator.scheduling.isInputPending.bind(navigator.scheduling)\n    : null;\n\nconst continuousOptions = {includeContinuous: enableIsInputPendingContinuous};\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  let timer = peek(timerQueue);\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n      if (enableProfiling) {\n        markTaskStart(timer, currentTime);\n        timer.isQueued = true;\n      }\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      const firstTimer = peek(timerQueue);\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n  if (enableProfiling) {\n    markSchedulerUnsuspended(initialTime);\n  }\n\n  // We'll need a host callback the next time work is scheduled.\n  isHostCallbackScheduled = false;\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  const previousPriorityLevel = currentPriorityLevel;\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          const currentTime = getCurrentTime();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n        throw error;\n      }\n    } else {\n      // No catch in prod code path.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n    if (enableProfiling) {\n      const currentTime = getCurrentTime();\n      markSchedulerSuspended(currentTime);\n    }\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n  while (\n    currentTask !== null &&\n    !(enableSchedulerDebugging && isSchedulerPaused)\n  ) {\n    if (\n      currentTask.expirationTime > currentTime &&\n      (!hasTimeRemaining || shouldYieldToHost())\n    ) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n    const callback = currentTask.callback;\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      if (enableProfiling) {\n        markTaskRun(currentTask, currentTime);\n      }\n      const continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = getCurrentTime();\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n        if (enableProfiling) {\n          markTaskYield(currentTask, currentTime);\n        }\n      } else {\n        if (enableProfiling) {\n          markTaskCompleted(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n    currentTask = peek(taskQueue);\n  }\n  // Return whether there's additional work\n  if (currentTask !== null) {\n    return true;\n  } else {\n    const firstTimer = peek(timerQueue);\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function() {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = getCurrentTime();\n\n  var startTime;\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  var timeout;\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n    case NormalPriority:\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n  }\n\n  var expirationTime = startTime + timeout;\n\n  var newTask = {\n    id: taskIdCounter++,\n    callback,\n    priorityLevel,\n    startTime,\n    expirationTime,\n    sortIndex: -1,\n  };\n  if (enableProfiling) {\n    newTask.isQueued = false;\n  }\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      }\n      // Schedule a timeout.\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n    if (enableProfiling) {\n      markTaskStart(newTask, currentTime);\n      newTask.isQueued = true;\n    }\n    // Schedule a host callback, if needed. If we're already performing work,\n    // wait until the next time we yield.\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n  isSchedulerPaused = true;\n}\n\nfunction unstable_continueExecution() {\n  isSchedulerPaused = false;\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  if (enableProfiling) {\n    if (task.isQueued) {\n      const currentTime = getCurrentTime();\n      markTaskCanceled(task, currentTime);\n      task.isQueued = false;\n    }\n  }\n\n  // Null out the callback to indicate the task has been canceled. (Can't\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nlet isMessageLoopRunning = false;\nlet scheduledHostCallback = null;\nlet taskTimeoutID = -1;\n\n// Scheduler periodically yields in case there is other work on the main\n// thread, like user events. By default, it yields multiple times per frame.\n// It does not attempt to align with frame boundaries, since most tasks don't\n// need to be frame aligned; for those that do, use requestAnimationFrame.\nlet frameInterval = frameYieldMs;\nconst continuousInputInterval = continuousYieldMs;\nconst maxInterval = maxYieldMs;\nlet startTime = -1;\n\nlet needsPaint = false;\n\nfunction shouldYieldToHost() {\n  const timeElapsed = getCurrentTime() - startTime;\n  if (timeElapsed < frameInterval) {\n    // The main thread has only been blocked for a really short amount of time;\n    // smaller than a single frame. Don't yield yet.\n    return false;\n  }\n\n  // The main thread has been blocked for a non-negligible amount of time. We\n  // may want to yield control of the main thread, so the browser can perform\n  // high priority tasks. The main ones are painting and user input. If there's\n  // a pending paint or a pending input, then we should yield. But if there's\n  // neither, then we can yield less often while remaining responsive. We'll\n  // eventually yield regardless, since there could be a pending paint that\n  // wasn't accompanied by a call to `requestPaint`, or other main thread tasks\n  // like network events.\n  if (enableIsInputPending) {\n    if (needsPaint) {\n      // There's a pending paint (signaled by `requestPaint`). Yield now.\n      return true;\n    }\n    if (timeElapsed < continuousInputInterval) {\n      // We haven't blocked the thread for that long. Only yield if there's a\n      // pending discrete input (e.g. click). It's OK if there's pending\n      // continuous input (e.g. mouseover).\n      if (isInputPending !== null) {\n        return isInputPending();\n      }\n    } else if (timeElapsed < maxInterval) {\n      // Yield if there's either a pending discrete or continuous input.\n      if (isInputPending !== null) {\n        return isInputPending(continuousOptions);\n      }\n    } else {\n      // We've blocked the thread for a long time. Even if there's no pending\n      // input, there may be some other scheduled work that we don't know about,\n      // like a network event. Yield now.\n      return true;\n    }\n  }\n\n  // `isInputPending` isn't available. Yield now.\n  return true;\n}\n\nfunction requestPaint() {\n  if (\n    enableIsInputPending &&\n    navigator !== undefined &&\n    navigator.scheduling !== undefined &&\n    navigator.scheduling.isInputPending !== undefined\n  ) {\n    needsPaint = true;\n  }\n\n  // Since we yield every frame regardless, `requestPaint` has no effect.\n}\n\nfunction forceFrameRate(fps) {\n  if (fps < 0 || fps > 125) {\n    // Using console['error'] to evade Babel and ESLint\n    console['error'](\n      'forceFrameRate takes a positive int between 0 and 125, ' +\n        'forcing frame rates higher than 125 fps is not supported',\n    );\n    return;\n  }\n  if (fps > 0) {\n    frameInterval = Math.floor(1000 / fps);\n  } else {\n    // reset the framerate\n    frameInterval = frameYieldMs;\n  }\n}\n\nconst performWorkUntilDeadline = () => {\n  if (scheduledHostCallback !== null) {\n    const currentTime = getCurrentTime();\n    // Keep track of the start time so we can measure how long the main thread\n    // has been blocked.\n    startTime = currentTime;\n    const hasTimeRemaining = true;\n\n    // If a scheduler task throws, exit the current browser task so the\n    // error can be observed.\n    //\n    // Intentionally not using a try-catch, since that makes some debugging\n    // techniques harder. Instead, if `scheduledHostCallback` errors, then\n    // `hasMoreWork` will remain true, and we'll continue the work loop.\n    let hasMoreWork = true;\n    try {\n      hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\n    } finally {\n      if (hasMoreWork) {\n        // If there's more work, schedule the next message event at the end\n        // of the preceding one.\n        schedulePerformWorkUntilDeadline();\n      } else {\n        isMessageLoopRunning = false;\n        scheduledHostCallback = null;\n      }\n    }\n  } else {\n    isMessageLoopRunning = false;\n  }\n  // Yielding to the browser will give it a chance to paint, so we can\n  // reset this.\n  needsPaint = false;\n};\n\nlet schedulePerformWorkUntilDeadline;\nif (typeof localSetImmediate === 'function') {\n  // Node.js and old IE.\n  // There's a few reasons for why we prefer setImmediate.\n  //\n  // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.\n  // (Even though this is a DOM fork of the Scheduler, you could get here\n  // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)\n  // https://github.com/facebook/react/issues/20756\n  //\n  // But also, it runs earlier which is the semantic we want.\n  // If other browsers ever implement it, it's better to use it.\n  // Although both of these would be inferior to native scheduling.\n  schedulePerformWorkUntilDeadline = () => {\n    localSetImmediate(performWorkUntilDeadline);\n  };\n} else if (typeof MessageChannel !== 'undefined') {\n  // DOM and Worker environments.\n  // We prefer MessageChannel because of the 4ms setTimeout clamping.\n  const channel = new MessageChannel();\n  const port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n  schedulePerformWorkUntilDeadline = () => {\n    port.postMessage(null);\n  };\n} else {\n  // We should only fallback here in non-browser environments.\n  schedulePerformWorkUntilDeadline = () => {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\n}\n\nfunction requestHostCallback(callback) {\n  scheduledHostCallback = callback;\n  if (!isMessageLoopRunning) {\n    isMessageLoopRunning = true;\n    schedulePerformWorkUntilDeadline();\n  }\n}\n\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(() => {\n    callback(getCurrentTime());\n  }, ms);\n}\n\nfunction cancelHostTimeout() {\n  localClearTimeout(taskTimeoutID);\n  taskTimeoutID = -1;\n}\n\nconst unstable_requestPaint = requestPaint;\n\nexport {\n  ImmediatePriority as unstable_ImmediatePriority,\n  UserBlockingPriority as unstable_UserBlockingPriority,\n  NormalPriority as unstable_NormalPriority,\n  IdlePriority as unstable_IdlePriority,\n  LowPriority as unstable_LowPriority,\n  unstable_runWithPriority,\n  unstable_next,\n  unstable_scheduleCallback,\n  unstable_cancelCallback,\n  unstable_wrapCallback,\n  unstable_getCurrentPriorityLevel,\n  shouldYieldToHost as unstable_shouldYield,\n  unstable_requestPaint,\n  unstable_continueExecution,\n  unstable_pauseExecution,\n  unstable_getFirstCallbackNode,\n  getCurrentTime as unstable_now,\n  forceFrameRate as unstable_forceFrameRate,\n};\n\nexport const unstable_Profiling = enableProfiling\n  ? {\n      startLoggingProfilingEvents,\n      stopLoggingProfilingEvents,\n    }\n  : null;\n"],"names":["enableSchedulerDebugging","enableProfiling","frameYieldMs","push","heap","node","index","length","siftUp","peek","pop","first","last","siftDown","i","parentIndex","parent","compare","halfLength","leftIndex","left","rightIndex","right","a","b","diff","sortIndex","id","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","markTaskErrored","task","ms","hasPerformanceNow","performance","now","localPerformance","getCurrentTime","localDate","Date","initialTime","maxSigned31BitInt","IMMEDIATE_PRIORITY_TIMEOUT","USER_BLOCKING_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","LOW_PRIORITY_TIMEOUT","IDLE_PRIORITY_TIMEOUT","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","localSetTimeout","setTimeout","localClearTimeout","clearTimeout","localSetImmediate","setImmediate","isInputPending","navigator","scheduling","undefined","bind","advanceTimers","currentTime","timer","callback","startTime","expirationTime","handleTimeout","requestHostCallback","flushWork","firstTimer","requestHostTimeout","hasTimeRemaining","cancelHostTimeout","previousPriorityLevel","workLoop","error","isQueued","shouldYieldToHost","priorityLevel","didUserCallbackTimeout","continuationCallback","unstable_runWithPriority","eventHandler","unstable_next","unstable_wrapCallback","parentPriorityLevel","apply","arguments","unstable_scheduleCallback","options","delay","timeout","newTask","unstable_pauseExecution","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_cancelCallback","unstable_getCurrentPriorityLevel","isMessageLoopRunning","scheduledHostCallback","taskTimeoutID","frameInterval","timeElapsed","requestPaint","forceFrameRate","fps","console","Math","floor","performWorkUntilDeadline","hasMoreWork","schedulePerformWorkUntilDeadline","MessageChannel","channel","port","port2","port1","onmessage","postMessage","unstable_requestPaint","unstable_Profiling"],"mappings":"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"}