{"version":3,"file":"scheduler-unstable_mock.development.js","sources":["../../../../packages/scheduler/src/SchedulerFeatureFlags.js","../../../../packages/scheduler/src/SchedulerMinHeap.js","../../../../packages/scheduler/src/SchedulerPriorities.js","../../../../packages/scheduler/src/SchedulerProfiling.js","../../../../packages/scheduler/src/forks/SchedulerMock.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nexport const enableSchedulerDebugging = false;\nexport const enableIsInputPending = false;\nexport const enableProfiling = false;\nexport const enableIsInputPendingContinuous = false;\nexport const frameYieldMs = 5;\nexport const continuousYieldMs = 50;\nexport const maxYieldMs = 300;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\ntype Heap = Array<Node>;\ntype Node = {|\n  id: number,\n  sortIndex: number,\n|};\n\nexport function push(heap: Heap, node: Node): void {\n  const index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\n\nexport function peek(heap: Heap): Node | null {\n  return heap.length === 0 ? null : heap[0];\n}\n\nexport function pop(heap: Heap): Node | null {\n  if (heap.length === 0) {\n    return null;\n  }\n  const first = heap[0];\n  const last = heap.pop();\n  if (last !== first) {\n    heap[0] = last;\n    siftDown(heap, last, 0);\n  }\n  return first;\n}\n\nfunction siftUp(heap, node, i) {\n  let index = i;\n  while (index > 0) {\n    const parentIndex = (index - 1) >>> 1;\n    const parent = heap[parentIndex];\n    if (compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  let index = i;\n  const length = heap.length;\n  const halfLength = length >>> 1;\n  while (index < halfLength) {\n    const leftIndex = (index + 1) * 2 - 1;\n    const left = heap[leftIndex];\n    const rightIndex = leftIndex + 1;\n    const right = heap[rightIndex];\n\n    // If the left or right node is smaller, swap with the smaller of those.\n    if (compare(left, node) < 0) {\n      if (rightIndex < length && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (rightIndex < length && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  const diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type PriorityLevel = 0 | 1 | 2 | 3 | 4 | 5;\n\n// TODO: Use symbols?\nexport const NoPriority = 0;\nexport const ImmediatePriority = 1;\nexport const UserBlockingPriority = 2;\nexport const NormalPriority = 3;\nexport const LowPriority = 4;\nexport const IdlePriority = 5;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {PriorityLevel} from './SchedulerPriorities';\nimport {enableProfiling} from './SchedulerFeatureFlags';\n\nlet runIdCounter: number = 0;\nlet mainThreadIdCounter: number = 0;\n\n// Bytes per element is 4\nconst INITIAL_EVENT_LOG_SIZE = 131072;\nconst MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes\n\nlet eventLogSize = 0;\nlet eventLogBuffer = null;\nlet eventLog = null;\nlet eventLogIndex = 0;\n\nconst TaskStartEvent = 1;\nconst TaskCompleteEvent = 2;\nconst TaskErrorEvent = 3;\nconst TaskCancelEvent = 4;\nconst TaskRunEvent = 5;\nconst TaskYieldEvent = 6;\nconst SchedulerSuspendEvent = 7;\nconst SchedulerResumeEvent = 8;\n\nfunction logEvent(entries) {\n  if (eventLog !== null) {\n    const offset = eventLogIndex;\n    eventLogIndex += entries.length;\n    if (eventLogIndex + 1 > eventLogSize) {\n      eventLogSize *= 2;\n      if (eventLogSize > MAX_EVENT_LOG_SIZE) {\n        // Using console['error'] to evade Babel and ESLint\n        console['error'](\n          \"Scheduler Profiling: Event log exceeded maximum size. Don't \" +\n            'forget to call `stopLoggingProfilingEvents()`.',\n        );\n        stopLoggingProfilingEvents();\n        return;\n      }\n      const newEventLog = new Int32Array(eventLogSize * 4);\n      newEventLog.set(eventLog);\n      eventLogBuffer = newEventLog.buffer;\n      eventLog = newEventLog;\n    }\n    eventLog.set(entries, offset);\n  }\n}\n\nexport function startLoggingProfilingEvents(): void {\n  eventLogSize = INITIAL_EVENT_LOG_SIZE;\n  eventLogBuffer = new ArrayBuffer(eventLogSize * 4);\n  eventLog = new Int32Array(eventLogBuffer);\n  eventLogIndex = 0;\n}\n\nexport function stopLoggingProfilingEvents(): ArrayBuffer | null {\n  const buffer = eventLogBuffer;\n  eventLogSize = 0;\n  eventLogBuffer = null;\n  eventLog = null;\n  eventLogIndex = 0;\n  return buffer;\n}\n\nexport function markTaskStart(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      // performance.now returns a float, representing milliseconds. When the\n      // event is logged, it's coerced to an int. Convert to microseconds to\n      // maintain extra degrees of precision.\n      logEvent([TaskStartEvent, ms * 1000, task.id, task.priorityLevel]);\n    }\n  }\n}\n\nexport function markTaskCompleted(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskCompleteEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskCanceled(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskCancelEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskErrored(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskErrorEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskRun(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    runIdCounter++;\n\n    if (eventLog !== null) {\n      logEvent([TaskRunEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\n\nexport function markTaskYield(task: {id: number, ...}, ms: number) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskYieldEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\n\nexport function markSchedulerSuspended(ms: number) {\n  if (enableProfiling) {\n    mainThreadIdCounter++;\n\n    if (eventLog !== null) {\n      logEvent([SchedulerSuspendEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\n\nexport function markSchedulerUnsuspended(ms: number) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([SchedulerResumeEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/* eslint-disable no-var */\n/* eslint-disable react-internal/prod-error-codes */\n\nimport {\n  enableSchedulerDebugging,\n  enableProfiling,\n} from '../SchedulerFeatureFlags';\nimport {push, pop, peek} from '../SchedulerMinHeap';\n\n// TODO: Use symbols?\nimport {\n  ImmediatePriority,\n  UserBlockingPriority,\n  NormalPriority,\n  LowPriority,\n  IdlePriority,\n} from '../SchedulerPriorities';\nimport {\n  markTaskRun,\n  markTaskYield,\n  markTaskCompleted,\n  markTaskCanceled,\n  markTaskErrored,\n  markSchedulerSuspended,\n  markSchedulerUnsuspended,\n  markTaskStart,\n  stopLoggingProfilingEvents,\n  startLoggingProfilingEvents,\n} from '../SchedulerProfiling';\n\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\nvar maxSigned31BitInt = 1073741823;\n\n// Times out immediately\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1;\n// Eventually times out\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000;\n// Never times out\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;\n\n// Tasks are stored on a min heap\nvar taskQueue = [];\nvar timerQueue = [];\n\n// Incrementing id counter. Used to maintain insertion order.\nvar taskIdCounter = 1;\n\n// Pausing the scheduler is useful for debugging.\nvar isSchedulerPaused = false;\n\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority;\n\n// This is set while performing work, to prevent re-entrance.\nvar isPerformingWork = false;\n\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false;\n\nlet currentMockTime: number = 0;\nlet scheduledCallback: ((boolean, number) => void) | null = null;\nlet scheduledTimeout: (number => void) | null = null;\nlet timeoutTime: number = -1;\nlet yieldedValues: Array<mixed> | null = null;\nlet expectedNumberOfYields: number = -1;\nlet didStop: boolean = false;\nlet isFlushing: boolean = false;\nlet needsPaint: boolean = false;\nlet shouldYieldForPaint: boolean = false;\n\nvar disableYieldValue = false;\n\nfunction setDisableYieldValue(newValue) {\n  disableYieldValue = newValue;\n}\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  let timer = peek(timerQueue);\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n      if (enableProfiling) {\n        markTaskStart(timer, currentTime);\n        timer.isQueued = true;\n      }\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      const firstTimer = peek(timerQueue);\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n  if (enableProfiling) {\n    markSchedulerUnsuspended(initialTime);\n  }\n\n  // We'll need a host callback the next time work is scheduled.\n  isHostCallbackScheduled = false;\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  const previousPriorityLevel = currentPriorityLevel;\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          const currentTime = getCurrentTime();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n        throw error;\n      }\n    } else {\n      // No catch in prod code path.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n    if (enableProfiling) {\n      const currentTime = getCurrentTime();\n      markSchedulerSuspended(currentTime);\n    }\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n  while (\n    currentTask !== null &&\n    !(enableSchedulerDebugging && isSchedulerPaused)\n  ) {\n    if (\n      currentTask.expirationTime > currentTime &&\n      (!hasTimeRemaining || shouldYieldToHost())\n    ) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n    const callback = currentTask.callback;\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      if (enableProfiling) {\n        markTaskRun(currentTask, currentTime);\n      }\n      const continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = getCurrentTime();\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n        if (enableProfiling) {\n          markTaskYield(currentTask, currentTime);\n        }\n      } else {\n        if (enableProfiling) {\n          markTaskCompleted(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n    currentTask = peek(taskQueue);\n  }\n  // Return whether there's additional work\n  if (currentTask !== null) {\n    return true;\n  } else {\n    const firstTimer = peek(timerQueue);\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function() {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = getCurrentTime();\n\n  var startTime;\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  var timeout;\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n    case NormalPriority:\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n  }\n\n  var expirationTime = startTime + timeout;\n\n  var newTask = {\n    id: taskIdCounter++,\n    callback,\n    priorityLevel,\n    startTime,\n    expirationTime,\n    sortIndex: -1,\n  };\n  if (enableProfiling) {\n    newTask.isQueued = false;\n  }\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      }\n      // Schedule a timeout.\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n    if (enableProfiling) {\n      markTaskStart(newTask, currentTime);\n      newTask.isQueued = true;\n    }\n    // Schedule a host callback, if needed. If we're already performing work,\n    // wait until the next time we yield.\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n  isSchedulerPaused = true;\n}\n\nfunction unstable_continueExecution() {\n  isSchedulerPaused = false;\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  if (enableProfiling) {\n    if (task.isQueued) {\n      const currentTime = getCurrentTime();\n      markTaskCanceled(task, currentTime);\n      task.isQueued = false;\n    }\n  }\n\n  // Null out the callback to indicate the task has been canceled. (Can't\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nfunction requestHostCallback(callback: boolean => void) {\n  scheduledCallback = callback;\n}\n\nfunction requestHostTimeout(callback: number => void, ms: number) {\n  scheduledTimeout = callback;\n  timeoutTime = currentMockTime + ms;\n}\n\nfunction cancelHostTimeout(): void {\n  scheduledTimeout = null;\n  timeoutTime = -1;\n}\n\nfunction shouldYieldToHost(): boolean {\n  if (\n    (expectedNumberOfYields === 0 && yieldedValues === null) ||\n    (expectedNumberOfYields !== -1 &&\n      yieldedValues !== null &&\n      yieldedValues.length >= expectedNumberOfYields) ||\n    (shouldYieldForPaint && needsPaint)\n  ) {\n    // We yielded at least as many values as expected. Stop flushing.\n    didStop = true;\n    return true;\n  }\n  return false;\n}\n\nfunction getCurrentTime(): number {\n  return currentMockTime;\n}\n\nfunction forceFrameRate() {\n  // No-op\n}\n\nfunction reset() {\n  if (isFlushing) {\n    throw new Error('Cannot reset while already flushing work.');\n  }\n  currentMockTime = 0;\n  scheduledCallback = null;\n  scheduledTimeout = null;\n  timeoutTime = -1;\n  yieldedValues = null;\n  expectedNumberOfYields = -1;\n  didStop = false;\n  isFlushing = false;\n  needsPaint = false;\n}\n\n// Should only be used via an assertion helper that inspects the yielded values.\nfunction unstable_flushNumberOfYields(count: number): void {\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n  if (scheduledCallback !== null) {\n    const cb = scheduledCallback;\n    expectedNumberOfYields = count;\n    isFlushing = true;\n    try {\n      let hasMoreWork = true;\n      do {\n        hasMoreWork = cb(true, currentMockTime);\n      } while (hasMoreWork && !didStop);\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n    } finally {\n      expectedNumberOfYields = -1;\n      didStop = false;\n      isFlushing = false;\n    }\n  }\n}\n\nfunction unstable_flushUntilNextPaint(): void {\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n  if (scheduledCallback !== null) {\n    const cb = scheduledCallback;\n    shouldYieldForPaint = true;\n    needsPaint = false;\n    isFlushing = true;\n    try {\n      let hasMoreWork = true;\n      do {\n        hasMoreWork = cb(true, currentMockTime);\n      } while (hasMoreWork && !didStop);\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n    } finally {\n      shouldYieldForPaint = false;\n      didStop = false;\n      isFlushing = false;\n    }\n  }\n}\n\nfunction unstable_flushExpired() {\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n  if (scheduledCallback !== null) {\n    isFlushing = true;\n    try {\n      const hasMoreWork = scheduledCallback(false, currentMockTime);\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n    } finally {\n      isFlushing = false;\n    }\n  }\n}\n\nfunction unstable_flushAllWithoutAsserting(): boolean {\n  // Returns false if no work was flushed.\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n  if (scheduledCallback !== null) {\n    const cb = scheduledCallback;\n    isFlushing = true;\n    try {\n      let hasMoreWork = true;\n      do {\n        hasMoreWork = cb(true, currentMockTime);\n      } while (hasMoreWork);\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n      return true;\n    } finally {\n      isFlushing = false;\n    }\n  } else {\n    return false;\n  }\n}\n\nfunction unstable_clearYields(): Array<mixed> {\n  if (yieldedValues === null) {\n    return [];\n  }\n  const values = yieldedValues;\n  yieldedValues = null;\n  return values;\n}\n\nfunction unstable_flushAll(): void {\n  if (yieldedValues !== null) {\n    throw new Error(\n      'Log is not empty. Assert on the log of yielded values before ' +\n        'flushing additional work.',\n    );\n  }\n  unstable_flushAllWithoutAsserting();\n  if (yieldedValues !== null) {\n    throw new Error(\n      'While flushing work, something yielded a value. Use an ' +\n        'assertion helper to assert on the log of yielded values, e.g. ' +\n        'expect(Scheduler).toFlushAndYield([...])',\n    );\n  }\n}\n\nfunction unstable_yieldValue(value: mixed): void {\n  // eslint-disable-next-line react-internal/no-production-logging\n  if (console.log.name === 'disabledLog' || disableYieldValue) {\n    // If console.log has been patched, we assume we're in render\n    // replaying and we ignore any values yielding in the second pass.\n    return;\n  }\n  if (yieldedValues === null) {\n    yieldedValues = [value];\n  } else {\n    yieldedValues.push(value);\n  }\n}\n\nfunction unstable_advanceTime(ms: number) {\n  // eslint-disable-next-line react-internal/no-production-logging\n  if (console.log.name === 'disabledLog' || disableYieldValue) {\n    // If console.log has been patched, we assume we're in render\n    // replaying and we ignore any time advancing in the second pass.\n    return;\n  }\n  currentMockTime += ms;\n  if (scheduledTimeout !== null && timeoutTime <= currentMockTime) {\n    scheduledTimeout(currentMockTime);\n    timeoutTime = -1;\n    scheduledTimeout = null;\n  }\n}\n\nfunction requestPaint() {\n  needsPaint = true;\n}\n\nexport {\n  ImmediatePriority as unstable_ImmediatePriority,\n  UserBlockingPriority as unstable_UserBlockingPriority,\n  NormalPriority as unstable_NormalPriority,\n  IdlePriority as unstable_IdlePriority,\n  LowPriority as unstable_LowPriority,\n  unstable_runWithPriority,\n  unstable_next,\n  unstable_scheduleCallback,\n  unstable_cancelCallback,\n  unstable_wrapCallback,\n  unstable_getCurrentPriorityLevel,\n  shouldYieldToHost as unstable_shouldYield,\n  requestPaint as unstable_requestPaint,\n  unstable_continueExecution,\n  unstable_pauseExecution,\n  unstable_getFirstCallbackNode,\n  getCurrentTime as unstable_now,\n  forceFrameRate as unstable_forceFrameRate,\n  unstable_flushAllWithoutAsserting,\n  unstable_flushNumberOfYields,\n  unstable_flushExpired,\n  unstable_clearYields,\n  unstable_flushUntilNextPaint,\n  unstable_flushAll,\n  unstable_yieldValue,\n  unstable_advanceTime,\n  reset,\n  setDisableYieldValue as unstable_setDisableYieldValue,\n};\n\nexport const unstable_Profiling = enableProfiling\n  ? {\n      startLoggingProfilingEvents,\n      stopLoggingProfilingEvents,\n    }\n  : null;\n"],"names":["enableSchedulerDebugging","enableProfiling","push","heap","node","index","length","siftUp","peek","pop","first","last","siftDown","i","parentIndex","parent","compare","halfLength","leftIndex","left","rightIndex","right","a","b","diff","sortIndex","id","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","markTaskErrored","task","ms","maxSigned31BitInt","IMMEDIATE_PRIORITY_TIMEOUT","USER_BLOCKING_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","LOW_PRIORITY_TIMEOUT","IDLE_PRIORITY_TIMEOUT","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","currentMockTime","scheduledCallback","scheduledTimeout","timeoutTime","yieldedValues","expectedNumberOfYields","didStop","isFlushing","needsPaint","shouldYieldForPaint","disableYieldValue","setDisableYieldValue","newValue","advanceTimers","currentTime","timer","callback","startTime","expirationTime","handleTimeout","requestHostCallback","flushWork","firstTimer","requestHostTimeout","hasTimeRemaining","initialTime","cancelHostTimeout","previousPriorityLevel","workLoop","error","getCurrentTime","isQueued","shouldYieldToHost","priorityLevel","didUserCallbackTimeout","continuationCallback","unstable_runWithPriority","eventHandler","unstable_next","unstable_wrapCallback","parentPriorityLevel","apply","arguments","unstable_scheduleCallback","options","delay","timeout","newTask","unstable_pauseExecution","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_cancelCallback","unstable_getCurrentPriorityLevel","forceFrameRate","reset","Error","unstable_flushNumberOfYields","count","cb","hasMoreWork","unstable_flushUntilNextPaint","unstable_flushExpired","unstable_flushAllWithoutAsserting","unstable_clearYields","values","unstable_flushAll","unstable_yieldValue","value","console","log","name","unstable_advanceTime","requestPaint","unstable_Profiling"],"mappings":"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"}