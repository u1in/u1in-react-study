{"version":3,"file":"react-dom.production.min.js","sources":["../../../../packages/shared/formatProdErrorMessage.js","../../../../packages/react-reconciler/src/ReactWorkTags.js","../../../../packages/shared/ReactFeatureFlags.js","../../../../packages/react-dom/src/events/EventRegistry.js","../../../../packages/shared/ExecutionEnvironment.js","../../../../packages/shared/hasOwnProperty.js","../../../../packages/react-dom/src/shared/DOMProperty.js","../../../../packages/react-dom/src/shared/sanitizeURL.js","../../../../packages/react-dom/src/client/DOMPropertyOperations.js","../../../../packages/shared/ReactSharedInternals.js","../../../../packages/shared/ReactSymbols.js","../../../../packages/shared/assign.js","../../../../packages/shared/ReactComponentStackFrame.js","../../../../packages/react-reconciler/src/ReactFiberComponentStack.js","../../../../packages/shared/getComponentNameFromType.js","../../../../packages/react-reconciler/src/getComponentNameFromFiber.js","../../../../packages/react-reconciler/src/ReactCurrentFiber.js","../../../../packages/react-dom/src/client/ToStringValue.js","../../../../packages/react-dom/src/client/inputValueTracking.js","../../../../packages/react-dom/src/client/getActiveElement.js","../../../../packages/react-dom/src/client/ReactDOMInput.js","../../../../packages/react-dom/src/client/ReactDOMOption.js","../../../../packages/shared/isArray.js","../../../../packages/react-dom/src/client/ReactDOMSelect.js","../../../../packages/react-dom/src/client/ReactDOMTextarea.js","../../../../packages/react-dom/src/shared/DOMNamespaces.js","../../../../packages/react-dom/src/client/createMicrosoftUnsafeLocalFunction.js","../../../../packages/react-dom/src/client/setInnerHTML.js","../../../../packages/react-dom/src/shared/HTMLNodeType.js","../../../../packages/react-dom/src/client/setTextContent.js","../../../../packages/react-dom/src/shared/CSSProperty.js","../../../../packages/react-dom/src/shared/dangerousStyleValue.js","../../../../packages/react-dom/src/client/CSSPropertyOperations.js","../../../../packages/react-dom/src/shared/omittedCloseTags.js","../../../../packages/react-dom/src/shared/voidElementTags.js","../../../../packages/react-dom/src/shared/assertValidProps.js","../../../../packages/react-dom/src/shared/isCustomComponent.js","../../../../packages/react-dom/src/events/EventSystemFlags.js","../../../../packages/react-dom/src/events/CurrentReplayingEvent.js","../../../../packages/react-dom/src/events/getEventTarget.js","../../../../packages/react-dom/src/events/ReactDOMControlledComponent.js","../../../../packages/react-dom/src/events/ReactDOMUpdateBatching.js","../../../../packages/react-dom/src/events/getListener.js","../../../../packages/react-dom/src/events/checkPassiveEvents.js","../../../../packages/shared/invokeGuardedCallbackImpl.js","../../../../packages/shared/ReactErrorUtils.js","../../../../packages/shared/ReactInstanceMap.js","../../../../packages/react-reconciler/src/ReactFiberFlags.js","../../../../packages/react-reconciler/src/ReactFiberTreeReflection.js","../../../../packages/react-reconciler/src/Scheduler.js","../../../../packages/react-reconciler/src/ReactFiberDevToolsHook.old.js","../../../../packages/react-reconciler/src/ReactTypeOfMode.js","../../../../packages/react-reconciler/src/clz32.js","../../../../packages/react-reconciler/src/ReactFiberLane.old.js","../../../../packages/react-reconciler/src/ReactEventPriorities.old.js","../../../../packages/react-reconciler/src/ReactFiberShellHydration.js","../../../../packages/react-dom/src/events/ReactDOMEventReplaying.js","../../../../packages/react-dom/src/events/ReactDOMEventListener.js","../../../../packages/react-dom/src/events/EventListener.js","../../../../packages/react-dom/src/events/FallbackCompositionState.js","../../../../packages/react-dom/src/events/getEventCharCode.js","../../../../packages/react-dom/src/events/SyntheticEvent.js","../../../../packages/react-dom/src/events/plugins/BeforeInputEventPlugin.js","../../../../packages/react-dom/src/events/isTextInputElement.js","../../../../packages/react-dom/src/events/isEventSupported.js","../../../../packages/react-dom/src/events/plugins/ChangeEventPlugin.js","../../../../packages/react-dom/src/events/plugins/EnterLeaveEventPlugin.js","../../../../packages/shared/objectIs.js","../../../../packages/shared/shallowEqual.js","../../../../packages/react-dom/src/client/getNodeForCharacterOffset.js","../../../../packages/react-dom/src/client/ReactDOMSelection.js","../../../../packages/react-dom/src/client/ReactInputSelection.js","../../../../packages/react-dom/src/events/plugins/SelectEventPlugin.js","../../../../packages/react-dom/src/events/getVendorPrefixedEventName.js","../../../../packages/react-dom/src/events/DOMEventNames.js","../../../../packages/react-dom/src/events/DOMEventProperties.js","../../../../packages/react-dom/src/events/plugins/SimpleEventPlugin.js","../../../../packages/react-dom/src/events/DOMPluginEventSystem.js","../../../../packages/react-dom/src/client/ReactDOMComponent.js","../../../../packages/react-dom/src/client/ReactDOMHostConfig.js","../../../../packages/react-dom/src/client/ReactDOMComponentTree.js","../../../../packages/shared/checkPropTypes.js","../../../../packages/react-reconciler/src/ReactFiberStack.old.js","../../../../packages/react-reconciler/src/ReactFiberContext.old.js","../../../../packages/react-reconciler/src/ReactRootTags.js","../../../../packages/react-reconciler/src/ReactFiberSyncTaskQueue.old.js","../../../../packages/react-reconciler/src/ReactFiberTreeContext.old.js","../../../../packages/react-reconciler/src/ReactFiberHydrationContext.old.js","../../../../packages/react-reconciler/src/ReactFiberTransition.js","../../../../packages/react-reconciler/src/ReactChildFiber.old.js","../../../../packages/react-reconciler/src/ReactFiberNewContext.old.js","../../../../packages/react-reconciler/src/ReactFiberConcurrentUpdates.old.js","../../../../packages/react-reconciler/src/ReactFiberClassUpdateQueue.old.js","../../../../packages/react-reconciler/src/ReactFiberHostContext.old.js","../../../../packages/react-reconciler/src/ReactFiberSuspenseContext.old.js","../../../../packages/react-reconciler/src/ReactFiberSuspenseComponent.old.js","../../../../packages/react-reconciler/src/ReactHookEffectTags.js","../../../../packages/react-reconciler/src/ReactMutableSource.old.js","../../../../packages/react-reconciler/src/ReactFiberCacheComponent.old.js","../../../../packages/react-reconciler/src/ReactFiberHooks.old.js","../../../../packages/react-reconciler/src/ReactProfilerTimer.old.js","../../../../packages/react-reconciler/src/ReactFiberLazyComponent.old.js","../../../../packages/react-reconciler/src/ReactFiberClassComponent.old.js","../../../../packages/react-reconciler/src/ReactCapturedValue.js","../../../../packages/react-reconciler/src/ReactFiberErrorDialog.js","../../../../packages/react-reconciler/src/ReactFiberErrorLogger.js","../../../../packages/react-reconciler/src/ReactFiberThrow.old.js","../../../../packages/react-reconciler/src/ReactFiberTransition.old.js","../../../../packages/react-reconciler/src/ReactFiberBeginWork.old.js","../../../../packages/react-reconciler/src/ReactFiberCompleteWork.old.js","../../../../packages/react-reconciler/src/ReactFiberUnwindWork.old.js","../../../../packages/react-reconciler/src/ReactFiberCommitWork.old.js","../../../../packages/react-reconciler/src/ReactFiberAct.old.js","../../../../packages/react-reconciler/src/ReactFiberWorkLoop.old.js","../../../../packages/react-reconciler/src/ReactFiber.old.js","../../../../packages/react-reconciler/src/ReactFiberRoot.old.js","../../../../packages/shared/ReactVersion.js","../../../../packages/react-reconciler/src/ReactPortal.js","../../../../packages/react-reconciler/src/ReactFiberReconciler.old.js","../../../../packages/react-dom/src/client/ReactDOMRoot.js","../../../../packages/react-dom/src/client/ReactDOMLegacy.js","../../../../packages/react-dom/src/client/ReactDOM.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// Do not require this module directly! Use normal `invariant` calls with\n// template literal strings. The messages will be replaced with error codes\n// during build.\n\nfunction formatProdErrorMessage(code) {\n  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;\n  for (let i = 1; i < arguments.length; i++) {\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return (\n    `Minified React error #${code}; visit ${url} for the full message or ` +\n    'use the non-minified dev environment for full errors and additional ' +\n    'helpful warnings.'\n  );\n}\n\nexport default formatProdErrorMessage;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type WorkTag =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24\n  | 25;\n\nexport const FunctionComponent = 0;\nexport const ClassComponent = 1;\nexport const IndeterminateComponent = 2; // Before we know whether it is function or class\nexport const HostRoot = 3; // Root of a host tree. Could be nested inside another node.\nexport const HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\nexport const HostComponent = 5;\nexport const HostText = 6;\nexport const Fragment = 7;\nexport const Mode = 8;\nexport const ContextConsumer = 9;\nexport const ContextProvider = 10;\nexport const ForwardRef = 11;\nexport const Profiler = 12;\nexport const SuspenseComponent = 13;\nexport const MemoComponent = 14;\nexport const SimpleMemoComponent = 15;\nexport const LazyComponent = 16;\nexport const IncompleteClassComponent = 17;\nexport const DehydratedFragment = 18;\nexport const SuspenseListComponent = 19;\nexport const ScopeComponent = 21;\nexport const OffscreenComponent = 22;\nexport const LegacyHiddenComponent = 23;\nexport const CacheComponent = 24;\nexport const TracingMarkerComponent = 25;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\n// -----------------------------------------------------------------------------\n// Land or remove (zero effort)\n//\n// Flags that can likely be deleted or landed without consequences\n// -----------------------------------------------------------------------------\n\nexport const warnAboutDeprecatedLifecycles = true;\nexport const enableComponentStackLocations = true;\nexport const disableSchedulerTimeoutBasedOnReactExpirationTime = false;\n\n// -----------------------------------------------------------------------------\n// Land or remove (moderate effort)\n//\n// Flags that can be probably deleted or landed, but might require extra effort\n// like migrating internal callers or performance testing.\n// -----------------------------------------------------------------------------\n\n// This is blocked on adding a symbol polyfill to www.\nexport const enableSymbolFallbackForWWW = false;\n\n// This rolled out to 10% public in www, so we should be able to land, but some\n// internal tests need to be updated. The open source behavior is correct.\nexport const skipUnmountedBoundaries = true;\n\n// Destroy layout effects for components that are hidden because something\n// suspended in an update and recreate them when they are shown again (after the\n// suspended boundary has resolved). Note that this should be an uncommon use\n// case and can be avoided by using the transition API.\n//\n// TODO: Finish rolling out in www\nexport const enableSuspenseLayoutEffectSemantics = true;\n\n// TODO: Finish rolling out in www\nexport const enableClientRenderFallbackOnTextMismatch = true;\n\n// TODO: Need to review this code one more time before landing\nexport const enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay = true;\n\n// Recoil still uses useMutableSource in www, need to delete\nexport const enableUseMutableSource = false;\n\n// Not sure if www still uses this. We don't have a replacement but whatever we\n// replace it with will likely be different than what's already there, so we\n// probably should just delete it as long as nothing in www relies on it.\nexport const enableSchedulerDebugging = false;\n\n// Need to remove didTimeout argument from Scheduler before landing\nexport const disableSchedulerTimeoutInWorkLoop = false;\n\n// -----------------------------------------------------------------------------\n// Slated for removal in the future (significant effort)\n//\n// These are experiments that didn't work out, and never shipped, but we can't\n// delete from the codebase until we migrate internal callers.\n// -----------------------------------------------------------------------------\n\n// Add a callback property to suspense to notify which promises are currently\n// in the update queue. This allows reporting and tracing of what is causing\n// the user to see a loading state.\n//\n// Also allows hydration callbacks to fire when a dehydrated boundary gets\n// hydrated or deleted.\n//\n// This will eventually be replaced by the Transition Tracing proposal.\nexport const enableSuspenseCallback = false;\n\n// Experimental Scope support.\nexport const enableScopeAPI = false;\n\n// Experimental Create Event Handle API.\nexport const enableCreateEventHandleAPI = false;\n\n// This controls whether you get the `.old` modules or the `.new` modules in\n// the react-reconciler package.\nexport const enableNewReconciler = false;\n\n// Support legacy Primer support on internal FB www\nexport const enableLegacyFBSupport = false;\n\n// -----------------------------------------------------------------------------\n// Ongoing experiments\n//\n// These are features that we're either actively exploring or are reasonably\n// likely to include in an upcoming release.\n// -----------------------------------------------------------------------------\n\nexport const enableCache = __EXPERIMENTAL__;\nexport const enableCacheElement = __EXPERIMENTAL__;\n\nexport const enableTransitionTracing = false;\n\n// No known bugs, but needs performance testing\nexport const enableLazyContextPropagation = false;\n\n// FB-only usage. The new API has different semantics.\nexport const enableLegacyHidden = false;\n\n// Enables unstable_avoidThisFallback feature in Fiber\nexport const enableSuspenseAvoidThisFallback = false;\n// Enables unstable_avoidThisFallback feature in Fizz\nexport const enableSuspenseAvoidThisFallbackFizz = false;\n\nexport const enableCPUSuspense = __EXPERIMENTAL__;\n\n// When a node is unmounted, recurse into the Fiber subtree and clean out\n// references. Each level cleans up more fiber fields than the previous level.\n// As far as we know, React itself doesn't leak, but because the Fiber contains\n// cycles, even a single leak in product code can cause us to retain large\n// amounts of memory.\n//\n// The long term plan is to remove the cycles, but in the meantime, we clear\n// additional fields to mitigate.\n//\n// It's an enum so that we can experiment with different levels of\n// aggressiveness.\nexport const deletedTreeCleanUpLevel = 3;\n\n// -----------------------------------------------------------------------------\n// Chopping Block\n//\n// Planned feature deprecations and breaking changes. Sorted roughly in order of\n// when we we plan to enable them.\n// -----------------------------------------------------------------------------\n\n// This flag enables Strict Effects by default. We're not turning this on until\n// after 18 because it requires migration work. Recommendation is to use\n// <StrictMode /> to gradually upgrade components.\n// If TRUE, trees rendered with createRoot will be StrictEffectsMode.\n// If FALSE, these trees will be StrictLegacyMode.\nexport const createRootStrictEffectsByDefault = false;\n\nexport const disableModulePatternComponents = false;\n\nexport const disableLegacyContext = false;\n\nexport const enableUseRefAccessWarning = false;\n\n// Enables time slicing for updates that aren't wrapped in startTransition.\nexport const enableSyncDefaultUpdates = true;\n\n// Adds an opt-in to time slicing for updates that aren't wrapped in\n// startTransition. Only relevant when enableSyncDefaultUpdates is disabled.\nexport const allowConcurrentByDefault = false;\n\n// Updates that occur in the render phase are not officially supported. But when\n// they do occur, we defer them to a subsequent render by picking a lane that's\n// not currently rendering. We treat them the same as if they came from an\n// interleaved event. Remove this flag once we have migrated to the\n// new behavior.\n// NOTE: Not sure if we'll end up doing this or not.\nexport const deferRenderPhaseUpdateToNextBatch = false;\n\n// -----------------------------------------------------------------------------\n// React DOM Chopping Block\n//\n// Similar to main Chopping Block but only flags related to React DOM. These are\n// grouped because we will likely batch all of them into a single major release.\n// -----------------------------------------------------------------------------\n\n// Disable support for comment nodes as React DOM containers. Already disabled\n// in open source, but www codebase still relies on it. Need to remove.\nexport const disableCommentsAsDOMContainers = true;\n\n// Disable javascript: URL strings in href for XSS protection.\nexport const disableJavaScriptURLs = false;\n\nexport const enableTrustedTypesIntegration = false;\n\n// Prevent the value and checked attributes from syncing with their related\n// DOM properties\nexport const disableInputAttributeSyncing = false;\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty\n// strings. This prevents e.g. <img src=\"\"> from making an unnecessary HTTP\n// request for certain browsers.\nexport const enableFilterEmptyStringAttributesDOM = false;\n\n// Changes the behavior for rendering custom elements in both server rendering\n// and client rendering, mostly to allow JSX attributes to apply to the custom\n// element's object properties instead of only HTML attributes.\n// https://github.com/facebook/react/issues/11347\nexport const enableCustomElementPropertySupport = __EXPERIMENTAL__;\n\n// Disables children for <textarea> elements\nexport const disableTextareaChildren = false;\n\n// -----------------------------------------------------------------------------\n// JSX Chopping Block\n//\n// Similar to main Chopping Block but only flags related to JSX. These are\n// grouped because we will likely batch all of them into a single major release.\n// -----------------------------------------------------------------------------\n\n// New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107\n\n// Part of the simplification of React.createElement so we can eventually move\n// from React.createElement to React.jsx\n// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md\nexport const warnAboutDefaultPropsOnFunctionComponents = true; // deprecate later, not 18.0\n\n// Enables a warning when trying to spread a 'key' to an element;\n// a deprecated pattern we want to get rid of in the future\nexport const warnAboutSpreadingKeyToJSX = true;\n\nexport const warnAboutStringRefs = true;\n\n// -----------------------------------------------------------------------------\n// Debugging and DevTools\n// -----------------------------------------------------------------------------\n\n// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,\n// for an experimental timeline tool.\nexport const enableSchedulingProfiler = __PROFILE__;\n\n// Helps identify side effects in render-phase lifecycle hooks and setState\n// reducers by double invoking them in StrictLegacyMode.\nexport const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\n\n// Helps identify code that is not safe for planned Offscreen API and Suspense semantics;\n// this feature flag only impacts StrictEffectsMode.\nexport const enableStrictEffects = __DEV__;\n\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\nexport const replayFailedUnitOfWorkWithInvokeGuardedCallback = __DEV__;\n\n// Gather advanced timing metrics for Profiler subtrees.\nexport const enableProfilerTimer = __PROFILE__;\n\n// Record durations for commit and passive effects phases.\nexport const enableProfilerCommitHooks = __PROFILE__;\n\n// Phase param passed to onRender callback differentiates between an \"update\" and a \"cascading-update\".\nexport const enableProfilerNestedUpdatePhase = __PROFILE__;\n\n// Adds verbose console logging for e.g. state updates, suspense, and work loop\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\nexport const enableDebugTracing = false;\n\n// Track which Fiber(s) schedule render work.\nexport const enableUpdaterTracking = __PROFILE__;\n\n// Only enabled in RN, related to enableComponentStackLocations\nexport const disableNativeComponentFrames = false;\nexport const enableServerContext = __EXPERIMENTAL__;\n\n// Internal only.\nexport const enableGetInspectorDataForInstanceInProduction = false;\n\n// Profiler API accepts a function to be called when a nested update is scheduled.\n// This callback accepts the component type (class instance or function) the update is scheduled for.\nexport const enableProfilerNestedUpdateScheduledHook = false;\n\nexport const consoleManagedByDevToolsDuringStrictMode = true;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {DOMEventName} from './DOMEventNames';\n\nimport {enableCreateEventHandleAPI} from 'shared/ReactFeatureFlags';\n\nexport const allNativeEvents: Set<DOMEventName> = new Set();\n\nif (enableCreateEventHandleAPI) {\n  allNativeEvents.add('beforeblur');\n  allNativeEvents.add('afterblur');\n}\n\n/**\n * Mapping from registration name to event name\n */\nexport const registrationNameDependencies = {};\n\n/**\n * Mapping from lowercase registration names to the properly cased version,\n * used to warn in the case of missing event handlers. Available\n * only in __DEV__.\n * @type {Object}\n */\nexport const possibleRegistrationNames = __DEV__ ? {} : (null: any);\n// Trust the developer to only use possibleRegistrationNames in __DEV__\n\nexport function registerTwoPhaseEvent(\n  registrationName: string,\n  dependencies: Array<DOMEventName>,\n): void {\n  registerDirectEvent(registrationName, dependencies);\n  registerDirectEvent(registrationName + 'Capture', dependencies);\n}\n\nexport function registerDirectEvent(\n  registrationName: string,\n  dependencies: Array<DOMEventName>,\n) {\n  if (__DEV__) {\n    if (registrationNameDependencies[registrationName]) {\n      console.error(\n        'EventRegistry: More than one plugin attempted to publish the same ' +\n          'registration name, `%s`.',\n        registrationName,\n      );\n    }\n  }\n\n  registrationNameDependencies[registrationName] = dependencies;\n\n  if (__DEV__) {\n    const lowerCasedName = registrationName.toLowerCase();\n    possibleRegistrationNames[lowerCasedName] = registrationName;\n\n    if (registrationName === 'onDoubleClick') {\n      possibleRegistrationNames.ondblclick = registrationName;\n    }\n  }\n\n  for (let i = 0; i < dependencies.length; i++) {\n    allNativeEvents.add(dependencies[i]);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport const canUseDOM: boolean = !!(\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport default hasOwnProperty;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  enableFilterEmptyStringAttributesDOM,\n  enableCustomElementPropertySupport,\n} from 'shared/ReactFeatureFlags';\nimport hasOwnProperty from 'shared/hasOwnProperty';\n\ntype PropertyType = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n// A reserved attribute.\n// It is handled by React separately and shouldn't be written to the DOM.\nexport const RESERVED = 0;\n\n// A simple string attribute.\n// Attributes that aren't in the filter are presumed to have this type.\nexport const STRING = 1;\n\n// A string attribute that accepts booleans in React. In HTML, these are called\n// \"enumerated\" attributes with \"true\" and \"false\" as possible values.\n// When true, it should be set to a \"true\" string.\n// When false, it should be set to a \"false\" string.\nexport const BOOLEANISH_STRING = 2;\n\n// A real boolean attribute.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\nexport const BOOLEAN = 3;\n\n// An attribute that can be used as a flag as well as with a value.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n// For any other value, should be present with that value.\nexport const OVERLOADED_BOOLEAN = 4;\n\n// An attribute that must be numeric or parse as a numeric.\n// When falsy, it should be removed.\nexport const NUMERIC = 5;\n\n// An attribute that must be positive numeric or parse as a positive numeric.\n// When falsy, it should be removed.\nexport const POSITIVE_NUMERIC = 6;\n\nexport type PropertyInfo = {|\n  +acceptsBooleans: boolean,\n  +attributeName: string,\n  +attributeNamespace: string | null,\n  +mustUseProperty: boolean,\n  +propertyName: string,\n  +type: PropertyType,\n  +sanitizeURL: boolean,\n  +removeEmptyString: boolean,\n|};\n\n/* eslint-disable max-len */\nexport const ATTRIBUTE_NAME_START_CHAR =\n  ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n/* eslint-enable max-len */\nexport const ATTRIBUTE_NAME_CHAR =\n  ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\n\nexport const VALID_ATTRIBUTE_NAME_REGEX = new RegExp(\n  '^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$',\n);\n\nconst illegalAttributeNameCache = {};\nconst validatedAttributeNameCache = {};\n\nexport function isAttributeNameSafe(attributeName: string): boolean {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {\n    return true;\n  }\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n  if (__DEV__) {\n    console.error('Invalid attribute name: `%s`', attributeName);\n  }\n  return false;\n}\n\nexport function shouldIgnoreAttribute(\n  name: string,\n  propertyInfo: PropertyInfo | null,\n  isCustomComponentTag: boolean,\n): boolean {\n  if (propertyInfo !== null) {\n    return propertyInfo.type === RESERVED;\n  }\n  if (isCustomComponentTag) {\n    return false;\n  }\n  if (\n    name.length > 2 &&\n    (name[0] === 'o' || name[0] === 'O') &&\n    (name[1] === 'n' || name[1] === 'N')\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function shouldRemoveAttributeWithWarning(\n  name: string,\n  value: mixed,\n  propertyInfo: PropertyInfo | null,\n  isCustomComponentTag: boolean,\n): boolean {\n  if (propertyInfo !== null && propertyInfo.type === RESERVED) {\n    return false;\n  }\n  switch (typeof value) {\n    case 'function':\n    // $FlowIssue symbol is perfectly valid here\n    case 'symbol': // eslint-disable-line\n      return true;\n    case 'boolean': {\n      if (isCustomComponentTag) {\n        return false;\n      }\n      if (propertyInfo !== null) {\n        return !propertyInfo.acceptsBooleans;\n      } else {\n        const prefix = name.toLowerCase().slice(0, 5);\n        return prefix !== 'data-' && prefix !== 'aria-';\n      }\n    }\n    default:\n      return false;\n  }\n}\n\nexport function shouldRemoveAttribute(\n  name: string,\n  value: mixed,\n  propertyInfo: PropertyInfo | null,\n  isCustomComponentTag: boolean,\n): boolean {\n  if (value === null || typeof value === 'undefined') {\n    return true;\n  }\n  if (\n    shouldRemoveAttributeWithWarning(\n      name,\n      value,\n      propertyInfo,\n      isCustomComponentTag,\n    )\n  ) {\n    return true;\n  }\n  if (isCustomComponentTag) {\n    if (enableCustomElementPropertySupport) {\n      if (value === false) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if (propertyInfo !== null) {\n    if (enableFilterEmptyStringAttributesDOM) {\n      if (propertyInfo.removeEmptyString && value === '') {\n        if (__DEV__) {\n          if (name === 'src') {\n            console.error(\n              'An empty string (\"\") was passed to the %s attribute. ' +\n                'This may cause the browser to download the whole page again over the network. ' +\n                'To fix this, either do not render the element at all ' +\n                'or pass null to %s instead of an empty string.',\n              name,\n              name,\n            );\n          } else {\n            console.error(\n              'An empty string (\"\") was passed to the %s attribute. ' +\n                'To fix this, either do not render the element at all ' +\n                'or pass null to %s instead of an empty string.',\n              name,\n              name,\n            );\n          }\n        }\n        return true;\n      }\n    }\n\n    switch (propertyInfo.type) {\n      case BOOLEAN:\n        return !value;\n      case OVERLOADED_BOOLEAN:\n        return value === false;\n      case NUMERIC:\n        return isNaN(value);\n      case POSITIVE_NUMERIC:\n        return isNaN(value) || (value: any) < 1;\n    }\n  }\n  return false;\n}\n\nexport function getPropertyInfo(name: string): PropertyInfo | null {\n  return properties.hasOwnProperty(name) ? properties[name] : null;\n}\n\nfunction PropertyInfoRecord(\n  name: string,\n  type: PropertyType,\n  mustUseProperty: boolean,\n  attributeName: string,\n  attributeNamespace: string | null,\n  sanitizeURL: boolean,\n  removeEmptyString: boolean,\n) {\n  this.acceptsBooleans =\n    type === BOOLEANISH_STRING ||\n    type === BOOLEAN ||\n    type === OVERLOADED_BOOLEAN;\n  this.attributeName = attributeName;\n  this.attributeNamespace = attributeNamespace;\n  this.mustUseProperty = mustUseProperty;\n  this.propertyName = name;\n  this.type = type;\n  this.sanitizeURL = sanitizeURL;\n  this.removeEmptyString = removeEmptyString;\n}\n\n// When adding attributes to this list, be sure to also add them to\n// the `possibleStandardNames` module to ensure casing and incorrect\n// name warnings.\nconst properties = {};\n\n// These props are reserved by React. They shouldn't be written to the DOM.\nconst reservedProps = [\n  'children',\n  'dangerouslySetInnerHTML',\n  // TODO: This prevents the assignment of defaultValue to regular\n  // elements (not just inputs). Now that ReactDOMInput assigns to the\n  // defaultValue property -- do we need this?\n  'defaultValue',\n  'defaultChecked',\n  'innerHTML',\n  'suppressContentEditableWarning',\n  'suppressHydrationWarning',\n  'style',\n];\nif (enableCustomElementPropertySupport) {\n  reservedProps.push('innerText', 'textContent');\n}\n\nreservedProps.forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    RESERVED,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// A few React string attributes have a different name.\n// This is a mapping from React prop names to the attribute names.\n[\n  ['acceptCharset', 'accept-charset'],\n  ['className', 'class'],\n  ['htmlFor', 'for'],\n  ['httpEquiv', 'http-equiv'],\n].forEach(([name, attributeName]) => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are \"enumerated\" HTML attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEANISH_STRING,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are \"enumerated\" SVG attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n// Since these are SVG attributes, their attribute names are case-sensitive.\n[\n  'autoReverse',\n  'externalResourcesRequired',\n  'focusable',\n  'preserveAlpha',\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEANISH_STRING,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are HTML boolean attributes.\n[\n  'allowFullScreen',\n  'async',\n  // Note: there is a special case that prevents it from being written to the DOM\n  // on the client side because the browsers are inconsistent. Instead we call focus().\n  'autoFocus',\n  'autoPlay',\n  'controls',\n  'default',\n  'defer',\n  'disabled',\n  'disablePictureInPicture',\n  'disableRemotePlayback',\n  'formNoValidate',\n  'hidden',\n  'loop',\n  'noModule',\n  'noValidate',\n  'open',\n  'playsInline',\n  'readOnly',\n  'required',\n  'reversed',\n  'scoped',\n  'seamless',\n  // Microdata\n  'itemScope',\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEAN,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are the few React props that we set as DOM properties\n// rather than attributes. These are all booleans.\n[\n  'checked',\n  // Note: `option.selected` is not updated if `select.multiple` is\n  // disabled with `removeAttribute`. We have special logic for handling this.\n  'multiple',\n  'muted',\n  'selected',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEAN,\n    true, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are HTML attributes that are \"overloaded booleans\": they behave like\n// booleans, but can also accept a string value.\n[\n  'capture',\n  'download',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    OVERLOADED_BOOLEAN,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are HTML attributes that must be positive numbers.\n[\n  'cols',\n  'rows',\n  'size',\n  'span',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    POSITIVE_NUMERIC,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are HTML attributes that must be numbers.\n['rowSpan', 'start'].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    NUMERIC,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\nconst CAMELIZE = /[\\-\\:]([a-z])/g;\nconst capitalize = token => token[1].toUpperCase();\n\n// This is a list of all SVG attributes that need special casing, namespacing,\n// or boolean value assignment. Regular attributes that just accept strings\n// and have the same names are omitted, just like in the HTML attribute filter.\n// Some of these attributes can be hard to find. This list was created by\n// scraping the MDN documentation.\n[\n  'accent-height',\n  'alignment-baseline',\n  'arabic-form',\n  'baseline-shift',\n  'cap-height',\n  'clip-path',\n  'clip-rule',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'dominant-baseline',\n  'enable-background',\n  'fill-opacity',\n  'fill-rule',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'glyph-name',\n  'glyph-orientation-horizontal',\n  'glyph-orientation-vertical',\n  'horiz-adv-x',\n  'horiz-origin-x',\n  'image-rendering',\n  'letter-spacing',\n  'lighting-color',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'overline-position',\n  'overline-thickness',\n  'paint-order',\n  'panose-1',\n  'pointer-events',\n  'rendering-intent',\n  'shape-rendering',\n  'stop-color',\n  'stop-opacity',\n  'strikethrough-position',\n  'strikethrough-thickness',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke-width',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'underline-position',\n  'underline-thickness',\n  'unicode-bidi',\n  'unicode-range',\n  'units-per-em',\n  'v-alphabetic',\n  'v-hanging',\n  'v-ideographic',\n  'v-mathematical',\n  'vector-effect',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'word-spacing',\n  'writing-mode',\n  'xmlns:xlink',\n  'x-height',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// String SVG attributes with the xlink namespace.\n[\n  'xlink:actuate',\n  'xlink:arcrole',\n  'xlink:role',\n  'xlink:show',\n  'xlink:title',\n  'xlink:type',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    'http://www.w3.org/1999/xlink',\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// String SVG attributes with the xml namespace.\n[\n  'xml:base',\n  'xml:lang',\n  'xml:space',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    'http://www.w3.org/XML/1998/namespace',\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These attribute exists both in HTML and SVG.\n// The attribute name is case-sensitive in SVG so we can't just use\n// the React name like we do for attributes that exist only in HTML.\n['tabIndex', 'crossOrigin'].forEach(attributeName => {\n  properties[attributeName] = new PropertyInfoRecord(\n    attributeName,\n    STRING,\n    false, // mustUseProperty\n    attributeName.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These attributes accept URLs. These must not allow javascript: URLS.\n// These will also need to accept Trusted Types object in the future.\nconst xlinkHref = 'xlinkHref';\nproperties[xlinkHref] = new PropertyInfoRecord(\n  'xlinkHref',\n  STRING,\n  false, // mustUseProperty\n  'xlink:href',\n  'http://www.w3.org/1999/xlink',\n  true, // sanitizeURL\n  false, // removeEmptyString\n);\n\n['src', 'href', 'action', 'formAction'].forEach(attributeName => {\n  properties[attributeName] = new PropertyInfoRecord(\n    attributeName,\n    STRING,\n    false, // mustUseProperty\n    attributeName.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    true, // sanitizeURL\n    true, // removeEmptyString\n  );\n});\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {disableJavaScriptURLs} from 'shared/ReactFeatureFlags';\n\n// A javascript: URL can contain leading C0 control or \\u0020 SPACE,\n// and any newline or tab are filtered out as if they're not part of the URL.\n// https://url.spec.whatwg.org/#url-parsing\n// Tab or newline are defined as \\r\\n\\t:\n// https://infra.spec.whatwg.org/#ascii-tab-or-newline\n// A C0 control is a code point in the range \\u0000 NULL to \\u001F\n// INFORMATION SEPARATOR ONE, inclusive:\n// https://infra.spec.whatwg.org/#c0-control-or-space\n\n/* eslint-disable max-len */\nconst isJavaScriptProtocol = /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*\\:/i;\n\nlet didWarn = false;\n\nfunction sanitizeURL(url: string) {\n  if (disableJavaScriptURLs) {\n    if (isJavaScriptProtocol.test(url)) {\n      throw new Error(\n        'React has blocked a javascript: URL as a security precaution.',\n      );\n    }\n  } else if (__DEV__) {\n    if (!didWarn && isJavaScriptProtocol.test(url)) {\n      didWarn = true;\n      console.error(\n        'A future version of React will block javascript: URLs as a security precaution. ' +\n          'Use event handlers instead if you can. If you need to generate unsafe HTML try ' +\n          'using dangerouslySetInnerHTML instead. React was passed %s.',\n        JSON.stringify(url),\n      );\n    }\n  }\n}\n\nexport default sanitizeURL;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  getPropertyInfo,\n  shouldIgnoreAttribute,\n  shouldRemoveAttribute,\n  isAttributeNameSafe,\n  BOOLEAN,\n  OVERLOADED_BOOLEAN,\n} from '../shared/DOMProperty';\nimport sanitizeURL from '../shared/sanitizeURL';\nimport {\n  disableJavaScriptURLs,\n  enableTrustedTypesIntegration,\n  enableCustomElementPropertySupport,\n} from 'shared/ReactFeatureFlags';\nimport {checkAttributeStringCoercion} from 'shared/CheckStringCoercion';\nimport {getFiberCurrentPropsFromNode} from './ReactDOMComponentTree';\n\nimport type {PropertyInfo} from '../shared/DOMProperty';\n\n/**\n * Get the value for a property on a node. Only used in DEV for SSR validation.\n * The \"expected\" argument is used as a hint of what the expected value is.\n * Some properties have multiple equivalent values.\n */\nexport function getValueForProperty(\n  node: Element,\n  name: string,\n  expected: mixed,\n  propertyInfo: PropertyInfo,\n): mixed {\n  if (__DEV__) {\n    if (propertyInfo.mustUseProperty) {\n      const {propertyName} = propertyInfo;\n      return (node: any)[propertyName];\n    } else {\n      // This check protects multiple uses of `expected`, which is why the\n      // react-internal/safe-string-coercion rule is disabled in several spots\n      // below.\n      if (__DEV__) {\n        checkAttributeStringCoercion(expected, name);\n      }\n\n      if (!disableJavaScriptURLs && propertyInfo.sanitizeURL) {\n        // If we haven't fully disabled javascript: URLs, and if\n        // the hydration is successful of a javascript: URL, we\n        // still want to warn on the client.\n        // eslint-disable-next-line react-internal/safe-string-coercion\n        sanitizeURL('' + (expected: any));\n      }\n\n      const attributeName = propertyInfo.attributeName;\n\n      let stringValue = null;\n\n      if (propertyInfo.type === OVERLOADED_BOOLEAN) {\n        if (node.hasAttribute(attributeName)) {\n          const value = node.getAttribute(attributeName);\n          if (value === '') {\n            return true;\n          }\n          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n            return value;\n          }\n          // eslint-disable-next-line react-internal/safe-string-coercion\n          if (value === '' + (expected: any)) {\n            return expected;\n          }\n          return value;\n        }\n      } else if (node.hasAttribute(attributeName)) {\n        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n          // We had an attribute but shouldn't have had one, so read it\n          // for the error message.\n          return node.getAttribute(attributeName);\n        }\n        if (propertyInfo.type === BOOLEAN) {\n          // If this was a boolean, it doesn't matter what the value is\n          // the fact that we have it is the same as the expected.\n          return expected;\n        }\n        // Even if this property uses a namespace we use getAttribute\n        // because we assume its namespaced name is the same as our config.\n        // To use getAttributeNS we need the local name which we don't have\n        // in our config atm.\n        stringValue = node.getAttribute(attributeName);\n      }\n\n      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n        return stringValue === null ? expected : stringValue;\n        // eslint-disable-next-line react-internal/safe-string-coercion\n      } else if (stringValue === '' + (expected: any)) {\n        return expected;\n      } else {\n        return stringValue;\n      }\n    }\n  }\n}\n\n/**\n * Get the value for a attribute on a node. Only used in DEV for SSR validation.\n * The third argument is used as a hint of what the expected value is. Some\n * attributes have multiple equivalent values.\n */\nexport function getValueForAttribute(\n  node: Element,\n  name: string,\n  expected: mixed,\n  isCustomComponentTag: boolean,\n): mixed {\n  if (__DEV__) {\n    if (!isAttributeNameSafe(name)) {\n      return;\n    }\n    if (!node.hasAttribute(name)) {\n      return expected === undefined ? undefined : null;\n    }\n    const value = node.getAttribute(name);\n\n    if (enableCustomElementPropertySupport) {\n      if (isCustomComponentTag && value === '') {\n        return true;\n      }\n    }\n\n    if (__DEV__) {\n      checkAttributeStringCoercion(expected, name);\n    }\n    if (value === '' + (expected: any)) {\n      return expected;\n    }\n    return value;\n  }\n}\n\n/**\n * Sets the value for a property on a node.\n *\n * @param {DOMElement} node\n * @param {string} name\n * @param {*} value\n */\nexport function setValueForProperty(\n  node: Element,\n  name: string,\n  value: mixed,\n  isCustomComponentTag: boolean,\n) {\n  const propertyInfo = getPropertyInfo(name);\n  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {\n    return;\n  }\n\n  if (\n    enableCustomElementPropertySupport &&\n    isCustomComponentTag &&\n    name[0] === 'o' &&\n    name[1] === 'n'\n  ) {\n    let eventName = name.replace(/Capture$/, '');\n    const useCapture = name !== eventName;\n    eventName = eventName.slice(2);\n\n    const prevProps = getFiberCurrentPropsFromNode(node);\n    const prevValue = prevProps != null ? prevProps[name] : null;\n    if (typeof prevValue === 'function') {\n      node.removeEventListener(eventName, prevValue, useCapture);\n    }\n    if (typeof value === 'function') {\n      if (typeof prevValue !== 'function' && prevValue !== null) {\n        // If we previously assigned a non-function type into this node, then\n        // remove it when switching to event listener mode.\n        if (name in (node: any)) {\n          (node: any)[name] = null;\n        } else if (node.hasAttribute(name)) {\n          node.removeAttribute(name);\n        }\n      }\n\n      // $FlowFixMe value can't be casted to EventListener.\n      node.addEventListener(eventName, (value: EventListener), useCapture);\n      return;\n    }\n  }\n\n  if (\n    enableCustomElementPropertySupport &&\n    isCustomComponentTag &&\n    name in (node: any)\n  ) {\n    (node: any)[name] = value;\n    return;\n  }\n\n  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {\n    value = null;\n  }\n  if (enableCustomElementPropertySupport) {\n    if (isCustomComponentTag && value === true) {\n      value = '';\n    }\n  }\n\n  // If the prop isn't in the special list, treat it as a simple attribute.\n  if (isCustomComponentTag || propertyInfo === null) {\n    if (isAttributeNameSafe(name)) {\n      const attributeName = name;\n      if (value === null) {\n        node.removeAttribute(attributeName);\n      } else {\n        if (__DEV__) {\n          checkAttributeStringCoercion(value, name);\n        }\n        node.setAttribute(\n          attributeName,\n          enableTrustedTypesIntegration ? (value: any) : '' + (value: any),\n        );\n      }\n    }\n    return;\n  }\n  const {mustUseProperty} = propertyInfo;\n  if (mustUseProperty) {\n    const {propertyName} = propertyInfo;\n    if (value === null) {\n      const {type} = propertyInfo;\n      (node: any)[propertyName] = type === BOOLEAN ? false : '';\n    } else {\n      // Contrary to `setAttribute`, object properties are properly\n      // `toString`ed by IE8/9.\n      (node: any)[propertyName] = value;\n    }\n    return;\n  }\n  // The rest are treated as attributes with special cases.\n  const {attributeName, attributeNamespace} = propertyInfo;\n  if (value === null) {\n    node.removeAttribute(attributeName);\n  } else {\n    const {type} = propertyInfo;\n    let attributeValue;\n    if (type === BOOLEAN || (type === OVERLOADED_BOOLEAN && value === true)) {\n      // If attribute type is boolean, we know for sure it won't be an execution sink\n      // and we won't require Trusted Type here.\n      attributeValue = '';\n    } else {\n      // `setAttribute` with objects becomes only `[object]` in IE8/9,\n      // ('' + value) makes it output the correct toString()-value.\n      if (enableTrustedTypesIntegration) {\n        attributeValue = (value: any);\n      } else {\n        if (__DEV__) {\n          checkAttributeStringCoercion(value, attributeName);\n        }\n        attributeValue = '' + (value: any);\n      }\n      if (propertyInfo.sanitizeURL) {\n        sanitizeURL(attributeValue.toString());\n      }\n    }\n    if (attributeNamespace) {\n      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);\n    } else {\n      node.setAttribute(attributeName, attributeValue);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types.\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\n  'react.debug_trace_mode',\n);\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\n  'react.default_value',\n);\n\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst assign = Object.assign;\n\nexport default assign;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Source} from 'shared/ReactElementType';\nimport type {LazyComponent} from 'react/src/ReactLazy';\n\nimport {\n  enableComponentStackLocations,\n  disableNativeComponentFrames,\n} from 'shared/ReactFeatureFlags';\n\nimport {\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\n\nlet prefix;\nexport function describeBuiltInComponentFrame(\n  name: string,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = (match && match[1]) || '';\n      }\n    }\n    // We use the prefix to ensure our stacks line up with native stack frames.\n    return '\\n' + prefix + name;\n  } else {\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nlet reentry = false;\nlet componentFrameCache;\nif (__DEV__) {\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nexport function describeNativeComponentFrame(\n  fn: Function,\n  construct: boolean,\n): string {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (disableNativeComponentFrames || !fn || reentry) {\n    return '';\n  }\n\n  if (__DEV__) {\n    const frame = componentFrameCache.get(fn);\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  let control;\n\n  reentry = true;\n  const previousPrepareStackTrace = Error.prepareStackTrace;\n  // $FlowFixMe It does accept undefined.\n  Error.prepareStackTrace = undefined;\n  let previousDispatcher;\n  if (__DEV__) {\n    previousDispatcher = ReactCurrentDispatcher.current;\n    // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      const Fake = function() {\n        throw Error();\n      };\n      // $FlowFixMe\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function() {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        },\n      });\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      const sampleLines = sample.stack.split('\\n');\n      const controlLines = control.stack.split('\\n');\n      let s = sampleLines.length - 1;\n      let c = controlLines.length - 1;\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--;\n              // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                let frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n\n                // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n                if (fn.displayName && frame.includes('<anonymous>')) {\n                  frame = frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (__DEV__) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, frame);\n                  }\n                }\n                // Return the line we found.\n                return frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n    if (__DEV__) {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  }\n  // Fallback to just using the name if we couldn't make it throw.\n  const name = fn ? fn.displayName || fn.name : '';\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n  if (__DEV__) {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n  return syntheticFrame;\n}\n\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nfunction describeComponentFrame(\n  name: null | string,\n  source: void | null | Source,\n  ownerName: null | string,\n) {\n  let sourceInfo = '';\n  if (__DEV__ && source) {\n    const path = source.fileName;\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\n    // In DEV, include code for a common special case:\n    // prefer \"folder/index.js\" instead of just \"index.js\".\n    if (/^index\\./.test(fileName)) {\n      const match = path.match(BEFORE_SLASH_RE);\n      if (match) {\n        const pathBeforeSlash = match[1];\n        if (pathBeforeSlash) {\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n          fileName = folderName + '/' + fileName;\n        }\n      }\n    }\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n\nexport function describeClassComponentFrame(\n  ctor: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(ctor, true);\n  } else {\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\n  }\n}\n\nexport function describeFunctionComponentFrame(\n  fn: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(fn, false);\n  } else {\n    if (!fn) {\n      return '';\n    }\n    const name = fn.displayName || fn.name || null;\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function describeUnknownElementTypeFrameInDEV(\n  type: any,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (!__DEV__) {\n    return '';\n  }\n  if (type == null) {\n    return '';\n  }\n  if (typeof type === 'function') {\n    if (enableComponentStackLocations) {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    } else {\n      return describeFunctionComponentFrame(type, source, ownerFn);\n    }\n  }\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type, source, ownerFn);\n  }\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          // Lazy may contain any component type so we recursively resolve it.\n          return describeUnknownElementTypeFrameInDEV(\n            init(payload),\n            source,\n            ownerFn,\n          );\n        } catch (x) {}\n      }\n    }\n  }\n  return '';\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  HostComponent,\n  LazyComponent,\n  SuspenseComponent,\n  SuspenseListComponent,\n  FunctionComponent,\n  IndeterminateComponent,\n  ForwardRef,\n  SimpleMemoComponent,\n  ClassComponent,\n} from './ReactWorkTags';\nimport {\n  describeBuiltInComponentFrame,\n  describeFunctionComponentFrame,\n  describeClassComponentFrame,\n} from 'shared/ReactComponentStackFrame';\n\nfunction describeFiber(fiber: Fiber): string {\n  const owner: null | Function = __DEV__\n    ? fiber._debugOwner\n      ? fiber._debugOwner.type\n      : null\n    : null;\n  const source = __DEV__ ? fiber._debugSource : null;\n  switch (fiber.tag) {\n    case HostComponent:\n      return describeBuiltInComponentFrame(fiber.type, source, owner);\n    case LazyComponent:\n      return describeBuiltInComponentFrame('Lazy', source, owner);\n    case SuspenseComponent:\n      return describeBuiltInComponentFrame('Suspense', source, owner);\n    case SuspenseListComponent:\n      return describeBuiltInComponentFrame('SuspenseList', source, owner);\n    case FunctionComponent:\n    case IndeterminateComponent:\n    case SimpleMemoComponent:\n      return describeFunctionComponentFrame(fiber.type, source, owner);\n    case ForwardRef:\n      return describeFunctionComponentFrame(fiber.type.render, source, owner);\n    case ClassComponent:\n      return describeClassComponentFrame(fiber.type, source, owner);\n    default:\n      return '';\n  }\n}\n\nexport function getStackByFiberInDevAndProd(workInProgress: Fiber): string {\n  try {\n    let info = '';\n    let node = workInProgress;\n    do {\n      info += describeFiber(node);\n      node = node.return;\n    } while (node);\n    return info;\n  } catch (x) {\n    return '\\nError generating stack: ' + x.message + '\\n' + x.stack;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {LazyComponent} from 'react/src/ReactLazy';\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\n\nimport {\n  REACT_CONTEXT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_CACHE_TYPE,\n  REACT_TRACING_MARKER_TYPE,\n  REACT_SERVER_CONTEXT_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {\n  enableServerContext,\n  enableTransitionTracing,\n  enableCache,\n} from './ReactFeatureFlags';\n\n// Keep in sync with react-reconciler/getComponentNameFromFiber\nfunction getWrappedName(\n  outerType: mixed,\n  innerType: any,\n  wrapperName: string,\n): string {\n  const displayName = (outerType: any).displayName;\n  if (displayName) {\n    return displayName;\n  }\n  const functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName;\n}\n\n// Keep in sync with react-reconciler/getComponentNameFromFiber\nfunction getContextName(type: ReactContext<any>) {\n  return type.displayName || 'Context';\n}\n\n// Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\nexport default function getComponentNameFromType(type: mixed): string | null {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  if (__DEV__) {\n    if (typeof (type: any).tag === 'number') {\n      console.error(\n        'Received an unexpected object in getComponentNameFromType(). ' +\n          'This is likely a bug in React. Please file an issue.',\n      );\n    }\n  }\n  if (typeof type === 'function') {\n    return (type: any).displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n    case REACT_CACHE_TYPE:\n      if (enableCache) {\n        return 'Cache';\n      }\n    // eslint-disable-next-line no-fallthrough\n    case REACT_TRACING_MARKER_TYPE:\n      if (enableTransitionTracing) {\n        return 'TracingMarker';\n      }\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        const context: ReactContext<any> = (type: any);\n        return getContextName(context) + '.Consumer';\n      case REACT_PROVIDER_TYPE:\n        const provider: ReactProviderType<any> = (type: any);\n        return getContextName(provider._context) + '.Provider';\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n      case REACT_MEMO_TYPE:\n        const outerName = (type: any).displayName || null;\n        if (outerName !== null) {\n          return outerName;\n        }\n        return getComponentNameFromType(type.type) || 'Memo';\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          return getComponentNameFromType(init(payload));\n        } catch (x) {\n          return null;\n        }\n      }\n      case REACT_SERVER_CONTEXT_TYPE:\n        if (enableServerContext) {\n          const context2 = ((type: any): ReactContext<any>);\n          return (context2.displayName || context2._globalName) + '.Provider';\n        }\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\n\nimport {enableLegacyHidden} from 'shared/ReactFeatureFlags';\n\nimport {\n  FunctionComponent,\n  ClassComponent,\n  IndeterminateComponent,\n  HostRoot,\n  HostPortal,\n  HostComponent,\n  HostText,\n  Fragment,\n  Mode,\n  ContextConsumer,\n  ContextProvider,\n  ForwardRef,\n  Profiler,\n  SuspenseComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  DehydratedFragment,\n  SuspenseListComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n  TracingMarkerComponent,\n} from 'react-reconciler/src/ReactWorkTags';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport {REACT_STRICT_MODE_TYPE} from 'shared/ReactSymbols';\n\n// Keep in sync with shared/getComponentNameFromType\nfunction getWrappedName(\n  outerType: mixed,\n  innerType: any,\n  wrapperName: string,\n): string {\n  const functionName = innerType.displayName || innerType.name || '';\n  return (\n    (outerType: any).displayName ||\n    (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName)\n  );\n}\n\n// Keep in sync with shared/getComponentNameFromType\nfunction getContextName(type: ReactContext<any>) {\n  return type.displayName || 'Context';\n}\n\nexport default function getComponentNameFromFiber(fiber: Fiber): string | null {\n  const {tag, type} = fiber;\n  switch (tag) {\n    case CacheComponent:\n      return 'Cache';\n    case ContextConsumer:\n      const context: ReactContext<any> = (type: any);\n      return getContextName(context) + '.Consumer';\n    case ContextProvider:\n      const provider: ReactProviderType<any> = (type: any);\n      return getContextName(provider._context) + '.Provider';\n    case DehydratedFragment:\n      return 'DehydratedFragment';\n    case ForwardRef:\n      return getWrappedName(type, type.render, 'ForwardRef');\n    case Fragment:\n      return 'Fragment';\n    case HostComponent:\n      // Host component type is the display name (e.g. \"div\", \"View\")\n      return type;\n    case HostPortal:\n      return 'Portal';\n    case HostRoot:\n      return 'Root';\n    case HostText:\n      return 'Text';\n    case LazyComponent:\n      // Name comes from the type in this case; we don't have a tag.\n      return getComponentNameFromType(type);\n    case Mode:\n      if (type === REACT_STRICT_MODE_TYPE) {\n        // Don't be less specific than shared/getComponentNameFromType\n        return 'StrictMode';\n      }\n      return 'Mode';\n    case OffscreenComponent:\n      return 'Offscreen';\n    case Profiler:\n      return 'Profiler';\n    case ScopeComponent:\n      return 'Scope';\n    case SuspenseComponent:\n      return 'Suspense';\n    case SuspenseListComponent:\n      return 'SuspenseList';\n    case TracingMarkerComponent:\n      return 'TracingMarker';\n    // The display name for this tags come from the user-provided type:\n    case ClassComponent:\n    case FunctionComponent:\n    case IncompleteClassComponent:\n    case IndeterminateComponent:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      if (typeof type === 'function') {\n        return (type: any).displayName || type.name || null;\n      }\n      if (typeof type === 'string') {\n        return type;\n      }\n      break;\n    case LegacyHiddenComponent:\n      if (enableLegacyHidden) {\n        return 'LegacyHidden';\n      }\n  }\n\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {getStackByFiberInDevAndProd} from './ReactFiberComponentStack';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nexport let current: Fiber | null = null;\nexport let isRendering: boolean = false;\n\nexport function getCurrentFiberOwnerNameInDevOrNull(): string | null {\n  if (__DEV__) {\n    if (current === null) {\n      return null;\n    }\n    const owner = current._debugOwner;\n    if (owner !== null && typeof owner !== 'undefined') {\n      return getComponentNameFromFiber(owner);\n    }\n  }\n  return null;\n}\n\nfunction getCurrentFiberStackInDev(): string {\n  if (__DEV__) {\n    if (current === null) {\n      return '';\n    }\n    // Safe because if current fiber exists, we are reconciling,\n    // and it is guaranteed to be the work-in-progress version.\n    return getStackByFiberInDevAndProd(current);\n  }\n  return '';\n}\n\nexport function resetCurrentFiber() {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack = null;\n    current = null;\n    isRendering = false;\n  }\n}\n\nexport function setCurrentFiber(fiber: Fiber | null) {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack =\n      fiber === null ? null : getCurrentFiberStackInDev;\n    current = fiber;\n    isRendering = false;\n  }\n}\n\nexport function getCurrentFiber(): Fiber | null {\n  if (__DEV__) {\n    return current;\n  }\n  return null;\n}\n\nexport function setIsRendering(rendering: boolean) {\n  if (__DEV__) {\n    isRendering = rendering;\n  }\n}\n\nexport function getIsRendering() {\n  if (__DEV__) {\n    return isRendering;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {checkFormFieldValueStringCoercion} from 'shared/CheckStringCoercion';\n\nexport opaque type ToStringValue =\n  | boolean\n  | number\n  | Object\n  | string\n  | null\n  | void;\n\n// Flow does not allow string concatenation of most non-string types. To work\n// around this limitation, we use an opaque type that can only be obtained by\n// passing the value through getToStringValue first.\nexport function toString(value: ToStringValue): string {\n  // The coercion safety check is performed in getToStringValue().\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + (value: any);\n}\n\nexport function getToStringValue(value: mixed): ToStringValue {\n  switch (typeof value) {\n    case 'boolean':\n    case 'number':\n    case 'string':\n    case 'undefined':\n      return value;\n    case 'object':\n      if (__DEV__) {\n        checkFormFieldValueStringCoercion(value);\n      }\n      return value;\n    default:\n      // function, symbol are assigned as empty strings\n      return '';\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {checkFormFieldValueStringCoercion} from 'shared/CheckStringCoercion';\n\ntype ValueTracker = {|\n  getValue(): string,\n  setValue(value: string): void,\n  stopTracking(): void,\n|};\ntype WrapperState = {_valueTracker?: ?ValueTracker, ...};\ntype ElementWithValueTracker = HTMLInputElement & WrapperState;\n\nfunction isCheckable(elem: HTMLInputElement) {\n  const type = elem.type;\n  const nodeName = elem.nodeName;\n  return (\n    nodeName &&\n    nodeName.toLowerCase() === 'input' &&\n    (type === 'checkbox' || type === 'radio')\n  );\n}\n\nfunction getTracker(node: ElementWithValueTracker) {\n  return node._valueTracker;\n}\n\nfunction detachTracker(node: ElementWithValueTracker) {\n  node._valueTracker = null;\n}\n\nfunction getValueFromNode(node: HTMLInputElement): string {\n  let value = '';\n  if (!node) {\n    return value;\n  }\n\n  if (isCheckable(node)) {\n    value = node.checked ? 'true' : 'false';\n  } else {\n    value = node.value;\n  }\n\n  return value;\n}\n\nfunction trackValueOnNode(node: any): ?ValueTracker {\n  const valueField = isCheckable(node) ? 'checked' : 'value';\n  const descriptor = Object.getOwnPropertyDescriptor(\n    node.constructor.prototype,\n    valueField,\n  );\n\n  if (__DEV__) {\n    checkFormFieldValueStringCoercion(node[valueField]);\n  }\n  let currentValue = '' + node[valueField];\n\n  // if someone has already defined a value or Safari, then bail\n  // and don't track value will cause over reporting of changes,\n  // but it's better then a hard failure\n  // (needed for certain tests that spyOn input values and Safari)\n  if (\n    node.hasOwnProperty(valueField) ||\n    typeof descriptor === 'undefined' ||\n    typeof descriptor.get !== 'function' ||\n    typeof descriptor.set !== 'function'\n  ) {\n    return;\n  }\n  const {get, set} = descriptor;\n  Object.defineProperty(node, valueField, {\n    configurable: true,\n    get: function() {\n      return get.call(this);\n    },\n    set: function(value) {\n      if (__DEV__) {\n        checkFormFieldValueStringCoercion(value);\n      }\n      currentValue = '' + value;\n      set.call(this, value);\n    },\n  });\n  // We could've passed this the first time\n  // but it triggers a bug in IE11 and Edge 14/15.\n  // Calling defineProperty() again should be equivalent.\n  // https://github.com/facebook/react/issues/11768\n  Object.defineProperty(node, valueField, {\n    enumerable: descriptor.enumerable,\n  });\n\n  const tracker = {\n    getValue() {\n      return currentValue;\n    },\n    setValue(value) {\n      if (__DEV__) {\n        checkFormFieldValueStringCoercion(value);\n      }\n      currentValue = '' + value;\n    },\n    stopTracking() {\n      detachTracker(node);\n      delete node[valueField];\n    },\n  };\n  return tracker;\n}\n\nexport function track(node: ElementWithValueTracker) {\n  if (getTracker(node)) {\n    return;\n  }\n\n  // TODO: Once it's just Fiber we can move this to node._wrapperState\n  node._valueTracker = trackValueOnNode(node);\n}\n\nexport function updateValueIfChanged(node: ElementWithValueTracker) {\n  if (!node) {\n    return false;\n  }\n\n  const tracker = getTracker(node);\n  // if there is no tracker at this point it's unlikely\n  // that trying again will succeed\n  if (!tracker) {\n    return true;\n  }\n\n  const lastValue = tracker.getValue();\n  const nextValue = getValueFromNode(node);\n  if (nextValue !== lastValue) {\n    tracker.setValue(nextValue);\n    return true;\n  }\n  return false;\n}\n\nexport function stopTracking(node: ElementWithValueTracker) {\n  const tracker = getTracker(node);\n  if (tracker) {\n    tracker.stopTracking();\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport default function getActiveElement(doc: ?Document): ?Element {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// TODO: direct imports like some-package/src/* are bad. Fix me.\nimport {getCurrentFiberOwnerNameInDevOrNull} from 'react-reconciler/src/ReactCurrentFiber';\n\nimport {setValueForProperty} from './DOMPropertyOperations';\nimport {getFiberCurrentPropsFromNode} from './ReactDOMComponentTree';\nimport {getToStringValue, toString} from './ToStringValue';\nimport {checkControlledValueProps} from '../shared/ReactControlledValuePropTypes';\nimport {updateValueIfChanged} from './inputValueTracking';\nimport getActiveElement from './getActiveElement';\nimport assign from 'shared/assign';\nimport {disableInputAttributeSyncing} from 'shared/ReactFeatureFlags';\nimport {checkAttributeStringCoercion} from 'shared/CheckStringCoercion';\n\nimport type {ToStringValue} from './ToStringValue';\n\ntype InputWithWrapperState = HTMLInputElement & {\n  _wrapperState: {\n    initialValue: ToStringValue,\n    initialChecked: ?boolean,\n    controlled?: boolean,\n    ...\n  },\n  ...\n};\n\nlet didWarnValueDefaultValue = false;\nlet didWarnCheckedDefaultChecked = false;\nlet didWarnControlledToUncontrolled = false;\nlet didWarnUncontrolledToControlled = false;\n\nfunction isControlled(props) {\n  const usesChecked = props.type === 'checkbox' || props.type === 'radio';\n  return usesChecked ? props.checked != null : props.value != null;\n}\n\n/**\n * Implements an <input> host component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\n\nexport function getHostProps(element: Element, props: Object) {\n  const node = ((element: any): InputWithWrapperState);\n  const checked = props.checked;\n\n  const hostProps = assign({}, props, {\n    defaultChecked: undefined,\n    defaultValue: undefined,\n    value: undefined,\n    checked: checked != null ? checked : node._wrapperState.initialChecked,\n  });\n\n  return hostProps;\n}\n\nexport function initWrapperState(element: Element, props: Object) {\n  if (__DEV__) {\n    checkControlledValueProps('input', props);\n\n    if (\n      props.checked !== undefined &&\n      props.defaultChecked !== undefined &&\n      !didWarnCheckedDefaultChecked\n    ) {\n      console.error(\n        '%s contains an input of type %s with both checked and defaultChecked props. ' +\n          'Input elements must be either controlled or uncontrolled ' +\n          '(specify either the checked prop, or the defaultChecked prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled input ' +\n          'element and remove one of these props. More info: ' +\n          'https://reactjs.org/link/controlled-components',\n        getCurrentFiberOwnerNameInDevOrNull() || 'A component',\n        props.type,\n      );\n      didWarnCheckedDefaultChecked = true;\n    }\n    if (\n      props.value !== undefined &&\n      props.defaultValue !== undefined &&\n      !didWarnValueDefaultValue\n    ) {\n      console.error(\n        '%s contains an input of type %s with both value and defaultValue props. ' +\n          'Input elements must be either controlled or uncontrolled ' +\n          '(specify either the value prop, or the defaultValue prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled input ' +\n          'element and remove one of these props. More info: ' +\n          'https://reactjs.org/link/controlled-components',\n        getCurrentFiberOwnerNameInDevOrNull() || 'A component',\n        props.type,\n      );\n      didWarnValueDefaultValue = true;\n    }\n  }\n\n  const node = ((element: any): InputWithWrapperState);\n  const defaultValue = props.defaultValue == null ? '' : props.defaultValue;\n\n  node._wrapperState = {\n    initialChecked:\n      props.checked != null ? props.checked : props.defaultChecked,\n    initialValue: getToStringValue(\n      props.value != null ? props.value : defaultValue,\n    ),\n    controlled: isControlled(props),\n  };\n}\n\nexport function updateChecked(element: Element, props: Object) {\n  const node = ((element: any): InputWithWrapperState);\n  const checked = props.checked;\n  if (checked != null) {\n    setValueForProperty(node, 'checked', checked, false);\n  }\n}\n\nexport function updateWrapper(element: Element, props: Object) {\n  const node = ((element: any): InputWithWrapperState);\n  if (__DEV__) {\n    const controlled = isControlled(props);\n\n    if (\n      !node._wrapperState.controlled &&\n      controlled &&\n      !didWarnUncontrolledToControlled\n    ) {\n      console.error(\n        'A component is changing an uncontrolled input to be controlled. ' +\n          'This is likely caused by the value changing from undefined to ' +\n          'a defined value, which should not happen. ' +\n          'Decide between using a controlled or uncontrolled input ' +\n          'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components',\n      );\n      didWarnUncontrolledToControlled = true;\n    }\n    if (\n      node._wrapperState.controlled &&\n      !controlled &&\n      !didWarnControlledToUncontrolled\n    ) {\n      console.error(\n        'A component is changing a controlled input to be uncontrolled. ' +\n          'This is likely caused by the value changing from a defined to ' +\n          'undefined, which should not happen. ' +\n          'Decide between using a controlled or uncontrolled input ' +\n          'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components',\n      );\n      didWarnControlledToUncontrolled = true;\n    }\n  }\n\n  updateChecked(element, props);\n\n  const value = getToStringValue(props.value);\n  const type = props.type;\n\n  if (value != null) {\n    if (type === 'number') {\n      if (\n        (value === 0 && node.value === '') ||\n        // We explicitly want to coerce to number here if possible.\n        // eslint-disable-next-line\n        node.value != (value: any)\n      ) {\n        node.value = toString((value: any));\n      }\n    } else if (node.value !== toString((value: any))) {\n      node.value = toString((value: any));\n    }\n  } else if (type === 'submit' || type === 'reset') {\n    // Submit/reset inputs need the attribute removed completely to avoid\n    // blank-text buttons.\n    node.removeAttribute('value');\n    return;\n  }\n\n  if (disableInputAttributeSyncing) {\n    // When not syncing the value attribute, React only assigns a new value\n    // whenever the defaultValue React prop has changed. When not present,\n    // React does nothing\n    if (props.hasOwnProperty('defaultValue')) {\n      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));\n    }\n  } else {\n    // When syncing the value attribute, the value comes from a cascade of\n    // properties:\n    //  1. The value React property\n    //  2. The defaultValue React property\n    //  3. Otherwise there should be no change\n    if (props.hasOwnProperty('value')) {\n      setDefaultValue(node, props.type, value);\n    } else if (props.hasOwnProperty('defaultValue')) {\n      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));\n    }\n  }\n\n  if (disableInputAttributeSyncing) {\n    // When not syncing the checked attribute, the attribute is directly\n    // controllable from the defaultValue React property. It needs to be\n    // updated as new props come in.\n    if (props.defaultChecked == null) {\n      node.removeAttribute('checked');\n    } else {\n      node.defaultChecked = !!props.defaultChecked;\n    }\n  } else {\n    // When syncing the checked attribute, it only changes when it needs\n    // to be removed, such as transitioning from a checkbox into a text input\n    if (props.checked == null && props.defaultChecked != null) {\n      node.defaultChecked = !!props.defaultChecked;\n    }\n  }\n}\n\nexport function postMountWrapper(\n  element: Element,\n  props: Object,\n  isHydrating: boolean,\n) {\n  const node = ((element: any): InputWithWrapperState);\n\n  // Do not assign value if it is already set. This prevents user text input\n  // from being lost during SSR hydration.\n  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {\n    const type = props.type;\n    const isButton = type === 'submit' || type === 'reset';\n\n    // Avoid setting value attribute on submit/reset inputs as it overrides the\n    // default value provided by the browser. See: #12872\n    if (isButton && (props.value === undefined || props.value === null)) {\n      return;\n    }\n\n    const initialValue = toString(node._wrapperState.initialValue);\n\n    // Do not assign value if it is already set. This prevents user text input\n    // from being lost during SSR hydration.\n    if (!isHydrating) {\n      if (disableInputAttributeSyncing) {\n        const value = getToStringValue(props.value);\n\n        // When not syncing the value attribute, the value property points\n        // directly to the React prop. Only assign it if it exists.\n        if (value != null) {\n          // Always assign on buttons so that it is possible to assign an\n          // empty string to clear button text.\n          //\n          // Otherwise, do not re-assign the value property if is empty. This\n          // potentially avoids a DOM write and prevents Firefox (~60.0.1) from\n          // prematurely marking required inputs as invalid. Equality is compared\n          // to the current value in case the browser provided value is not an\n          // empty string.\n          if (isButton || value !== node.value) {\n            node.value = toString(value);\n          }\n        }\n      } else {\n        // When syncing the value attribute, the value property should use\n        // the wrapperState._initialValue property. This uses:\n        //\n        //   1. The value React property when present\n        //   2. The defaultValue React property when present\n        //   3. An empty string\n        if (initialValue !== node.value) {\n          node.value = initialValue;\n        }\n      }\n    }\n\n    if (disableInputAttributeSyncing) {\n      // When not syncing the value attribute, assign the value attribute\n      // directly from the defaultValue React property (when present)\n      const defaultValue = getToStringValue(props.defaultValue);\n      if (defaultValue != null) {\n        node.defaultValue = toString(defaultValue);\n      }\n    } else {\n      // Otherwise, the value attribute is synchronized to the property,\n      // so we assign defaultValue to the same thing as the value property\n      // assignment step above.\n      node.defaultValue = initialValue;\n    }\n  }\n\n  // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n  // this is needed to work around a chrome bug where setting defaultChecked\n  // will sometimes influence the value of checked (even after detachment).\n  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n  // We need to temporarily unset name to avoid disrupting radio button groups.\n  const name = node.name;\n  if (name !== '') {\n    node.name = '';\n  }\n\n  if (disableInputAttributeSyncing) {\n    // When not syncing the checked attribute, the checked property\n    // never gets assigned. It must be manually set. We don't want\n    // to do this when hydrating so that existing user input isn't\n    // modified\n    if (!isHydrating) {\n      updateChecked(element, props);\n    }\n\n    // Only assign the checked attribute if it is defined. This saves\n    // a DOM write when controlling the checked attribute isn't needed\n    // (text inputs, submit/reset)\n    if (props.hasOwnProperty('defaultChecked')) {\n      node.defaultChecked = !node.defaultChecked;\n      node.defaultChecked = !!props.defaultChecked;\n    }\n  } else {\n    // When syncing the checked attribute, both the checked property and\n    // attribute are assigned at the same time using defaultChecked. This uses:\n    //\n    //   1. The checked React property when present\n    //   2. The defaultChecked React property when present\n    //   3. Otherwise, false\n    node.defaultChecked = !node.defaultChecked;\n    node.defaultChecked = !!node._wrapperState.initialChecked;\n  }\n\n  if (name !== '') {\n    node.name = name;\n  }\n}\n\nexport function restoreControlledState(element: Element, props: Object) {\n  const node = ((element: any): InputWithWrapperState);\n  updateWrapper(node, props);\n  updateNamedCousins(node, props);\n}\n\nfunction updateNamedCousins(rootNode, props) {\n  const name = props.name;\n  if (props.type === 'radio' && name != null) {\n    let queryRoot: Element = rootNode;\n\n    while (queryRoot.parentNode) {\n      queryRoot = ((queryRoot.parentNode: any): Element);\n    }\n\n    // If `rootNode.form` was non-null, then we could try `form.elements`,\n    // but that sometimes behaves strangely in IE8. We could also try using\n    // `form.getElementsByName`, but that will only return direct children\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\n    // the input might not even be in a form. It might not even be in the\n    // document. Let's just use the local `querySelectorAll` to ensure we don't\n    // miss anything.\n    if (__DEV__) {\n      checkAttributeStringCoercion(name, 'name');\n    }\n    const group = queryRoot.querySelectorAll(\n      'input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]',\n    );\n\n    for (let i = 0; i < group.length; i++) {\n      const otherNode = ((group[i]: any): HTMLInputElement);\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n        continue;\n      }\n      // This will throw if radio buttons rendered by different copies of React\n      // and the same name are rendered into the same form (same as #1939).\n      // That's probably okay; we don't support it just as we don't support\n      // mixing React radio buttons with non-React ones.\n      const otherProps = getFiberCurrentPropsFromNode(otherNode);\n\n      if (!otherProps) {\n        throw new Error(\n          'ReactDOMInput: Mixing React and non-React radio inputs with the ' +\n            'same `name` is not supported.',\n        );\n      }\n\n      // We need update the tracked value on the named cousin since the value\n      // was changed but the input saw no event or value set\n      updateValueIfChanged(otherNode);\n\n      // If this is a controlled radio button group, forcing the input that\n      // was previously checked to update will cause it to be come re-checked\n      // as appropriate.\n      updateWrapper(otherNode, otherProps);\n    }\n  }\n}\n\n// In Chrome, assigning defaultValue to certain input types triggers input validation.\n// For number inputs, the display value loses trailing decimal points. For email inputs,\n// Chrome raises \"The specified value <x> is not a valid email address\".\n//\n// Here we check to see if the defaultValue has actually changed, avoiding these problems\n// when the user is inputting text\n//\n// https://github.com/facebook/react/issues/7253\nexport function setDefaultValue(\n  node: InputWithWrapperState,\n  type: ?string,\n  value: *,\n) {\n  if (\n    // Focused number inputs synchronize on blur. See ChangeEventPlugin.js\n    type !== 'number' ||\n    getActiveElement(node.ownerDocument) !== node\n  ) {\n    if (value == null) {\n      node.defaultValue = toString(node._wrapperState.initialValue);\n    } else if (node.defaultValue !== toString(value)) {\n      node.defaultValue = toString(value);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {Children} from 'react';\nimport {getToStringValue, toString} from './ToStringValue';\n\nlet didWarnSelectedSetOnOption = false;\nlet didWarnInvalidChild = false;\nlet didWarnInvalidInnerHTML = false;\n\n/**\n * Implements an <option> host component that warns when `selected` is set.\n */\n\nexport function validateProps(element: Element, props: Object) {\n  if (__DEV__) {\n    // If a value is not provided, then the children must be simple.\n    if (props.value == null) {\n      if (typeof props.children === 'object' && props.children !== null) {\n        Children.forEach(props.children, function(child) {\n          if (child == null) {\n            return;\n          }\n          if (typeof child === 'string' || typeof child === 'number') {\n            return;\n          }\n          if (!didWarnInvalidChild) {\n            didWarnInvalidChild = true;\n            console.error(\n              'Cannot infer the option value of complex children. ' +\n                'Pass a `value` prop or use a plain string as children to <option>.',\n            );\n          }\n        });\n      } else if (props.dangerouslySetInnerHTML != null) {\n        if (!didWarnInvalidInnerHTML) {\n          didWarnInvalidInnerHTML = true;\n          console.error(\n            'Pass a `value` prop if you set dangerouslyInnerHTML so React knows ' +\n              'which value should be selected.',\n          );\n        }\n      }\n    }\n\n    // TODO: Remove support for `selected` in <option>.\n    if (props.selected != null && !didWarnSelectedSetOnOption) {\n      console.error(\n        'Use the `defaultValue` or `value` props on <select> instead of ' +\n          'setting `selected` on <option>.',\n      );\n      didWarnSelectedSetOnOption = true;\n    }\n  }\n}\n\nexport function postMountWrapper(element: Element, props: Object) {\n  // value=\"\" should make a value attribute (#6219)\n  if (props.value != null) {\n    element.setAttribute('value', toString(getToStringValue(props.value)));\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\n\nconst isArrayImpl = Array.isArray;\n\n// eslint-disable-next-line no-redeclare\nfunction isArray(a: mixed): boolean {\n  return isArrayImpl(a);\n}\n\nexport default isArray;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// TODO: direct imports like some-package/src/* are bad. Fix me.\nimport {getCurrentFiberOwnerNameInDevOrNull} from 'react-reconciler/src/ReactCurrentFiber';\n\nimport {checkControlledValueProps} from '../shared/ReactControlledValuePropTypes';\nimport {getToStringValue, toString} from './ToStringValue';\nimport assign from 'shared/assign';\nimport isArray from 'shared/isArray';\n\nlet didWarnValueDefaultValue;\n\nif (__DEV__) {\n  didWarnValueDefaultValue = false;\n}\n\ntype SelectWithWrapperState = HTMLSelectElement & {|\n  _wrapperState: {|wasMultiple: boolean|},\n|};\n\nfunction getDeclarationErrorAddendum() {\n  const ownerName = getCurrentFiberOwnerNameInDevOrNull();\n  if (ownerName) {\n    return '\\n\\nCheck the render method of `' + ownerName + '`.';\n  }\n  return '';\n}\n\nconst valuePropNames = ['value', 'defaultValue'];\n\n/**\n * Validation function for `value` and `defaultValue`.\n */\nfunction checkSelectPropTypes(props) {\n  if (__DEV__) {\n    checkControlledValueProps('select', props);\n\n    for (let i = 0; i < valuePropNames.length; i++) {\n      const propName = valuePropNames[i];\n      if (props[propName] == null) {\n        continue;\n      }\n      const propNameIsArray = isArray(props[propName]);\n      if (props.multiple && !propNameIsArray) {\n        console.error(\n          'The `%s` prop supplied to <select> must be an array if ' +\n            '`multiple` is true.%s',\n          propName,\n          getDeclarationErrorAddendum(),\n        );\n      } else if (!props.multiple && propNameIsArray) {\n        console.error(\n          'The `%s` prop supplied to <select> must be a scalar ' +\n            'value if `multiple` is false.%s',\n          propName,\n          getDeclarationErrorAddendum(),\n        );\n      }\n    }\n  }\n}\n\nfunction updateOptions(\n  node: HTMLSelectElement,\n  multiple: boolean,\n  propValue: any,\n  setDefaultSelected: boolean,\n) {\n  type IndexableHTMLOptionsCollection = HTMLOptionsCollection & {\n    [key: number]: HTMLOptionElement,\n    ...,\n  };\n  const options: IndexableHTMLOptionsCollection = node.options;\n\n  if (multiple) {\n    const selectedValues = (propValue: Array<string>);\n    const selectedValue = {};\n    for (let i = 0; i < selectedValues.length; i++) {\n      // Prefix to avoid chaos with special keys.\n      selectedValue['$' + selectedValues[i]] = true;\n    }\n    for (let i = 0; i < options.length; i++) {\n      const selected = selectedValue.hasOwnProperty('$' + options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n      if (selected && setDefaultSelected) {\n        options[i].defaultSelected = true;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    const selectedValue = toString(getToStringValue((propValue: any)));\n    let defaultSelected = null;\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        if (setDefaultSelected) {\n          options[i].defaultSelected = true;\n        }\n        return;\n      }\n      if (defaultSelected === null && !options[i].disabled) {\n        defaultSelected = options[i];\n      }\n    }\n    if (defaultSelected !== null) {\n      defaultSelected.selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> host component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\n\nexport function getHostProps(element: Element, props: Object) {\n  return assign({}, props, {\n    value: undefined,\n  });\n}\n\nexport function initWrapperState(element: Element, props: Object) {\n  const node = ((element: any): SelectWithWrapperState);\n  if (__DEV__) {\n    checkSelectPropTypes(props);\n  }\n\n  node._wrapperState = {\n    wasMultiple: !!props.multiple,\n  };\n\n  if (__DEV__) {\n    if (\n      props.value !== undefined &&\n      props.defaultValue !== undefined &&\n      !didWarnValueDefaultValue\n    ) {\n      console.error(\n        'Select elements must be either controlled or uncontrolled ' +\n          '(specify either the value prop, or the defaultValue prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled select ' +\n          'element and remove one of these props. More info: ' +\n          'https://reactjs.org/link/controlled-components',\n      );\n      didWarnValueDefaultValue = true;\n    }\n  }\n}\n\nexport function postMountWrapper(element: Element, props: Object) {\n  const node = ((element: any): SelectWithWrapperState);\n  node.multiple = !!props.multiple;\n  const value = props.value;\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  } else if (props.defaultValue != null) {\n    updateOptions(node, !!props.multiple, props.defaultValue, true);\n  }\n}\n\nexport function postUpdateWrapper(element: Element, props: Object) {\n  const node = ((element: any): SelectWithWrapperState);\n  const wasMultiple = node._wrapperState.wasMultiple;\n  node._wrapperState.wasMultiple = !!props.multiple;\n\n  const value = props.value;\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  } else if (wasMultiple !== !!props.multiple) {\n    // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n    if (props.defaultValue != null) {\n      updateOptions(node, !!props.multiple, props.defaultValue, true);\n    } else {\n      // Revert the select back to its default unselected state.\n      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);\n    }\n  }\n}\n\nexport function restoreControlledState(element: Element, props: Object) {\n  const node = ((element: any): SelectWithWrapperState);\n  const value = props.value;\n\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport isArray from 'shared/isArray';\n\nimport {checkControlledValueProps} from '../shared/ReactControlledValuePropTypes';\nimport {getCurrentFiberOwnerNameInDevOrNull} from 'react-reconciler/src/ReactCurrentFiber';\nimport {getToStringValue, toString} from './ToStringValue';\nimport type {ToStringValue} from './ToStringValue';\nimport {disableTextareaChildren} from 'shared/ReactFeatureFlags';\n\nlet didWarnValDefaultVal = false;\n\ntype TextAreaWithWrapperState = HTMLTextAreaElement & {|\n  _wrapperState: {|initialValue: ToStringValue|},\n|};\n\n/**\n * Implements a <textarea> host component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\n\nexport function getHostProps(element: Element, props: Object) {\n  const node = ((element: any): TextAreaWithWrapperState);\n\n  if (props.dangerouslySetInnerHTML != null) {\n    throw new Error(\n      '`dangerouslySetInnerHTML` does not make sense on <textarea>.',\n    );\n  }\n\n  // Always set children to the same thing. In IE9, the selection range will\n  // get reset if `textContent` is mutated.  We could add a check in setTextContent\n  // to only set the value if/when the value differs from the node value (which would\n  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this\n  // solution. The value can be a boolean or object so that's why it's forced\n  // to be a string.\n  const hostProps = {\n    ...props,\n    value: undefined,\n    defaultValue: undefined,\n    children: toString(node._wrapperState.initialValue),\n  };\n\n  return hostProps;\n}\n\nexport function initWrapperState(element: Element, props: Object) {\n  const node = ((element: any): TextAreaWithWrapperState);\n  if (__DEV__) {\n    checkControlledValueProps('textarea', props);\n    if (\n      props.value !== undefined &&\n      props.defaultValue !== undefined &&\n      !didWarnValDefaultVal\n    ) {\n      console.error(\n        '%s contains a textarea with both value and defaultValue props. ' +\n          'Textarea elements must be either controlled or uncontrolled ' +\n          '(specify either the value prop, or the defaultValue prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled textarea ' +\n          'and remove one of these props. More info: ' +\n          'https://reactjs.org/link/controlled-components',\n        getCurrentFiberOwnerNameInDevOrNull() || 'A component',\n      );\n      didWarnValDefaultVal = true;\n    }\n  }\n\n  let initialValue = props.value;\n\n  // Only bother fetching default value if we're going to use it\n  if (initialValue == null) {\n    let {children, defaultValue} = props;\n    if (children != null) {\n      if (__DEV__) {\n        console.error(\n          'Use the `defaultValue` or `value` props instead of setting ' +\n            'children on <textarea>.',\n        );\n      }\n      if (!disableTextareaChildren) {\n        if (defaultValue != null) {\n          throw new Error(\n            'If you supply `defaultValue` on a <textarea>, do not pass children.',\n          );\n        }\n\n        if (isArray(children)) {\n          if (children.length > 1) {\n            throw new Error('<textarea> can only have at most one child.');\n          }\n\n          children = children[0];\n        }\n\n        defaultValue = children;\n      }\n    }\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n    initialValue = defaultValue;\n  }\n\n  node._wrapperState = {\n    initialValue: getToStringValue(initialValue),\n  };\n}\n\nexport function updateWrapper(element: Element, props: Object) {\n  const node = ((element: any): TextAreaWithWrapperState);\n  const value = getToStringValue(props.value);\n  const defaultValue = getToStringValue(props.defaultValue);\n  if (value != null) {\n    // Cast `value` to a string to ensure the value is set correctly. While\n    // browsers typically do this as necessary, jsdom doesn't.\n    const newValue = toString(value);\n    // To avoid side effects (such as losing text selection), only set value if changed\n    if (newValue !== node.value) {\n      node.value = newValue;\n    }\n    if (props.defaultValue == null && node.defaultValue !== newValue) {\n      node.defaultValue = newValue;\n    }\n  }\n  if (defaultValue != null) {\n    node.defaultValue = toString(defaultValue);\n  }\n}\n\nexport function postMountWrapper(element: Element, props: Object) {\n  const node = ((element: any): TextAreaWithWrapperState);\n  // This is in postMount because we need access to the DOM node, which is not\n  // available until after the component has mounted.\n  const textContent = node.textContent;\n\n  // Only set node.value if textContent is equal to the expected\n  // initial value. In IE10/IE11 there is a bug where the placeholder attribute\n  // will populate textContent as well.\n  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/\n  if (textContent === node._wrapperState.initialValue) {\n    if (textContent !== '' && textContent !== null) {\n      node.value = textContent;\n    }\n  }\n}\n\nexport function restoreControlledState(element: Element, props: Object) {\n  // DOM component is still mounted; update\n  updateWrapper(element, props);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\n// Assumes there is no parent namespace.\nexport function getIntrinsicNamespace(type: string): string {\n  switch (type) {\n    case 'svg':\n      return SVG_NAMESPACE;\n    case 'math':\n      return MATH_NAMESPACE;\n    default:\n      return HTML_NAMESPACE;\n  }\n}\n\nexport function getChildNamespace(\n  parentNamespace: string | null,\n  type: string,\n): string {\n  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {\n    // No (or default) parent namespace: potential entry point.\n    return getIntrinsicNamespace(type);\n  }\n  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {\n    // We're leaving SVG.\n    return HTML_NAMESPACE;\n  }\n  // By default, pass namespace below.\n  return parentNamespace;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* globals MSApp */\n\n/**\n * Create a function which has 'unsafe' privileges (required by windows8 apps)\n */\nconst createMicrosoftUnsafeLocalFunction = function(func) {\n  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n    return function(arg0, arg1, arg2, arg3) {\n      MSApp.execUnsafeLocalFunction(function() {\n        return func(arg0, arg1, arg2, arg3);\n      });\n    };\n  } else {\n    return func;\n  }\n};\n\nexport default createMicrosoftUnsafeLocalFunction;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {SVG_NAMESPACE} from '../shared/DOMNamespaces';\nimport createMicrosoftUnsafeLocalFunction from './createMicrosoftUnsafeLocalFunction';\nimport {enableTrustedTypesIntegration} from 'shared/ReactFeatureFlags';\n\n// SVG temp container for IE lacking innerHTML\nlet reusableSVGContainer;\n\n/**\n * Set the innerHTML property of a node\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nconst setInnerHTML = createMicrosoftUnsafeLocalFunction(function(\n  node: Element,\n  html: {valueOf(): {toString(): string, ...}, ...},\n): void {\n  if (node.namespaceURI === SVG_NAMESPACE) {\n    if (__DEV__) {\n      if (enableTrustedTypesIntegration) {\n        // TODO: reconsider the text of this warning and when it should show\n        // before enabling the feature flag.\n        if (typeof trustedTypes !== 'undefined') {\n          console.error(\n            \"Using 'dangerouslySetInnerHTML' in an svg element with \" +\n              'Trusted Types enabled in an Internet Explorer will cause ' +\n              'the trusted value to be converted to string. Assigning string ' +\n              \"to 'innerHTML' will throw an error if Trusted Types are enforced. \" +\n              \"You can try to wrap your svg element inside a div and use 'dangerouslySetInnerHTML' \" +\n              'on the enclosing div instead.',\n          );\n        }\n      }\n    }\n    if (!('innerHTML' in node)) {\n      // IE does not have innerHTML for SVG nodes, so instead we inject the\n      // new markup in a temp node and then move the child nodes across into\n      // the target node\n      reusableSVGContainer =\n        reusableSVGContainer || document.createElement('div');\n      reusableSVGContainer.innerHTML =\n        '<svg>' + html.valueOf().toString() + '</svg>';\n      const svgNode = reusableSVGContainer.firstChild;\n      while (node.firstChild) {\n        node.removeChild(node.firstChild);\n      }\n      while (svgNode.firstChild) {\n        node.appendChild(svgNode.firstChild);\n      }\n      return;\n    }\n  }\n  node.innerHTML = (html: any);\n});\n\nexport default setInnerHTML;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * HTML nodeType values that represent the type of the node\n */\n\nexport const ELEMENT_NODE = 1;\nexport const TEXT_NODE = 3;\nexport const COMMENT_NODE = 8;\nexport const DOCUMENT_NODE = 9;\nexport const DOCUMENT_FRAGMENT_NODE = 11;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {TEXT_NODE} from '../shared/HTMLNodeType';\n\n/**\n * Set the textContent property of a node. For text updates, it's faster\n * to set the `nodeValue` of the Text node directly instead of using\n * `.textContent` which will remove the existing node and create a new one.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nconst setTextContent = function(node: Element, text: string): void {\n  if (text) {\n    const firstChild = node.firstChild;\n\n    if (\n      firstChild &&\n      firstChild === node.lastChild &&\n      firstChild.nodeType === TEXT_NODE\n    ) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n};\n\nexport default setTextContent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nexport const isUnitlessNumber = {\n  animationIterationCount: true,\n  aspectRatio: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridArea: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nconst prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function(prop) {\n  prefixes.forEach(function(prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {isUnitlessNumber} from './CSSProperty';\nimport {checkCSSPropertyStringCoercion} from 'shared/CheckStringCoercion';\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value, isCustomProperty) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  const isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  if (\n    !isCustomProperty &&\n    typeof value === 'number' &&\n    value !== 0 &&\n    !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])\n  ) {\n    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n  }\n\n  if (__DEV__) {\n    checkCSSPropertyStringCoercion(value, name);\n  }\n  return ('' + value).trim();\n}\n\nexport default dangerousStyleValue;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {shorthandToLonghand} from './CSSShorthandProperty';\n\nimport dangerousStyleValue from '../shared/dangerousStyleValue';\nimport hyphenateStyleName from '../shared/hyphenateStyleName';\nimport warnValidStyle from '../shared/warnValidStyle';\n\n/**\n * Operations for dealing with CSS properties.\n */\n\n/**\n * This creates a string that is expected to be equivalent to the style\n * attribute generated by server-side rendering. It by-passes warnings and\n * security checks so it's not safe to use this value for anything other than\n * comparison. It is only used in DEV for SSR validation.\n */\nexport function createDangerousStringForStyles(styles) {\n  if (__DEV__) {\n    let serialized = '';\n    let delimiter = '';\n    for (const styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      const styleValue = styles[styleName];\n      if (styleValue != null) {\n        const isCustomProperty = styleName.indexOf('--') === 0;\n        serialized +=\n          delimiter +\n          (isCustomProperty ? styleName : hyphenateStyleName(styleName)) +\n          ':';\n        serialized += dangerousStyleValue(\n          styleName,\n          styleValue,\n          isCustomProperty,\n        );\n\n        delimiter = ';';\n      }\n    }\n    return serialized || null;\n  }\n}\n\n/**\n * Sets the value for multiple styles on a node.  If a value is specified as\n * '' (empty string), the corresponding style property will be unset.\n *\n * @param {DOMElement} node\n * @param {object} styles\n */\nexport function setValueForStyles(node, styles) {\n  const style = node.style;\n  for (let styleName in styles) {\n    if (!styles.hasOwnProperty(styleName)) {\n      continue;\n    }\n    const isCustomProperty = styleName.indexOf('--') === 0;\n    if (__DEV__) {\n      if (!isCustomProperty) {\n        warnValidStyle(styleName, styles[styleName]);\n      }\n    }\n    const styleValue = dangerousStyleValue(\n      styleName,\n      styles[styleName],\n      isCustomProperty,\n    );\n    if (styleName === 'float') {\n      styleName = 'cssFloat';\n    }\n    if (isCustomProperty) {\n      style.setProperty(styleName, styleValue);\n    } else {\n      style[styleName] = styleValue;\n    }\n  }\n}\n\nfunction isValueEmpty(value) {\n  return value == null || typeof value === 'boolean' || value === '';\n}\n\n/**\n * Given {color: 'red', overflow: 'hidden'} returns {\n *   color: 'color',\n *   overflowX: 'overflow',\n *   overflowY: 'overflow',\n * }. This can be read as \"the overflowY property was set by the overflow\n * shorthand\". That is, the values are the property that each was derived from.\n */\nfunction expandShorthandMap(styles) {\n  const expanded = {};\n  for (const key in styles) {\n    const longhands = shorthandToLonghand[key] || [key];\n    for (let i = 0; i < longhands.length; i++) {\n      expanded[longhands[i]] = key;\n    }\n  }\n  return expanded;\n}\n\n/**\n * When mixing shorthand and longhand property names, we warn during updates if\n * we expect an incorrect result to occur. In particular, we warn for:\n *\n * Updating a shorthand property (longhand gets overwritten):\n *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}\n *   becomes .style.font = 'baz'\n * Removing a shorthand property (longhand gets lost too):\n *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}\n *   becomes .style.font = ''\n * Removing a longhand property (should revert to shorthand; doesn't):\n *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}\n *   becomes .style.fontVariant = ''\n */\nexport function validateShorthandPropertyCollisionInDev(\n  styleUpdates,\n  nextStyles,\n) {\n  if (__DEV__) {\n    if (!nextStyles) {\n      return;\n    }\n\n    const expandedUpdates = expandShorthandMap(styleUpdates);\n    const expandedStyles = expandShorthandMap(nextStyles);\n    const warnedAbout = {};\n    for (const key in expandedUpdates) {\n      const originalKey = expandedUpdates[key];\n      const correctOriginalKey = expandedStyles[key];\n      if (correctOriginalKey && originalKey !== correctOriginalKey) {\n        const warningKey = originalKey + ',' + correctOriginalKey;\n        if (warnedAbout[warningKey]) {\n          continue;\n        }\n        warnedAbout[warningKey] = true;\n        console.error(\n          '%s a style property during rerender (%s) when a ' +\n            'conflicting property is set (%s) can lead to styling bugs. To ' +\n            \"avoid this, don't mix shorthand and non-shorthand properties \" +\n            'for the same value; instead, replace the shorthand with ' +\n            'separate values.',\n          isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating',\n          originalKey,\n          correctOriginalKey,\n        );\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// For HTML, certain tags should omit their close tag. We keep a list for\n// those special-case tags.\n\nconst omittedCloseTags = {\n  area: true,\n  base: true,\n  br: true,\n  col: true,\n  embed: true,\n  hr: true,\n  img: true,\n  input: true,\n  keygen: true,\n  link: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true,\n  // NOTE: menuitem's close tag should be omitted, but that causes problems.\n};\n\nexport default omittedCloseTags;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport omittedCloseTags from './omittedCloseTags';\n\n// For HTML, certain tags cannot have children. This has the same purpose as\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\nconst voidElementTags = {\n  menuitem: true,\n  ...omittedCloseTags,\n};\n\nexport default voidElementTags;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport voidElementTags from './voidElementTags';\n\nconst HTML = '__html';\n\nfunction assertValidProps(tag: string, props: ?Object) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (voidElementTags[tag]) {\n    if (props.children != null || props.dangerouslySetInnerHTML != null) {\n      throw new Error(\n        `${tag} is a void element tag and must neither have \\`children\\` nor ` +\n          'use `dangerouslySetInnerHTML`.',\n      );\n    }\n  }\n  if (props.dangerouslySetInnerHTML != null) {\n    if (props.children != null) {\n      throw new Error(\n        'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',\n      );\n    }\n\n    if (\n      typeof props.dangerouslySetInnerHTML !== 'object' ||\n      !(HTML in props.dangerouslySetInnerHTML)\n    ) {\n      throw new Error(\n        '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +\n          'Please visit https://reactjs.org/link/dangerously-set-inner-html ' +\n          'for more information.',\n      );\n    }\n  }\n  if (__DEV__) {\n    if (\n      !props.suppressContentEditableWarning &&\n      props.contentEditable &&\n      props.children != null\n    ) {\n      console.error(\n        'A component is `contentEditable` and contains `children` managed by ' +\n          'React. It is now your responsibility to guarantee that none of ' +\n          'those nodes are unexpectedly modified or duplicated. This is ' +\n          'probably not intentional.',\n      );\n    }\n  }\n\n  if (props.style != null && typeof props.style !== 'object') {\n    throw new Error(\n      'The `style` prop expects a mapping from style properties to values, ' +\n        \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" +\n        'using JSX.',\n    );\n  }\n}\n\nexport default assertValidProps;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nfunction isCustomComponent(tagName: string, props: Object) {\n  if (tagName.indexOf('-') === -1) {\n    return typeof props.is === 'string';\n  }\n  switch (tagName) {\n    // These are reserved SVG and MathML elements.\n    // We don't mind this list too much because we expect it to never grow.\n    // The alternative is to track the namespace in a few places which is convoluted.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph':\n      return false;\n    default:\n      return true;\n  }\n}\n\nexport default isCustomComponent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type EventSystemFlags = number;\n\nexport const IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;\nexport const IS_NON_DELEGATED = 1 << 1;\nexport const IS_CAPTURE_PHASE = 1 << 2;\nexport const IS_PASSIVE = 1 << 3;\nexport const IS_LEGACY_FB_SUPPORT_MODE = 1 << 4;\n\nexport const SHOULD_NOT_DEFER_CLICK_FOR_FB_SUPPORT_MODE =\n  IS_LEGACY_FB_SUPPORT_MODE | IS_CAPTURE_PHASE;\n\n// We do not want to defer if the event system has already been\n// set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when\n// we call willDeferLaterForLegacyFBSupport, thus not bailing out\n// will result in endless cycles like an infinite loop.\n// We also don't want to defer during event replaying.\nexport const SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS =\n  IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nimport type {AnyNativeEvent} from '../events/PluginModuleType';\n\n// This exists to avoid circular dependency between ReactDOMEventReplaying\n// and DOMPluginEventSystem.\n\nlet currentReplayingEvent = null;\n\nexport function setReplayingEvent(event: AnyNativeEvent): void {\n  if (__DEV__) {\n    if (currentReplayingEvent !== null) {\n      console.error(\n        'Expected currently replaying event to be null. This error ' +\n          'is likely caused by a bug in React. Please file an issue.',\n      );\n    }\n  }\n  currentReplayingEvent = event;\n}\n\nexport function resetReplayingEvent(): void {\n  if (__DEV__) {\n    if (currentReplayingEvent === null) {\n      console.error(\n        'Expected currently replaying event to not be null. This error ' +\n          'is likely caused by a bug in React. Please file an issue.',\n      );\n    }\n  }\n  currentReplayingEvent = null;\n}\n\nexport function isReplayingEvent(event: AnyNativeEvent): boolean {\n  return event === currentReplayingEvent;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {TEXT_NODE} from '../shared/HTMLNodeType';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\nfunction getEventTarget(nativeEvent) {\n  // Fallback to nativeEvent.srcElement for IE9\n  // https://github.com/facebook/react/issues/12506\n  let target = nativeEvent.target || nativeEvent.srcElement || window;\n\n  // Normalize SVG <use> element events #4963\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  }\n\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === TEXT_NODE ? target.parentNode : target;\n}\n\nexport default getEventTarget;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  getInstanceFromNode,\n  getFiberCurrentPropsFromNode,\n} from '../client/ReactDOMComponentTree';\n\n// Use to restore controlled state after a change event has fired.\n\nlet restoreImpl = null;\nlet restoreTarget = null;\nlet restoreQueue = null;\n\nfunction restoreStateOfTarget(target: Node) {\n  // We perform this translation at the end of the event loop so that we\n  // always receive the correct fiber here\n  const internalInstance = getInstanceFromNode(target);\n  if (!internalInstance) {\n    // Unmounted\n    return;\n  }\n\n  if (typeof restoreImpl !== 'function') {\n    throw new Error(\n      'setRestoreImplementation() needs to be called to handle a target for controlled ' +\n        'events. This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const stateNode = internalInstance.stateNode;\n  // Guard against Fiber being unmounted.\n  if (stateNode) {\n    const props = getFiberCurrentPropsFromNode(stateNode);\n    restoreImpl(internalInstance.stateNode, internalInstance.type, props);\n  }\n}\n\nexport function setRestoreImplementation(\n  impl: (domElement: Element, tag: string, props: Object) => void,\n): void {\n  restoreImpl = impl;\n}\n\nexport function enqueueStateRestore(target: Node): void {\n  if (restoreTarget) {\n    if (restoreQueue) {\n      restoreQueue.push(target);\n    } else {\n      restoreQueue = [target];\n    }\n  } else {\n    restoreTarget = target;\n  }\n}\n\nexport function needsStateRestore(): boolean {\n  return restoreTarget !== null || restoreQueue !== null;\n}\n\nexport function restoreStateIfNeeded() {\n  if (!restoreTarget) {\n    return;\n  }\n  const target = restoreTarget;\n  const queuedTargets = restoreQueue;\n  restoreTarget = null;\n  restoreQueue = null;\n\n  restoreStateOfTarget(target);\n  if (queuedTargets) {\n    for (let i = 0; i < queuedTargets.length; i++) {\n      restoreStateOfTarget(queuedTargets[i]);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  needsStateRestore,\n  restoreStateIfNeeded,\n} from './ReactDOMControlledComponent';\n\n// Used as a way to call batchedUpdates when we don't have a reference to\n// the renderer. Such as when we're dispatching events or if third party\n// libraries need to call batchedUpdates. Eventually, this API will go away when\n// everything is batched by default. We'll then have a similar API to opt-out of\n// scheduled work and instead do synchronous work.\n\n// Defaults\nlet batchedUpdatesImpl = function(fn, bookkeeping) {\n  return fn(bookkeeping);\n};\nlet discreteUpdatesImpl = function(fn, a, b, c, d) {\n  return fn(a, b, c, d);\n};\nlet flushSyncImpl = function() {};\n\nlet isInsideEventHandler = false;\n\nfunction finishEventHandler() {\n  // Here we wait until all updates have propagated, which is important\n  // when using controlled components within layers:\n  // https://github.com/facebook/react/issues/1698\n  // Then we restore state of any controlled component.\n  const controlledComponentsHavePendingUpdates = needsStateRestore();\n  if (controlledComponentsHavePendingUpdates) {\n    // If a controlled event was fired, we may need to restore the state of\n    // the DOM node back to the controlled value. This is necessary when React\n    // bails out of the update without touching the DOM.\n    // TODO: Restore state in the microtask, after the discrete updates flush,\n    // instead of early flushing them here.\n    flushSyncImpl();\n    restoreStateIfNeeded();\n  }\n}\n\nexport function batchedUpdates(fn, a, b) {\n  if (isInsideEventHandler) {\n    // If we are currently inside another batch, we need to wait until it\n    // fully completes before restoring state.\n    return fn(a, b);\n  }\n  isInsideEventHandler = true;\n  try {\n    return batchedUpdatesImpl(fn, a, b);\n  } finally {\n    isInsideEventHandler = false;\n    finishEventHandler();\n  }\n}\n\n// TODO: Replace with flushSync\nexport function discreteUpdates(fn, a, b, c, d) {\n  return discreteUpdatesImpl(fn, a, b, c, d);\n}\n\nexport function setBatchingImplementation(\n  _batchedUpdatesImpl,\n  _discreteUpdatesImpl,\n  _flushSyncImpl,\n) {\n  batchedUpdatesImpl = _batchedUpdatesImpl;\n  discreteUpdatesImpl = _discreteUpdatesImpl;\n  flushSyncImpl = _flushSyncImpl;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\nimport type {Props} from '../client/ReactDOMHostConfig';\n\nimport {getFiberCurrentPropsFromNode} from '../client/ReactDOMComponentTree';\n\nfunction isInteractive(tag: string): boolean {\n  return (\n    tag === 'button' ||\n    tag === 'input' ||\n    tag === 'select' ||\n    tag === 'textarea'\n  );\n}\n\nfunction shouldPreventMouseEvent(\n  name: string,\n  type: string,\n  props: Props,\n): boolean {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n    case 'onMouseEnter':\n      return !!(props.disabled && isInteractive(type));\n    default:\n      return false;\n  }\n}\n\n/**\n * @param {object} inst The instance, which is the source of events.\n * @param {string} registrationName Name of listener (e.g. `onClick`).\n * @return {?function} The stored callback.\n */\nexport default function getListener(\n  inst: Fiber,\n  registrationName: string,\n): Function | null {\n  const stateNode = inst.stateNode;\n  if (stateNode === null) {\n    // Work in progress (ex: onload events in incremental mode).\n    return null;\n  }\n  const props = getFiberCurrentPropsFromNode(stateNode);\n  if (props === null) {\n    // Work in progress.\n    return null;\n  }\n  const listener = props[registrationName];\n  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {\n    return null;\n  }\n\n  if (listener && typeof listener !== 'function') {\n    throw new Error(\n      `Expected \\`${registrationName}\\` listener to be a function, instead got a value of \\`${typeof listener}\\` type.`,\n    );\n  }\n\n  return listener;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\n\nexport let passiveBrowserEventsSupported = false;\n\n// Check if browser support events with passive listeners\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\nif (canUseDOM) {\n  try {\n    const options = {};\n    // $FlowFixMe: Ignore Flow complaining about needing a value\n    Object.defineProperty(options, 'passive', {\n      get: function() {\n        passiveBrowserEventsSupported = true;\n      },\n    });\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, options);\n  } catch (e) {\n    passiveBrowserEventsSupported = false;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nfunction invokeGuardedCallbackProd<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n) {\n  const funcArgs = Array.prototype.slice.call(arguments, 3);\n  try {\n    func.apply(context, funcArgs);\n  } catch (error) {\n    this.onError(error);\n  }\n}\n\nlet invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n\nif (__DEV__) {\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n  // functions in invokeGuardedCallback, and the production version of\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n  // like caught exceptions, and the DevTools won't pause unless the developer\n  // takes the extra step of enabling pause on caught exceptions. This is\n  // unintuitive, though, because even though React has caught the error, from\n  // the developer's perspective, the error is uncaught.\n  //\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n  // DOM node, and call the user-provided callback from inside an event handler\n  // for that fake event. If the callback throws, the error is \"captured\" using\n  // a global event handler. But because the error happens in a different\n  // event loop context, it does not interrupt the normal program flow.\n  // Effectively, this gives us try-catch behavior without actually using\n  // try-catch. Neat!\n\n  // Check that the browser supports the APIs we need to implement our special\n  // DEV version of invokeGuardedCallback\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.dispatchEvent === 'function' &&\n    typeof document !== 'undefined' &&\n    typeof document.createEvent === 'function'\n  ) {\n    const fakeNode = document.createElement('react');\n\n    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev<\n      A,\n      B,\n      C,\n      D,\n      E,\n      F,\n      Context,\n    >(\n      name: string | null,\n      func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n      context: Context,\n      a: A,\n      b: B,\n      c: C,\n      d: D,\n      e: E,\n      f: F,\n    ) {\n      // If document doesn't exist we know for sure we will crash in this method\n      // when we call document.createEvent(). However this can cause confusing\n      // errors: https://github.com/facebook/create-react-app/issues/3482\n      // So we preemptively throw with a better message instead.\n      if (typeof document === 'undefined' || document === null) {\n        throw new Error(\n          'The `document` global was defined when React was initialized, but is not ' +\n            'defined anymore. This can happen in a test environment if a component ' +\n            'schedules an update from an asynchronous callback, but the test has already ' +\n            'finished running. To solve this, you can either unmount the component at ' +\n            'the end of your test (and ensure that any asynchronous operations get ' +\n            'canceled in `componentWillUnmount`), or you can change the test itself ' +\n            'to be asynchronous.',\n        );\n      }\n\n      const evt = document.createEvent('Event');\n\n      let didCall = false;\n      // Keeps track of whether the user-provided callback threw an error. We\n      // set this to true at the beginning, then set it to false right after\n      // calling the function. If the function errors, `didError` will never be\n      // set to false. This strategy works even if the browser is flaky and\n      // fails to call our global error handler, because it doesn't rely on\n      // the error event at all.\n      let didError = true;\n\n      // Keeps track of the value of window.event so that we can reset it\n      // during the callback to let user code access window.event in the\n      // browsers that support it.\n      const windowEvent = window.event;\n\n      // Keeps track of the descriptor of window.event to restore it after event\n      // dispatching: https://github.com/facebook/react/issues/13688\n      const windowEventDescriptor = Object.getOwnPropertyDescriptor(\n        window,\n        'event',\n      );\n\n      function restoreAfterDispatch() {\n        // We immediately remove the callback from event listeners so that\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n        // nested call would trigger the fake event handlers of any call higher\n        // in the stack.\n        fakeNode.removeEventListener(evtType, callCallback, false);\n\n        // We check for window.hasOwnProperty('event') to prevent the\n        // window.event assignment in both IE <= 10 as they throw an error\n        // \"Member not found\" in strict mode, and in Firefox which does not\n        // support window.event.\n        if (\n          typeof window.event !== 'undefined' &&\n          window.hasOwnProperty('event')\n        ) {\n          window.event = windowEvent;\n        }\n      }\n\n      // Create an event handler for our fake event. We will synchronously\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n      // call the user-provided callback.\n      const funcArgs = Array.prototype.slice.call(arguments, 3);\n      function callCallback() {\n        didCall = true;\n        restoreAfterDispatch();\n        func.apply(context, funcArgs);\n        didError = false;\n      }\n\n      // Create a global error event handler. We use this to capture the value\n      // that was thrown. It's possible that this error handler will fire more\n      // than once; for example, if non-React code also calls `dispatchEvent`\n      // and a handler for that event throws. We should be resilient to most of\n      // those cases. Even if our error event handler fires more than once, the\n      // last error event is always used. If the callback actually does error,\n      // we know that the last error event is the correct one, because it's not\n      // possible for anything else to have happened in between our callback\n      // erroring and the code that follows the `dispatchEvent` call below. If\n      // the callback doesn't error, but the error event was fired, we know to\n      // ignore it because `didError` will be false, as described above.\n      let error;\n      // Use this to track whether the error event is ever called.\n      let didSetError = false;\n      let isCrossOriginError = false;\n\n      function handleWindowError(event) {\n        error = event.error;\n        didSetError = true;\n        if (error === null && event.colno === 0 && event.lineno === 0) {\n          isCrossOriginError = true;\n        }\n        if (event.defaultPrevented) {\n          // Some other error handler has prevented default.\n          // Browsers silence the error report if this happens.\n          // We'll remember this to later decide whether to log it or not.\n          if (error != null && typeof error === 'object') {\n            try {\n              error._suppressLogging = true;\n            } catch (inner) {\n              // Ignore.\n            }\n          }\n        }\n      }\n\n      // Create a fake event type.\n      const evtType = `react-${name ? name : 'invokeguardedcallback'}`;\n\n      // Attach our event handlers\n      window.addEventListener('error', handleWindowError);\n      fakeNode.addEventListener(evtType, callCallback, false);\n\n      // Synchronously dispatch our fake event. If the user-provided function\n      // errors, it will trigger our global error handler.\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n\n      if (windowEventDescriptor) {\n        Object.defineProperty(window, 'event', windowEventDescriptor);\n      }\n\n      if (didCall && didError) {\n        if (!didSetError) {\n          // The callback errored, but the error event never fired.\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error(\n            'An error was thrown inside one of your components, but React ' +\n              \"doesn't know what it was. This is likely due to browser \" +\n              'flakiness. React does its best to preserve the \"Pause on ' +\n              'exceptions\" behavior of the DevTools, which requires some ' +\n              \"DEV-mode only tricks. It's possible that these don't work in \" +\n              'your browser. Try triggering the error in production mode, ' +\n              'or switching to a modern browser. If you suspect that this is ' +\n              'actually an issue with React, please file an issue.',\n          );\n        } else if (isCrossOriginError) {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error(\n            \"A cross-origin error was thrown. React doesn't have access to \" +\n              'the actual error object in development. ' +\n              'See https://reactjs.org/link/crossorigin-error for more information.',\n          );\n        }\n        this.onError(error);\n      }\n\n      // Remove our event listeners\n      window.removeEventListener('error', handleWindowError);\n\n      if (!didCall) {\n        // Something went really wrong, and our event was not dispatched.\n        // https://github.com/facebook/react/issues/16734\n        // https://github.com/facebook/react/issues/16585\n        // Fall back to the production implementation.\n        restoreAfterDispatch();\n        return invokeGuardedCallbackProd.apply(this, arguments);\n      }\n    };\n  }\n}\n\nexport default invokeGuardedCallbackImpl;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invokeGuardedCallbackImpl from './invokeGuardedCallbackImpl';\n\n// Used by Fiber to simulate a try-catch.\nlet hasError: boolean = false;\nlet caughtError: mixed = null;\n\n// Used by event system to capture/rethrow the first error.\nlet hasRethrowError: boolean = false;\nlet rethrowError: mixed = null;\n\nconst reporter = {\n  onError(error: mixed) {\n    hasError = true;\n    caughtError = error;\n  },\n};\n\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallback<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl.apply(reporter, arguments);\n}\n\n/**\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\n * TODO: See if caughtError and rethrowError can be unified.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallbackAndCatchFirstError<\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  Context,\n>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => void,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  invokeGuardedCallback.apply(this, arguments);\n  if (hasError) {\n    const error = clearCaughtError();\n    if (!hasRethrowError) {\n      hasRethrowError = true;\n      rethrowError = error;\n    }\n  }\n}\n\n/**\n * During execution of guarded functions we will capture the first error which\n * we will rethrow to be handled by the top level error handler.\n */\nexport function rethrowCaughtError() {\n  if (hasRethrowError) {\n    const error = rethrowError;\n    hasRethrowError = false;\n    rethrowError = null;\n    throw error;\n  }\n}\n\nexport function hasCaughtError() {\n  return hasError;\n}\n\nexport function clearCaughtError() {\n  if (hasError) {\n    const error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    throw new Error(\n      'clearCaughtError was called but no error was captured. This error ' +\n        'is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\n\n/**\n * This API should be called `delete` but we'd have to make sure to always\n * transform these to strings for IE support. When this transform is fully\n * supported we can rename it.\n */\nexport function remove(key) {\n  key._reactInternals = undefined;\n}\n\nexport function get(key) {\n  return key._reactInternals;\n}\n\nexport function has(key) {\n  return key._reactInternals !== undefined;\n}\n\nexport function set(key, value) {\n  key._reactInternals = value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {enableCreateEventHandleAPI} from 'shared/ReactFeatureFlags';\n\nexport type Flags = number;\n\n// Don't change these two values. They're used by React Dev Tools.\nexport const NoFlags = /*                      */ 0b00000000000000000000000000;\nexport const PerformedWork = /*                */ 0b00000000000000000000000001;\n\n// You can change the rest (and add more).\nexport const Placement = /*                    */ 0b00000000000000000000000010;\nexport const Update = /*                       */ 0b00000000000000000000000100;\nexport const Deletion = /*                     */ 0b00000000000000000000001000;\nexport const ChildDeletion = /*                */ 0b00000000000000000000010000;\nexport const ContentReset = /*                 */ 0b00000000000000000000100000;\nexport const Callback = /*                     */ 0b00000000000000000001000000;\nexport const DidCapture = /*                   */ 0b00000000000000000010000000;\nexport const ForceClientRender = /*            */ 0b00000000000000000100000000;\nexport const Ref = /*                          */ 0b00000000000000001000000000;\nexport const Snapshot = /*                     */ 0b00000000000000010000000000;\nexport const Passive = /*                      */ 0b00000000000000100000000000;\nexport const Hydrating = /*                    */ 0b00000000000001000000000000;\nexport const Visibility = /*                   */ 0b00000000000010000000000000;\nexport const StoreConsistency = /*             */ 0b00000000000100000000000000;\n\nexport const LifecycleEffectMask =\n  Passive | Update | Callback | Ref | Snapshot | StoreConsistency;\n\n// Union of all commit flags (flags with the lifetime of a particular commit)\nexport const HostEffectMask = /*               */ 0b00000000000111111111111111;\n\n// These are not really side effects, but we still reuse this field.\nexport const Incomplete = /*                   */ 0b00000000001000000000000000;\nexport const ShouldCapture = /*                */ 0b00000000010000000000000000;\nexport const ForceUpdateForLegacySuspense = /* */ 0b00000000100000000000000000;\nexport const DidPropagateContext = /*          */ 0b00000001000000000000000000;\nexport const NeedsPropagation = /*             */ 0b00000010000000000000000000;\nexport const Forked = /*                       */ 0b00000100000000000000000000;\n\n// Static tags describe aspects of a fiber that are not specific to a render,\n// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).\n// This enables us to defer more work in the unmount case,\n// since we can defer traversing the tree during layout to look for Passive effects,\n// and instead rely on the static flag as a signal that there may be cleanup work.\nexport const RefStatic = /*                    */ 0b00001000000000000000000000;\nexport const LayoutStatic = /*                 */ 0b00010000000000000000000000;\nexport const PassiveStatic = /*                */ 0b00100000000000000000000000;\n\n// These flags allow us to traverse to fibers that have effects on mount\n// without traversing the entire tree after every commit for\n// double invoking\nexport const MountLayoutDev = /*               */ 0b01000000000000000000000000;\nexport const MountPassiveDev = /*              */ 0b10000000000000000000000000;\n\n// Groups of flags that are used in the commit phase to skip over trees that\n// don't contain effects, by checking subtreeFlags.\n\nexport const BeforeMutationMask =\n  // TODO: Remove Update flag from before mutation phase by re-landing Visibility\n  // flag logic (see #20043)\n  Update |\n  Snapshot |\n  (enableCreateEventHandleAPI\n    ? // createEventHandle needs to visit deleted and hidden trees to\n      // fire beforeblur\n      // TODO: Only need to visit Deletions during BeforeMutation phase if an\n      // element is focused.\n      ChildDeletion | Visibility\n    : 0);\n\nexport const MutationMask =\n  Placement |\n  Update |\n  ChildDeletion |\n  ContentReset |\n  Ref |\n  Hydrating |\n  Visibility;\nexport const LayoutMask = Update | Callback | Ref | Visibility;\n\n// TODO: Split into PassiveMountMask and PassiveUnmountMask\nexport const PassiveMask = Passive | ChildDeletion;\n\n// Union of tags that don't get reset on clones.\n// This allows certain concepts to persist without recalculating them,\n// e.g. whether a subtree contains passive effects or portals.\nexport const StaticMask = LayoutStatic | PassiveStatic | RefStatic;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Container, SuspenseInstance} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {\n  ClassComponent,\n  HostComponent,\n  HostRoot,\n  HostPortal,\n  HostText,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport {NoFlags, Placement, Hydrating} from './ReactFiberFlags';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nexport function getNearestMountedFiber(fiber: Fiber): null | Fiber {\n  let node = fiber;\n  let nearestMounted = fiber;\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    let nextNode = node;\n    do {\n      node = nextNode;\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n        // This is an insertion or in-progress hydration. The nearest possible\n        // mounted fiber is the parent but we need to continue to figure out\n        // if that one is still mounted.\n        nearestMounted = node.return;\n      }\n      nextNode = node.return;\n    } while (nextNode);\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return nearestMounted;\n  }\n  // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n  return null;\n}\n\nexport function getSuspenseInstanceFromFiber(\n  fiber: Fiber,\n): null | SuspenseInstance {\n  if (fiber.tag === SuspenseComponent) {\n    let suspenseState: SuspenseState | null = fiber.memoizedState;\n    if (suspenseState === null) {\n      const current = fiber.alternate;\n      if (current !== null) {\n        suspenseState = current.memoizedState;\n      }\n    }\n    if (suspenseState !== null) {\n      return suspenseState.dehydrated;\n    }\n  }\n  return null;\n}\n\nexport function getContainerFromFiber(fiber: Fiber): null | Container {\n  return fiber.tag === HostRoot\n    ? (fiber.stateNode.containerInfo: Container)\n    : null;\n}\n\nexport function isFiberMounted(fiber: Fiber): boolean {\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nexport function isMounted(component: React$Component<any, any>): boolean {\n  if (__DEV__) {\n    const owner = (ReactCurrentOwner.current: any);\n    if (owner !== null && owner.tag === ClassComponent) {\n      const ownerFiber: Fiber = owner;\n      const instance = ownerFiber.stateNode;\n      if (!instance._warnedAboutRefsInRender) {\n        console.error(\n          '%s is accessing isMounted inside its render() function. ' +\n            'render() should be a pure function of props and state. It should ' +\n            'never access something that requires stale data from the previous ' +\n            'render, such as refs. Move this logic to componentDidMount and ' +\n            'componentDidUpdate instead.',\n          getComponentNameFromFiber(ownerFiber) || 'A component',\n        );\n      }\n      instance._warnedAboutRefsInRender = true;\n    }\n  }\n\n  const fiber: ?Fiber = getInstance(component);\n  if (!fiber) {\n    return false;\n  }\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber) {\n    throw new Error('Unable to find node on an unmounted component.');\n  }\n}\n\nexport function findCurrentFiberUsingSlowPath(fiber: Fiber): Fiber | null {\n  const alternate = fiber.alternate;\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    const nearestMounted = getNearestMountedFiber(fiber);\n\n    if (nearestMounted === null) {\n      throw new Error('Unable to find node on an unmounted component.');\n    }\n\n    if (nearestMounted !== fiber) {\n      return null;\n    }\n    return fiber;\n  }\n  // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n  let a: Fiber = fiber;\n  let b: Fiber = alternate;\n  while (true) {\n    const parentA = a.return;\n    if (parentA === null) {\n      // We're at the root.\n      break;\n    }\n    const parentB = parentA.alternate;\n    if (parentB === null) {\n      // There is no alternate. This is an unusual case. Currently, it only\n      // happens when a Suspense component is hidden. An extra fragment fiber\n      // is inserted in between the Suspense fiber and its children. Skip\n      // over this extra fragment fiber and proceed to the next parent.\n      const nextParent = parentA.return;\n      if (nextParent !== null) {\n        a = b = nextParent;\n        continue;\n      }\n      // If there's no parent, we're at the root.\n      break;\n    }\n\n    // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n    if (parentA.child === parentB.child) {\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n        child = child.sibling;\n      }\n\n      // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n      throw new Error('Unable to find node on an unmounted component.');\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      let didFindChild = false;\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child = child.sibling;\n      }\n      if (!didFindChild) {\n        // Search parent B's child set\n        child = parentB.child;\n        while (child) {\n          if (child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child = child.sibling;\n        }\n\n        if (!didFindChild) {\n          throw new Error(\n            'Child was not found in either parent set. This indicates a bug ' +\n              'in React related to the return pointer. Please file an issue.',\n          );\n        }\n      }\n    }\n\n    if (a.alternate !== b) {\n      throw new Error(\n        \"Return fibers should always be each others' alternates. \" +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n    }\n  }\n\n  // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n  if (a.tag !== HostRoot) {\n    throw new Error('Unable to find node on an unmounted component.');\n  }\n\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  }\n  // Otherwise B has to be current branch.\n  return alternate;\n}\n\nexport function findCurrentHostFiber(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  return currentParent !== null\n    ? findCurrentHostFiberImpl(currentParent)\n    : null;\n}\n\nfunction findCurrentHostFiberImpl(node: Fiber) {\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  if (node.tag === HostComponent || node.tag === HostText) {\n    return node;\n  }\n\n  let child = node.child;\n  while (child !== null) {\n    const match = findCurrentHostFiberImpl(child);\n    if (match !== null) {\n      return match;\n    }\n    child = child.sibling;\n  }\n\n  return null;\n}\n\nexport function findCurrentHostFiberWithNoPortals(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  return currentParent !== null\n    ? findCurrentHostFiberWithNoPortalsImpl(currentParent)\n    : null;\n}\n\nfunction findCurrentHostFiberWithNoPortalsImpl(node: Fiber) {\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  if (node.tag === HostComponent || node.tag === HostText) {\n    return node;\n  }\n\n  let child = node.child;\n  while (child !== null) {\n    if (child.tag !== HostPortal) {\n      const match = findCurrentHostFiberWithNoPortalsImpl(child);\n      if (match !== null) {\n        return match;\n      }\n    }\n    child = child.sibling;\n  }\n\n  return null;\n}\n\nexport function isFiberSuspenseAndTimedOut(fiber: Fiber): boolean {\n  const memoizedState = fiber.memoizedState;\n  return (\n    fiber.tag === SuspenseComponent &&\n    memoizedState !== null &&\n    memoizedState.dehydrated === null\n  );\n}\n\nexport function doesFiberContain(\n  parentFiber: Fiber,\n  childFiber: Fiber,\n): boolean {\n  let node = childFiber;\n  const parentFiberAlternate = parentFiber.alternate;\n  while (node !== null) {\n    if (node === parentFiber || node === parentFiberAlternate) {\n      return true;\n    }\n    node = node.return;\n  }\n  return false;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// This module only exists as an ESM wrapper around the external CommonJS\n// Scheduler dependency. Notice that we're intentionally not using named imports\n// because Rollup would use dynamic dispatch for CommonJS interop named imports.\n// When we switch to ESM, we can delete this module.\nimport * as Scheduler from 'scheduler';\n\nexport const scheduleCallback = Scheduler.unstable_scheduleCallback;\nexport const cancelCallback = Scheduler.unstable_cancelCallback;\nexport const shouldYield = Scheduler.unstable_shouldYield;\nexport const requestPaint = Scheduler.unstable_requestPaint;\nexport const now = Scheduler.unstable_now;\nexport const getCurrentPriorityLevel =\n  Scheduler.unstable_getCurrentPriorityLevel;\nexport const ImmediatePriority = Scheduler.unstable_ImmediatePriority;\nexport const UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;\nexport const NormalPriority = Scheduler.unstable_NormalPriority;\nexport const LowPriority = Scheduler.unstable_LowPriority;\nexport const IdlePriority = Scheduler.unstable_IdlePriority;\nexport type SchedulerCallback = (isSync: boolean) => SchedulerCallback | null;\n\n// this doesn't actually exist on the scheduler, but it *does*\n// on scheduler/unstable_mock, which we'll need for internal testing\nexport const unstable_yieldValue = Scheduler.unstable_yieldValue;\nexport const unstable_setDisableYieldValue =\n  Scheduler.unstable_setDisableYieldValue;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Lane, Lanes} from './ReactFiberLane.old';\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {ReactNodeList, Wakeable} from 'shared/ReactTypes';\nimport type {EventPriority} from './ReactEventPriorities.old';\n// import type {DevToolsProfilingHooks} from 'react-devtools-shared/src/backend/types';\n// TODO: This import doesn't work because the DevTools depend on the DOM version of React\n// and to properly type check against DOM React we can't also type check again non-DOM\n// React which this hook might be in.\ntype DevToolsProfilingHooks = any;\n\nimport {\n  getLabelForLane,\n  TotalLanes,\n} from 'react-reconciler/src/ReactFiberLane.old';\nimport {DidCapture} from './ReactFiberFlags';\nimport {\n  consoleManagedByDevToolsDuringStrictMode,\n  enableProfilerTimer,\n  enableSchedulingProfiler,\n} from 'shared/ReactFeatureFlags';\nimport {\n  DiscreteEventPriority,\n  ContinuousEventPriority,\n  DefaultEventPriority,\n  IdleEventPriority,\n} from './ReactEventPriorities.old';\nimport {\n  ImmediatePriority as ImmediateSchedulerPriority,\n  UserBlockingPriority as UserBlockingSchedulerPriority,\n  NormalPriority as NormalSchedulerPriority,\n  IdlePriority as IdleSchedulerPriority,\n  unstable_yieldValue,\n  unstable_setDisableYieldValue,\n} from './Scheduler';\nimport {setSuppressWarning} from 'shared/consoleWithStackDev';\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\ndeclare var __REACT_DEVTOOLS_GLOBAL_HOOK__: Object | void;\n\nlet rendererID = null;\nlet injectedHook = null;\nlet injectedProfilingHooks: DevToolsProfilingHooks | null = null;\nlet hasLoggedError = false;\n\nexport const isDevToolsPresent =\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\n\nexport function injectInternals(internals: Object): boolean {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n  const hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n  if (!hook.supportsFiber) {\n    if (__DEV__) {\n      console.error(\n        'The installed version of React DevTools is too old and will not work ' +\n          'with the current version of React. Please update React DevTools. ' +\n          'https://reactjs.org/link/react-devtools',\n      );\n    }\n    // DevTools exists, even though it doesn't support Fiber.\n    return true;\n  }\n  try {\n    if (enableSchedulingProfiler) {\n      // Conditionally inject these hooks only if Timeline profiler is supported by this build.\n      // This gives DevTools a way to feature detect that isn't tied to version number\n      // (since profiling and timeline are controlled by different feature flags).\n      internals = {\n        ...internals,\n        getLaneLabelMap,\n        injectProfilingHooks,\n      };\n    }\n\n    rendererID = hook.inject(internals);\n\n    // We have successfully injected, so now it is safe to set up hooks.\n    injectedHook = hook;\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    if (__DEV__) {\n      console.error('React instrumentation encountered an error: %s.', err);\n    }\n  }\n  if (hook.checkDCE) {\n    // This is the real DevTools.\n    return true;\n  } else {\n    // This is likely a hook installed by Fast Refresh runtime.\n    return false;\n  }\n}\n\nexport function onScheduleRoot(root: FiberRoot, children: ReactNodeList) {\n  if (__DEV__) {\n    if (\n      injectedHook &&\n      typeof injectedHook.onScheduleFiberRoot === 'function'\n    ) {\n      try {\n        injectedHook.onScheduleFiberRoot(rendererID, root, children);\n      } catch (err) {\n        if (__DEV__ && !hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onCommitRoot(root: FiberRoot, eventPriority: EventPriority) {\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {\n    try {\n      const didError = (root.current.flags & DidCapture) === DidCapture;\n      if (enableProfilerTimer) {\n        let schedulerPriority;\n        switch (eventPriority) {\n          case DiscreteEventPriority:\n            schedulerPriority = ImmediateSchedulerPriority;\n            break;\n          case ContinuousEventPriority:\n            schedulerPriority = UserBlockingSchedulerPriority;\n            break;\n          case DefaultEventPriority:\n            schedulerPriority = NormalSchedulerPriority;\n            break;\n          case IdleEventPriority:\n            schedulerPriority = IdleSchedulerPriority;\n            break;\n          default:\n            schedulerPriority = NormalSchedulerPriority;\n            break;\n        }\n        injectedHook.onCommitFiberRoot(\n          rendererID,\n          root,\n          schedulerPriority,\n          didError,\n        );\n      } else {\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n      }\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onPostCommitRoot(root: FiberRoot) {\n  if (\n    injectedHook &&\n    typeof injectedHook.onPostCommitFiberRoot === 'function'\n  ) {\n    try {\n      injectedHook.onPostCommitFiberRoot(rendererID, root);\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onCommitUnmount(fiber: Fiber) {\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function setIsStrictModeForDevtools(newIsStrictMode: boolean) {\n  if (consoleManagedByDevToolsDuringStrictMode) {\n    if (typeof unstable_yieldValue === 'function') {\n      // We're in a test because Scheduler.unstable_yieldValue only exists\n      // in SchedulerMock. To reduce the noise in strict mode tests,\n      // suppress warnings and disable scheduler yielding during the double render\n      unstable_setDisableYieldValue(newIsStrictMode);\n      setSuppressWarning(newIsStrictMode);\n    }\n\n    if (injectedHook && typeof injectedHook.setStrictMode === 'function') {\n      try {\n        injectedHook.setStrictMode(rendererID, newIsStrictMode);\n      } catch (err) {\n        if (__DEV__) {\n          if (!hasLoggedError) {\n            hasLoggedError = true;\n            console.error(\n              'React instrumentation encountered an error: %s',\n              err,\n            );\n          }\n        }\n      }\n    }\n  } else {\n    if (newIsStrictMode) {\n      disableLogs();\n    } else {\n      reenableLogs();\n    }\n  }\n}\n\n// Profiler API hooks\n\nfunction injectProfilingHooks(profilingHooks: DevToolsProfilingHooks): void {\n  injectedProfilingHooks = profilingHooks;\n}\n\nfunction getLaneLabelMap(): Map<Lane, string> | null {\n  if (enableSchedulingProfiler) {\n    const map: Map<Lane, string> = new Map();\n\n    let lane = 1;\n    for (let index = 0; index < TotalLanes; index++) {\n      const label = ((getLabelForLane(lane): any): string);\n      map.set(lane, label);\n      lane *= 2;\n    }\n\n    return map;\n  } else {\n    return null;\n  }\n}\n\nexport function markCommitStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markCommitStarted === 'function'\n    ) {\n      injectedProfilingHooks.markCommitStarted(lanes);\n    }\n  }\n}\n\nexport function markCommitStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markCommitStopped === 'function'\n    ) {\n      injectedProfilingHooks.markCommitStopped();\n    }\n  }\n}\n\nexport function markComponentRenderStarted(fiber: Fiber): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentRenderStarted === 'function'\n    ) {\n      injectedProfilingHooks.markComponentRenderStarted(fiber);\n    }\n  }\n}\n\nexport function markComponentRenderStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentRenderStopped === 'function'\n    ) {\n      injectedProfilingHooks.markComponentRenderStopped();\n    }\n  }\n}\n\nexport function markComponentPassiveEffectMountStarted(fiber: Fiber): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted ===\n        'function'\n    ) {\n      injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);\n    }\n  }\n}\n\nexport function markComponentPassiveEffectMountStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped ===\n        'function'\n    ) {\n      injectedProfilingHooks.markComponentPassiveEffectMountStopped();\n    }\n  }\n}\n\nexport function markComponentPassiveEffectUnmountStarted(fiber: Fiber): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted ===\n        'function'\n    ) {\n      injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);\n    }\n  }\n}\n\nexport function markComponentPassiveEffectUnmountStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped ===\n        'function'\n    ) {\n      injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();\n    }\n  }\n}\n\nexport function markComponentLayoutEffectMountStarted(fiber: Fiber): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted ===\n        'function'\n    ) {\n      injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);\n    }\n  }\n}\n\nexport function markComponentLayoutEffectMountStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped ===\n        'function'\n    ) {\n      injectedProfilingHooks.markComponentLayoutEffectMountStopped();\n    }\n  }\n}\n\nexport function markComponentLayoutEffectUnmountStarted(fiber: Fiber): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted ===\n        'function'\n    ) {\n      injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);\n    }\n  }\n}\n\nexport function markComponentLayoutEffectUnmountStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped ===\n        'function'\n    ) {\n      injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();\n    }\n  }\n}\n\nexport function markComponentErrored(\n  fiber: Fiber,\n  thrownValue: mixed,\n  lanes: Lanes,\n): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentErrored === 'function'\n    ) {\n      injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);\n    }\n  }\n}\n\nexport function markComponentSuspended(\n  fiber: Fiber,\n  wakeable: Wakeable,\n  lanes: Lanes,\n): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentSuspended === 'function'\n    ) {\n      injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);\n    }\n  }\n}\n\nexport function markLayoutEffectsStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markLayoutEffectsStarted === 'function'\n    ) {\n      injectedProfilingHooks.markLayoutEffectsStarted(lanes);\n    }\n  }\n}\n\nexport function markLayoutEffectsStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markLayoutEffectsStopped === 'function'\n    ) {\n      injectedProfilingHooks.markLayoutEffectsStopped();\n    }\n  }\n}\n\nexport function markPassiveEffectsStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markPassiveEffectsStarted === 'function'\n    ) {\n      injectedProfilingHooks.markPassiveEffectsStarted(lanes);\n    }\n  }\n}\n\nexport function markPassiveEffectsStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markPassiveEffectsStopped === 'function'\n    ) {\n      injectedProfilingHooks.markPassiveEffectsStopped();\n    }\n  }\n}\n\nexport function markRenderStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markRenderStarted === 'function'\n    ) {\n      injectedProfilingHooks.markRenderStarted(lanes);\n    }\n  }\n}\n\nexport function markRenderYielded(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markRenderYielded === 'function'\n    ) {\n      injectedProfilingHooks.markRenderYielded();\n    }\n  }\n}\n\nexport function markRenderStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markRenderStopped === 'function'\n    ) {\n      injectedProfilingHooks.markRenderStopped();\n    }\n  }\n}\n\nexport function markRenderScheduled(lane: Lane): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markRenderScheduled === 'function'\n    ) {\n      injectedProfilingHooks.markRenderScheduled(lane);\n    }\n  }\n}\n\nexport function markForceUpdateScheduled(fiber: Fiber, lane: Lane): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markForceUpdateScheduled === 'function'\n    ) {\n      injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);\n    }\n  }\n}\n\nexport function markStateUpdateScheduled(fiber: Fiber, lane: Lane): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markStateUpdateScheduled === 'function'\n    ) {\n      injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type TypeOfMode = number;\n\nexport const NoMode = /*                         */ 0b000000;\n// TODO: Remove ConcurrentMode by reading from the root tag instead\nexport const ConcurrentMode = /*                 */ 0b000001;\nexport const ProfileMode = /*                    */ 0b000010;\nexport const DebugTracingMode = /*               */ 0b000100;\nexport const StrictLegacyMode = /*               */ 0b001000;\nexport const StrictEffectsMode = /*              */ 0b010000;\nexport const ConcurrentUpdatesByDefaultMode = /* */ 0b100000;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// TODO: This is pretty well supported by browsers. Maybe we can drop it.\n\nexport const clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;\n\n// Count leading zeros.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\nconst log = Math.log;\nconst LN2 = Math.LN2;\nfunction clz32Fallback(x: number): number {\n  const asUint = x >>> 0;\n  if (asUint === 0) {\n    return 32;\n  }\n  return (31 - ((log(asUint) / LN2) | 0)) | 0;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Transition} from './ReactFiberTracingMarkerComponent.old';\n\n// TODO: Ideally these types would be opaque but that doesn't work well with\n// our reconciler fork infra, since these leak into non-reconciler packages.\n\nexport type Lanes = number;\nexport type Lane = number;\nexport type LaneMap<T> = Array<T>;\n\nimport {\n  enableSchedulingProfiler,\n  enableUpdaterTracking,\n  allowConcurrentByDefault,\n  enableTransitionTracing,\n} from 'shared/ReactFeatureFlags';\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook.old';\nimport {ConcurrentUpdatesByDefaultMode, NoMode} from './ReactTypeOfMode';\nimport {clz32} from './clz32';\n\n// Lane values below should be kept in sync with getLabelForLane(), used by react-devtools-timeline.\n// If those values are changed that package should be rebuilt and redeployed.\n\nexport const TotalLanes = 31;\n\nexport const NoLanes: Lanes = /*                        */ 0b0000000000000000000000000000000;\nexport const NoLane: Lane = /*                          */ 0b0000000000000000000000000000000;\n\nexport const SyncLane: Lane = /*                        */ 0b0000000000000000000000000000001;\n\nexport const InputContinuousHydrationLane: Lane = /*    */ 0b0000000000000000000000000000010;\nexport const InputContinuousLane: Lane = /*             */ 0b0000000000000000000000000000100;\n\nexport const DefaultHydrationLane: Lane = /*            */ 0b0000000000000000000000000001000;\nexport const DefaultLane: Lane = /*                     */ 0b0000000000000000000000000010000;\n\nconst TransitionHydrationLane: Lane = /*                */ 0b0000000000000000000000000100000;\nconst TransitionLanes: Lanes = /*                       */ 0b0000000001111111111111111000000;\nconst TransitionLane1: Lane = /*                        */ 0b0000000000000000000000001000000;\nconst TransitionLane2: Lane = /*                        */ 0b0000000000000000000000010000000;\nconst TransitionLane3: Lane = /*                        */ 0b0000000000000000000000100000000;\nconst TransitionLane4: Lane = /*                        */ 0b0000000000000000000001000000000;\nconst TransitionLane5: Lane = /*                        */ 0b0000000000000000000010000000000;\nconst TransitionLane6: Lane = /*                        */ 0b0000000000000000000100000000000;\nconst TransitionLane7: Lane = /*                        */ 0b0000000000000000001000000000000;\nconst TransitionLane8: Lane = /*                        */ 0b0000000000000000010000000000000;\nconst TransitionLane9: Lane = /*                        */ 0b0000000000000000100000000000000;\nconst TransitionLane10: Lane = /*                       */ 0b0000000000000001000000000000000;\nconst TransitionLane11: Lane = /*                       */ 0b0000000000000010000000000000000;\nconst TransitionLane12: Lane = /*                       */ 0b0000000000000100000000000000000;\nconst TransitionLane13: Lane = /*                       */ 0b0000000000001000000000000000000;\nconst TransitionLane14: Lane = /*                       */ 0b0000000000010000000000000000000;\nconst TransitionLane15: Lane = /*                       */ 0b0000000000100000000000000000000;\nconst TransitionLane16: Lane = /*                       */ 0b0000000001000000000000000000000;\n\nconst RetryLanes: Lanes = /*                            */ 0b0000111110000000000000000000000;\nconst RetryLane1: Lane = /*                             */ 0b0000000010000000000000000000000;\nconst RetryLane2: Lane = /*                             */ 0b0000000100000000000000000000000;\nconst RetryLane3: Lane = /*                             */ 0b0000001000000000000000000000000;\nconst RetryLane4: Lane = /*                             */ 0b0000010000000000000000000000000;\nconst RetryLane5: Lane = /*                             */ 0b0000100000000000000000000000000;\n\nexport const SomeRetryLane: Lane = RetryLane1;\n\nexport const SelectiveHydrationLane: Lane = /*          */ 0b0001000000000000000000000000000;\n\nconst NonIdleLanes: Lanes = /*                          */ 0b0001111111111111111111111111111;\n\nexport const IdleHydrationLane: Lane = /*               */ 0b0010000000000000000000000000000;\nexport const IdleLane: Lane = /*                        */ 0b0100000000000000000000000000000;\n\nexport const OffscreenLane: Lane = /*                   */ 0b1000000000000000000000000000000;\n\n// This function is used for the experimental timeline (react-devtools-timeline)\n// It should be kept in sync with the Lanes values above.\nexport function getLabelForLane(lane: Lane): string | void {\n  if (enableSchedulingProfiler) {\n    if (lane & SyncLane) {\n      return 'Sync';\n    }\n    if (lane & InputContinuousHydrationLane) {\n      return 'InputContinuousHydration';\n    }\n    if (lane & InputContinuousLane) {\n      return 'InputContinuous';\n    }\n    if (lane & DefaultHydrationLane) {\n      return 'DefaultHydration';\n    }\n    if (lane & DefaultLane) {\n      return 'Default';\n    }\n    if (lane & TransitionHydrationLane) {\n      return 'TransitionHydration';\n    }\n    if (lane & TransitionLanes) {\n      return 'Transition';\n    }\n    if (lane & RetryLanes) {\n      return 'Retry';\n    }\n    if (lane & SelectiveHydrationLane) {\n      return 'SelectiveHydration';\n    }\n    if (lane & IdleHydrationLane) {\n      return 'IdleHydration';\n    }\n    if (lane & IdleLane) {\n      return 'Idle';\n    }\n    if (lane & OffscreenLane) {\n      return 'Offscreen';\n    }\n  }\n}\n\nexport const NoTimestamp = -1;\n\nlet nextTransitionLane: Lane = TransitionLane1;\nlet nextRetryLane: Lane = RetryLane1;\n\nfunction getHighestPriorityLanes(lanes: Lanes | Lane): Lanes {\n  switch (getHighestPriorityLane(lanes)) {\n    case SyncLane:\n      return SyncLane;\n    case InputContinuousHydrationLane:\n      return InputContinuousHydrationLane;\n    case InputContinuousLane:\n      return InputContinuousLane;\n    case DefaultHydrationLane:\n      return DefaultHydrationLane;\n    case DefaultLane:\n      return DefaultLane;\n    case TransitionHydrationLane:\n      return TransitionHydrationLane;\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return lanes & TransitionLanes;\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      return lanes & RetryLanes;\n    case SelectiveHydrationLane:\n      return SelectiveHydrationLane;\n    case IdleHydrationLane:\n      return IdleHydrationLane;\n    case IdleLane:\n      return IdleLane;\n    case OffscreenLane:\n      return OffscreenLane;\n    default:\n      if (__DEV__) {\n        console.error(\n          'Should have found matching lanes. This is a bug in React.',\n        );\n      }\n      // This shouldn't be reachable, but as a fallback, return the entire bitmask.\n      return lanes;\n  }\n}\n\nexport function getNextLanes(root: FiberRoot, wipLanes: Lanes): Lanes {\n  // Early bailout if there's no pending work left.\n  const pendingLanes = root.pendingLanes;\n  if (pendingLanes === NoLanes) {\n    return NoLanes;\n  }\n\n  let nextLanes = NoLanes;\n\n  const suspendedLanes = root.suspendedLanes;\n  const pingedLanes = root.pingedLanes;\n\n  // Do not work on any idle work until all the non-idle work has finished,\n  // even if the work is suspended.\n  const nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n  if (nonIdlePendingLanes !== NoLanes) {\n    const nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n    if (nonIdleUnblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n    } else {\n      const nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n      if (nonIdlePingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n      }\n    }\n  } else {\n    // The only remaining work is Idle.\n    const unblockedLanes = pendingLanes & ~suspendedLanes;\n    if (unblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(unblockedLanes);\n    } else {\n      if (pingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(pingedLanes);\n      }\n    }\n  }\n\n  if (nextLanes === NoLanes) {\n    // This should only be reachable if we're suspended\n    // TODO: Consider warning in this path if a fallback timer is not scheduled.\n    return NoLanes;\n  }\n\n  // If we're already in the middle of a render, switching lanes will interrupt\n  // it and we'll lose our progress. We should only do this if the new lanes are\n  // higher priority.\n  if (\n    wipLanes !== NoLanes &&\n    wipLanes !== nextLanes &&\n    // If we already suspended with a delay, then interrupting is fine. Don't\n    // bother waiting until the root is complete.\n    (wipLanes & suspendedLanes) === NoLanes\n  ) {\n    const nextLane = getHighestPriorityLane(nextLanes);\n    const wipLane = getHighestPriorityLane(wipLanes);\n    if (\n      // Tests whether the next lane is equal or lower priority than the wip\n      // one. This works because the bits decrease in priority as you go left.\n      nextLane >= wipLane ||\n      // Default priority updates should not interrupt transition updates. The\n      // only difference between default updates and transition updates is that\n      // default updates do not support refresh transitions.\n      (nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes)\n    ) {\n      // Keep working on the existing in-progress tree. Do not interrupt.\n      return wipLanes;\n    }\n  }\n\n  if (\n    allowConcurrentByDefault &&\n    (root.current.mode & ConcurrentUpdatesByDefaultMode) !== NoMode\n  ) {\n    // Do nothing, use the lanes as they were assigned.\n  } else if ((nextLanes & InputContinuousLane) !== NoLanes) {\n    // When updates are sync by default, we entangle continuous priority updates\n    // and default updates, so they render in the same batch. The only reason\n    // they use separate lanes is because continuous updates should interrupt\n    // transitions, but default updates should not.\n    nextLanes |= pendingLanes & DefaultLane;\n  }\n\n  // Check for entangled lanes and add them to the batch.\n  //\n  // A lane is said to be entangled with another when it's not allowed to render\n  // in a batch that does not also include the other lane. Typically we do this\n  // when multiple updates have the same source, and we only want to respond to\n  // the most recent event from that source.\n  //\n  // Note that we apply entanglements *after* checking for partial work above.\n  // This means that if a lane is entangled during an interleaved event while\n  // it's already rendering, we won't interrupt it. This is intentional, since\n  // entanglement is usually \"best effort\": we'll try our best to render the\n  // lanes in the same batch, but it's not worth throwing out partially\n  // completed work in order to do it.\n  // TODO: Reconsider this. The counter-argument is that the partial work\n  // represents an intermediate state, which we don't want to show to the user.\n  // And by spending extra time finishing it, we're increasing the amount of\n  // time it takes to show the final state, which is what they are actually\n  // waiting for.\n  //\n  // For those exceptions where entanglement is semantically important, like\n  // useMutableSource, we should ensure that there is no partial work at the\n  // time we apply the entanglement.\n  const entangledLanes = root.entangledLanes;\n  if (entangledLanes !== NoLanes) {\n    const entanglements = root.entanglements;\n    let lanes = nextLanes & entangledLanes;\n    while (lanes > 0) {\n      const index = pickArbitraryLaneIndex(lanes);\n      const lane = 1 << index;\n\n      nextLanes |= entanglements[index];\n\n      lanes &= ~lane;\n    }\n  }\n\n  return nextLanes;\n}\n\nexport function getMostRecentEventTime(root: FiberRoot, lanes: Lanes): number {\n  const eventTimes = root.eventTimes;\n\n  let mostRecentEventTime = NoTimestamp;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    const eventTime = eventTimes[index];\n    if (eventTime > mostRecentEventTime) {\n      mostRecentEventTime = eventTime;\n    }\n\n    lanes &= ~lane;\n  }\n\n  return mostRecentEventTime;\n}\n\nfunction computeExpirationTime(lane: Lane, currentTime: number) {\n  switch (lane) {\n    case SyncLane:\n    case InputContinuousHydrationLane:\n    case InputContinuousLane:\n      // User interactions should expire slightly more quickly.\n      //\n      // NOTE: This is set to the corresponding constant as in Scheduler.js.\n      // When we made it larger, a product metric in www regressed, suggesting\n      // there's a user interaction that's being starved by a series of\n      // synchronous updates. If that theory is correct, the proper solution is\n      // to fix the starvation. However, this scenario supports the idea that\n      // expiration times are an important safeguard when starvation\n      // does happen.\n      return currentTime + 250;\n    case DefaultHydrationLane:\n    case DefaultLane:\n    case TransitionHydrationLane:\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return currentTime + 5000;\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      // TODO: Retries should be allowed to expire if they are CPU bound for\n      // too long, but when I made this change it caused a spike in browser\n      // crashes. There must be some other underlying bug; not super urgent but\n      // ideally should figure out why and fix it. Unfortunately we don't have\n      // a repro for the crashes, only detected via production metrics.\n      return NoTimestamp;\n    case SelectiveHydrationLane:\n    case IdleHydrationLane:\n    case IdleLane:\n    case OffscreenLane:\n      // Anything idle priority or lower should never expire.\n      return NoTimestamp;\n    default:\n      if (__DEV__) {\n        console.error(\n          'Should have found matching lanes. This is a bug in React.',\n        );\n      }\n      return NoTimestamp;\n  }\n}\n\nexport function markStarvedLanesAsExpired(\n  root: FiberRoot,\n  currentTime: number,\n): void {\n  // TODO: This gets called every time we yield. We can optimize by storing\n  // the earliest expiration time on the root. Then use that to quickly bail out\n  // of this function.\n\n  const pendingLanes = root.pendingLanes;\n  const suspendedLanes = root.suspendedLanes;\n  const pingedLanes = root.pingedLanes;\n  const expirationTimes = root.expirationTimes;\n\n  // Iterate through the pending lanes and check if we've reached their\n  // expiration time. If so, we'll assume the update is being starved and mark\n  // it as expired to force it to finish.\n  let lanes = pendingLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    const expirationTime = expirationTimes[index];\n    if (expirationTime === NoTimestamp) {\n      // Found a pending lane with no expiration time. If it's not suspended, or\n      // if it's pinged, assume it's CPU-bound. Compute a new expiration time\n      // using the current time.\n      if (\n        (lane & suspendedLanes) === NoLanes ||\n        (lane & pingedLanes) !== NoLanes\n      ) {\n        // Assumes timestamps are monotonically increasing.\n        expirationTimes[index] = computeExpirationTime(lane, currentTime);\n      }\n    } else if (expirationTime <= currentTime) {\n      // This lane expired\n      root.expiredLanes |= lane;\n    }\n\n    lanes &= ~lane;\n  }\n}\n\n// This returns the highest priority pending lanes regardless of whether they\n// are suspended.\nexport function getHighestPriorityPendingLanes(root: FiberRoot) {\n  return getHighestPriorityLanes(root.pendingLanes);\n}\n\nexport function getLanesToRetrySynchronouslyOnError(root: FiberRoot): Lanes {\n  const everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n  if (everythingButOffscreen !== NoLanes) {\n    return everythingButOffscreen;\n  }\n  if (everythingButOffscreen & OffscreenLane) {\n    return OffscreenLane;\n  }\n  return NoLanes;\n}\n\nexport function includesSyncLane(lanes: Lanes) {\n  return (lanes & SyncLane) !== NoLanes;\n}\n\nexport function includesNonIdleWork(lanes: Lanes) {\n  return (lanes & NonIdleLanes) !== NoLanes;\n}\nexport function includesOnlyRetries(lanes: Lanes) {\n  return (lanes & RetryLanes) === lanes;\n}\nexport function includesOnlyNonUrgentLanes(lanes: Lanes) {\n  const UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;\n  return (lanes & UrgentLanes) === NoLanes;\n}\nexport function includesOnlyTransitions(lanes: Lanes) {\n  return (lanes & TransitionLanes) === lanes;\n}\n\nexport function includesBlockingLane(root: FiberRoot, lanes: Lanes) {\n  if (\n    allowConcurrentByDefault &&\n    (root.current.mode & ConcurrentUpdatesByDefaultMode) !== NoMode\n  ) {\n    // Concurrent updates by default always use time slicing.\n    return false;\n  }\n  const SyncDefaultLanes =\n    InputContinuousHydrationLane |\n    InputContinuousLane |\n    DefaultHydrationLane |\n    DefaultLane;\n  return (lanes & SyncDefaultLanes) !== NoLanes;\n}\n\nexport function includesExpiredLane(root: FiberRoot, lanes: Lanes) {\n  // This is a separate check from includesBlockingLane because a lane can\n  // expire after a render has already started.\n  return (lanes & root.expiredLanes) !== NoLanes;\n}\n\nexport function isTransitionLane(lane: Lane) {\n  return (lane & TransitionLanes) !== NoLanes;\n}\n\nexport function claimNextTransitionLane(): Lane {\n  // Cycle through the lanes, assigning each new transition to the next lane.\n  // In most cases, this means every transition gets its own lane, until we\n  // run out of lanes and cycle back to the beginning.\n  const lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n  if ((nextTransitionLane & TransitionLanes) === NoLanes) {\n    nextTransitionLane = TransitionLane1;\n  }\n  return lane;\n}\n\nexport function claimNextRetryLane(): Lane {\n  const lane = nextRetryLane;\n  nextRetryLane <<= 1;\n  if ((nextRetryLane & RetryLanes) === NoLanes) {\n    nextRetryLane = RetryLane1;\n  }\n  return lane;\n}\n\nexport function getHighestPriorityLane(lanes: Lanes): Lane {\n  return lanes & -lanes;\n}\n\nexport function pickArbitraryLane(lanes: Lanes): Lane {\n  // This wrapper function gets inlined. Only exists so to communicate that it\n  // doesn't matter which bit is selected; you can pick any bit without\n  // affecting the algorithms where its used. Here I'm using\n  // getHighestPriorityLane because it requires the fewest operations.\n  return getHighestPriorityLane(lanes);\n}\n\nfunction pickArbitraryLaneIndex(lanes: Lanes) {\n  return 31 - clz32(lanes);\n}\n\nfunction laneToIndex(lane: Lane) {\n  return pickArbitraryLaneIndex(lane);\n}\n\nexport function includesSomeLane(a: Lanes | Lane, b: Lanes | Lane) {\n  return (a & b) !== NoLanes;\n}\n\nexport function isSubsetOfLanes(set: Lanes, subset: Lanes | Lane) {\n  return (set & subset) === subset;\n}\n\nexport function mergeLanes(a: Lanes | Lane, b: Lanes | Lane): Lanes {\n  return a | b;\n}\n\nexport function removeLanes(set: Lanes, subset: Lanes | Lane): Lanes {\n  return set & ~subset;\n}\n\nexport function intersectLanes(a: Lanes | Lane, b: Lanes | Lane): Lanes {\n  return a & b;\n}\n\n// Seems redundant, but it changes the type from a single lane (used for\n// updates) to a group of lanes (used for flushing work).\nexport function laneToLanes(lane: Lane): Lanes {\n  return lane;\n}\n\nexport function higherPriorityLane(a: Lane, b: Lane) {\n  // This works because the bit ranges decrease in priority as you go left.\n  return a !== NoLane && a < b ? a : b;\n}\n\nexport function createLaneMap<T>(initial: T): LaneMap<T> {\n  // Intentionally pushing one by one.\n  // https://v8.dev/blog/elements-kinds#avoid-creating-holes\n  const laneMap = [];\n  for (let i = 0; i < TotalLanes; i++) {\n    laneMap.push(initial);\n  }\n  return laneMap;\n}\n\nexport function markRootUpdated(\n  root: FiberRoot,\n  updateLane: Lane,\n  eventTime: number,\n) {\n  root.pendingLanes |= updateLane;\n\n  // If there are any suspended transitions, it's possible this new update\n  // could unblock them. Clear the suspended lanes so that we can try rendering\n  // them again.\n  //\n  // TODO: We really only need to unsuspend only lanes that are in the\n  // `subtreeLanes` of the updated fiber, or the update lanes of the return\n  // path. This would exclude suspended updates in an unrelated sibling tree,\n  // since there's no way for this update to unblock it.\n  //\n  // We don't do this if the incoming update is idle, because we never process\n  // idle updates until after all the regular updates have finished; there's no\n  // way it could unblock a transition.\n  if (updateLane !== IdleLane) {\n    root.suspendedLanes = NoLanes;\n    root.pingedLanes = NoLanes;\n  }\n\n  const eventTimes = root.eventTimes;\n  const index = laneToIndex(updateLane);\n  // We can always overwrite an existing timestamp because we prefer the most\n  // recent event, and we assume time is monotonically increasing.\n  eventTimes[index] = eventTime;\n}\n\nexport function markRootSuspended(root: FiberRoot, suspendedLanes: Lanes) {\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes;\n\n  // The suspended lanes are no longer CPU-bound. Clear their expiration times.\n  const expirationTimes = root.expirationTimes;\n  let lanes = suspendedLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    expirationTimes[index] = NoTimestamp;\n\n    lanes &= ~lane;\n  }\n}\n\nexport function markRootPinged(\n  root: FiberRoot,\n  pingedLanes: Lanes,\n  eventTime: number,\n) {\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n}\n\nexport function markRootMutableRead(root: FiberRoot, updateLane: Lane) {\n  root.mutableReadLanes |= updateLane & root.pendingLanes;\n}\n\nexport function markRootFinished(root: FiberRoot, remainingLanes: Lanes) {\n  const noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n\n  root.pendingLanes = remainingLanes;\n\n  // Let's try everything again\n  root.suspendedLanes = NoLanes;\n  root.pingedLanes = NoLanes;\n\n  root.expiredLanes &= remainingLanes;\n  root.mutableReadLanes &= remainingLanes;\n\n  root.entangledLanes &= remainingLanes;\n\n  const entanglements = root.entanglements;\n  const eventTimes = root.eventTimes;\n  const expirationTimes = root.expirationTimes;\n\n  // Clear the lanes that no longer have pending work\n  let lanes = noLongerPendingLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    entanglements[index] = NoLanes;\n    eventTimes[index] = NoTimestamp;\n    expirationTimes[index] = NoTimestamp;\n\n    lanes &= ~lane;\n  }\n}\n\nexport function markRootEntangled(root: FiberRoot, entangledLanes: Lanes) {\n  // In addition to entangling each of the given lanes with each other, we also\n  // have to consider _transitive_ entanglements. For each lane that is already\n  // entangled with *any* of the given lanes, that lane is now transitively\n  // entangled with *all* the given lanes.\n  //\n  // Translated: If C is entangled with A, then entangling A with B also\n  // entangles C with B.\n  //\n  // If this is hard to grasp, it might help to intentionally break this\n  // function and look at the tests that fail in ReactTransition-test.js. Try\n  // commenting out one of the conditions below.\n\n  const rootEntangledLanes = (root.entangledLanes |= entangledLanes);\n  const entanglements = root.entanglements;\n  let lanes = rootEntangledLanes;\n  while (lanes) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n    if (\n      // Is this one of the newly entangled lanes?\n      (lane & entangledLanes) |\n      // Is this lane transitively entangled with the newly entangled lanes?\n      (entanglements[index] & entangledLanes)\n    ) {\n      entanglements[index] |= entangledLanes;\n    }\n    lanes &= ~lane;\n  }\n}\n\nexport function getBumpedLaneForHydration(\n  root: FiberRoot,\n  renderLanes: Lanes,\n): Lane {\n  const renderLane = getHighestPriorityLane(renderLanes);\n\n  let lane;\n  switch (renderLane) {\n    case InputContinuousLane:\n      lane = InputContinuousHydrationLane;\n      break;\n    case DefaultLane:\n      lane = DefaultHydrationLane;\n      break;\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      lane = TransitionHydrationLane;\n      break;\n    case IdleLane:\n      lane = IdleHydrationLane;\n      break;\n    default:\n      // Everything else is already either a hydration lane, or shouldn't\n      // be retried at a hydration lane.\n      lane = NoLane;\n      break;\n  }\n\n  // Check if the lane we chose is suspended. If so, that indicates that we\n  // already attempted and failed to hydrate at that level. Also check if we're\n  // already rendering that lane, which is rare but could happen.\n  if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\n    // Give up trying to hydrate and fall back to client render.\n    return NoLane;\n  }\n\n  return lane;\n}\n\nexport function addFiberToLanesMap(\n  root: FiberRoot,\n  fiber: Fiber,\n  lanes: Lanes | Lane,\n) {\n  if (!enableUpdaterTracking) {\n    return;\n  }\n  if (!isDevToolsPresent) {\n    return;\n  }\n  const pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n  while (lanes > 0) {\n    const index = laneToIndex(lanes);\n    const lane = 1 << index;\n\n    const updaters = pendingUpdatersLaneMap[index];\n    updaters.add(fiber);\n\n    lanes &= ~lane;\n  }\n}\n\nexport function movePendingFibersToMemoized(root: FiberRoot, lanes: Lanes) {\n  if (!enableUpdaterTracking) {\n    return;\n  }\n  if (!isDevToolsPresent) {\n    return;\n  }\n  const pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n  const memoizedUpdaters = root.memoizedUpdaters;\n  while (lanes > 0) {\n    const index = laneToIndex(lanes);\n    const lane = 1 << index;\n\n    const updaters = pendingUpdatersLaneMap[index];\n    if (updaters.size > 0) {\n      updaters.forEach(fiber => {\n        const alternate = fiber.alternate;\n        if (alternate === null || !memoizedUpdaters.has(alternate)) {\n          memoizedUpdaters.add(fiber);\n        }\n      });\n      updaters.clear();\n    }\n\n    lanes &= ~lane;\n  }\n}\n\nexport function addTransitionToLanesMap(\n  root: FiberRoot,\n  transition: Transition,\n  lane: Lane,\n) {\n  if (enableTransitionTracing) {\n    const transitionLanesMap = root.transitionLanes;\n    const index = laneToIndex(lane);\n    let transitions = transitionLanesMap[index];\n    if (transitions === null) {\n      transitions = [];\n    }\n    transitions.push(transition);\n\n    transitionLanesMap[index] = transitions;\n  }\n}\n\nexport function getTransitionsForLanes(\n  root: FiberRoot,\n  lanes: Lane | Lanes,\n): Array<Transition> | null {\n  if (!enableTransitionTracing) {\n    return null;\n  }\n\n  const transitionsForLanes = [];\n  while (lanes > 0) {\n    const index = laneToIndex(lanes);\n    const lane = 1 << index;\n    const transitions = root.transitionLanes[index];\n    if (transitions !== null) {\n      transitions.forEach(transition => {\n        transitionsForLanes.push(transition);\n      });\n    }\n\n    lanes &= ~lane;\n  }\n\n  if (transitionsForLanes.length === 0) {\n    return null;\n  }\n\n  return transitionsForLanes;\n}\n\nexport function clearTransitionsForLanes(root: FiberRoot, lanes: Lane | Lanes) {\n  if (!enableTransitionTracing) {\n    return;\n  }\n\n  while (lanes > 0) {\n    const index = laneToIndex(lanes);\n    const lane = 1 << index;\n\n    const transitions = root.transitionLanes[index];\n    if (transitions !== null) {\n      root.transitionLanes[index] = null;\n    }\n\n    lanes &= ~lane;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Lane, Lanes} from './ReactFiberLane.old';\n\nimport {\n  NoLane,\n  SyncLane,\n  InputContinuousLane,\n  DefaultLane,\n  IdleLane,\n  getHighestPriorityLane,\n  includesNonIdleWork,\n} from './ReactFiberLane.old';\n\nexport opaque type EventPriority = Lane;\n\nexport const DiscreteEventPriority: EventPriority = SyncLane;\nexport const ContinuousEventPriority: EventPriority = InputContinuousLane;\nexport const DefaultEventPriority: EventPriority = DefaultLane;\nexport const IdleEventPriority: EventPriority = IdleLane;\n\nlet currentUpdatePriority: EventPriority = NoLane;\n\nexport function getCurrentUpdatePriority(): EventPriority {\n  return currentUpdatePriority;\n}\n\nexport function setCurrentUpdatePriority(newPriority: EventPriority) {\n  currentUpdatePriority = newPriority;\n}\n\nexport function runWithPriority<T>(priority: EventPriority, fn: () => T): T {\n  const previousPriority = currentUpdatePriority;\n  try {\n    currentUpdatePriority = priority;\n    return fn();\n  } finally {\n    currentUpdatePriority = previousPriority;\n  }\n}\n\nexport function higherEventPriority(\n  a: EventPriority,\n  b: EventPriority,\n): EventPriority {\n  return a !== 0 && a < b ? a : b;\n}\n\nexport function lowerEventPriority(\n  a: EventPriority,\n  b: EventPriority,\n): EventPriority {\n  return a === 0 || a > b ? a : b;\n}\n\nexport function isHigherEventPriority(\n  a: EventPriority,\n  b: EventPriority,\n): boolean {\n  return a !== 0 && a < b;\n}\n\nexport function lanesToEventPriority(lanes: Lanes): EventPriority {\n  const lane = getHighestPriorityLane(lanes);\n  if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\n    return DiscreteEventPriority;\n  }\n  if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\n    return ContinuousEventPriority;\n  }\n  if (includesNonIdleWork(lane)) {\n    return DefaultEventPriority;\n  }\n  return IdleEventPriority;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {RootState} from './ReactFiberRoot.new';\n\n// This is imported by the event replaying implementation in React DOM. It's\n// in a separate file to break a circular dependency between the renderer and\n// the reconciler.\nexport function isRootDehydrated(root: FiberRoot) {\n  const currentState: RootState = root.current.memoizedState;\n  return currentState.isDehydrated;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {AnyNativeEvent} from '../events/PluginModuleType';\nimport type {Container, SuspenseInstance} from '../client/ReactDOMHostConfig';\nimport type {DOMEventName} from '../events/DOMEventNames';\nimport type {EventSystemFlags} from './EventSystemFlags';\nimport type {FiberRoot} from 'react-reconciler/src/ReactInternalTypes';\nimport type {EventPriority} from 'react-reconciler/src/ReactEventPriorities';\n\nimport {enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay} from 'shared/ReactFeatureFlags';\nimport {\n  unstable_scheduleCallback as scheduleCallback,\n  unstable_NormalPriority as NormalPriority,\n} from 'scheduler';\nimport {\n  getNearestMountedFiber,\n  getContainerFromFiber,\n  getSuspenseInstanceFromFiber,\n} from 'react-reconciler/src/ReactFiberTreeReflection';\nimport {\n  findInstanceBlockingEvent,\n  return_targetInst,\n} from './ReactDOMEventListener';\nimport {setReplayingEvent, resetReplayingEvent} from './CurrentReplayingEvent';\nimport {dispatchEventForPluginEventSystem} from './DOMPluginEventSystem';\nimport {\n  getInstanceFromNode,\n  getClosestInstanceFromNode,\n} from '../client/ReactDOMComponentTree';\nimport {HostRoot, SuspenseComponent} from 'react-reconciler/src/ReactWorkTags';\nimport {isHigherEventPriority} from 'react-reconciler/src/ReactEventPriorities';\nimport {isRootDehydrated} from 'react-reconciler/src/ReactFiberShellHydration';\n\nlet _attemptSynchronousHydration: (fiber: Object) => void;\n\nexport function setAttemptSynchronousHydration(fn: (fiber: Object) => void) {\n  _attemptSynchronousHydration = fn;\n}\n\nexport function attemptSynchronousHydration(fiber: Object) {\n  _attemptSynchronousHydration(fiber);\n}\n\nlet attemptDiscreteHydration: (fiber: Object) => void;\n\nexport function setAttemptDiscreteHydration(fn: (fiber: Object) => void) {\n  attemptDiscreteHydration = fn;\n}\n\nlet attemptContinuousHydration: (fiber: Object) => void;\n\nexport function setAttemptContinuousHydration(fn: (fiber: Object) => void) {\n  attemptContinuousHydration = fn;\n}\n\nlet attemptHydrationAtCurrentPriority: (fiber: Object) => void;\n\nexport function setAttemptHydrationAtCurrentPriority(\n  fn: (fiber: Object) => void,\n) {\n  attemptHydrationAtCurrentPriority = fn;\n}\n\nlet getCurrentUpdatePriority: () => EventPriority;\n\nexport function setGetCurrentUpdatePriority(fn: () => EventPriority) {\n  getCurrentUpdatePriority = fn;\n}\n\nlet attemptHydrationAtPriority: <T>(priority: EventPriority, fn: () => T) => T;\n\nexport function setAttemptHydrationAtPriority(\n  fn: <T>(priority: EventPriority, fn: () => T) => T,\n) {\n  attemptHydrationAtPriority = fn;\n}\n\n// TODO: Upgrade this definition once we're on a newer version of Flow that\n// has this definition built-in.\ntype PointerEvent = Event & {\n  pointerId: number,\n  relatedTarget: EventTarget | null,\n  ...\n};\n\ntype QueuedReplayableEvent = {|\n  blockedOn: null | Container | SuspenseInstance,\n  domEventName: DOMEventName,\n  eventSystemFlags: EventSystemFlags,\n  nativeEvent: AnyNativeEvent,\n  targetContainers: Array<EventTarget>,\n|};\n\nlet hasScheduledReplayAttempt = false;\n\n// The queue of discrete events to be replayed.\nconst queuedDiscreteEvents: Array<QueuedReplayableEvent> = [];\n\n// Indicates if any continuous event targets are non-null for early bailout.\nconst hasAnyQueuedContinuousEvents: boolean = false;\n// The last of each continuous event type. We only need to replay the last one\n// if the last target was dehydrated.\nlet queuedFocus: null | QueuedReplayableEvent = null;\nlet queuedDrag: null | QueuedReplayableEvent = null;\nlet queuedMouse: null | QueuedReplayableEvent = null;\n// For pointer events there can be one latest event per pointerId.\nconst queuedPointers: Map<number, QueuedReplayableEvent> = new Map();\nconst queuedPointerCaptures: Map<number, QueuedReplayableEvent> = new Map();\n// We could consider replaying selectionchange and touchmoves too.\n\ntype QueuedHydrationTarget = {|\n  blockedOn: null | Container | SuspenseInstance,\n  target: Node,\n  priority: EventPriority,\n|};\nconst queuedExplicitHydrationTargets: Array<QueuedHydrationTarget> = [];\n\nexport function hasQueuedDiscreteEvents(): boolean {\n  return queuedDiscreteEvents.length > 0;\n}\n\nexport function hasQueuedContinuousEvents(): boolean {\n  return hasAnyQueuedContinuousEvents;\n}\n\nconst discreteReplayableEvents: Array<DOMEventName> = [\n  'mousedown',\n  'mouseup',\n  'touchcancel',\n  'touchend',\n  'touchstart',\n  'auxclick',\n  'dblclick',\n  'pointercancel',\n  'pointerdown',\n  'pointerup',\n  'dragend',\n  'dragstart',\n  'drop',\n  'compositionend',\n  'compositionstart',\n  'keydown',\n  'keypress',\n  'keyup',\n  'input',\n  'textInput', // Intentionally camelCase\n  'copy',\n  'cut',\n  'paste',\n  'click',\n  'change',\n  'contextmenu',\n  'reset',\n  'submit',\n];\n\nexport function isDiscreteEventThatRequiresHydration(\n  eventType: DOMEventName,\n): boolean {\n  return discreteReplayableEvents.indexOf(eventType) > -1;\n}\n\nfunction createQueuedReplayableEvent(\n  blockedOn: null | Container | SuspenseInstance,\n  domEventName: DOMEventName,\n  eventSystemFlags: EventSystemFlags,\n  targetContainer: EventTarget,\n  nativeEvent: AnyNativeEvent,\n): QueuedReplayableEvent {\n  return {\n    blockedOn,\n    domEventName,\n    eventSystemFlags,\n    nativeEvent,\n    targetContainers: [targetContainer],\n  };\n}\n\nexport function queueDiscreteEvent(\n  blockedOn: null | Container | SuspenseInstance,\n  domEventName: DOMEventName,\n  eventSystemFlags: EventSystemFlags,\n  targetContainer: EventTarget,\n  nativeEvent: AnyNativeEvent,\n): void {\n  if (enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay) {\n    return;\n  }\n  const queuedEvent = createQueuedReplayableEvent(\n    blockedOn,\n    domEventName,\n    eventSystemFlags,\n    targetContainer,\n    nativeEvent,\n  );\n  queuedDiscreteEvents.push(queuedEvent);\n  if (queuedDiscreteEvents.length === 1) {\n    // If this was the first discrete event, we might be able to\n    // synchronously unblock it so that preventDefault still works.\n    while (queuedEvent.blockedOn !== null) {\n      const fiber = getInstanceFromNode(queuedEvent.blockedOn);\n      if (fiber === null) {\n        break;\n      }\n      attemptSynchronousHydration(fiber);\n      if (queuedEvent.blockedOn === null) {\n        // We got unblocked by hydration. Let's try again.\n        replayUnblockedEvents();\n        // If we're reblocked, on an inner boundary, we might need\n        // to attempt hydrating that one.\n        continue;\n      } else {\n        // We're still blocked from hydration, we have to give up\n        // and replay later.\n        break;\n      }\n    }\n  }\n}\n\n// Resets the replaying for this type of continuous event to no event.\nexport function clearIfContinuousEvent(\n  domEventName: DOMEventName,\n  nativeEvent: AnyNativeEvent,\n): void {\n  switch (domEventName) {\n    case 'focusin':\n    case 'focusout':\n      queuedFocus = null;\n      break;\n    case 'dragenter':\n    case 'dragleave':\n      queuedDrag = null;\n      break;\n    case 'mouseover':\n    case 'mouseout':\n      queuedMouse = null;\n      break;\n    case 'pointerover':\n    case 'pointerout': {\n      const pointerId = ((nativeEvent: any): PointerEvent).pointerId;\n      queuedPointers.delete(pointerId);\n      break;\n    }\n    case 'gotpointercapture':\n    case 'lostpointercapture': {\n      const pointerId = ((nativeEvent: any): PointerEvent).pointerId;\n      queuedPointerCaptures.delete(pointerId);\n      break;\n    }\n  }\n}\n\nfunction accumulateOrCreateContinuousQueuedReplayableEvent(\n  existingQueuedEvent: null | QueuedReplayableEvent,\n  blockedOn: null | Container | SuspenseInstance,\n  domEventName: DOMEventName,\n  eventSystemFlags: EventSystemFlags,\n  targetContainer: EventTarget,\n  nativeEvent: AnyNativeEvent,\n): QueuedReplayableEvent {\n  if (\n    existingQueuedEvent === null ||\n    existingQueuedEvent.nativeEvent !== nativeEvent\n  ) {\n    const queuedEvent = createQueuedReplayableEvent(\n      blockedOn,\n      domEventName,\n      eventSystemFlags,\n      targetContainer,\n      nativeEvent,\n    );\n    if (blockedOn !== null) {\n      const fiber = getInstanceFromNode(blockedOn);\n      if (fiber !== null) {\n        // Attempt to increase the priority of this target.\n        attemptContinuousHydration(fiber);\n      }\n    }\n    return queuedEvent;\n  }\n  // If we have already queued this exact event, then it's because\n  // the different event systems have different DOM event listeners.\n  // We can accumulate the flags, and the targetContainers, and\n  // store a single event to be replayed.\n  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;\n  const targetContainers = existingQueuedEvent.targetContainers;\n  if (\n    targetContainer !== null &&\n    targetContainers.indexOf(targetContainer) === -1\n  ) {\n    targetContainers.push(targetContainer);\n  }\n  return existingQueuedEvent;\n}\n\nexport function queueIfContinuousEvent(\n  blockedOn: null | Container | SuspenseInstance,\n  domEventName: DOMEventName,\n  eventSystemFlags: EventSystemFlags,\n  targetContainer: EventTarget,\n  nativeEvent: AnyNativeEvent,\n): boolean {\n  // These set relatedTarget to null because the replayed event will be treated as if we\n  // moved from outside the window (no target) onto the target once it hydrates.\n  // Instead of mutating we could clone the event.\n  switch (domEventName) {\n    case 'focusin': {\n      const focusEvent = ((nativeEvent: any): FocusEvent);\n      queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(\n        queuedFocus,\n        blockedOn,\n        domEventName,\n        eventSystemFlags,\n        targetContainer,\n        focusEvent,\n      );\n      return true;\n    }\n    case 'dragenter': {\n      const dragEvent = ((nativeEvent: any): DragEvent);\n      queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(\n        queuedDrag,\n        blockedOn,\n        domEventName,\n        eventSystemFlags,\n        targetContainer,\n        dragEvent,\n      );\n      return true;\n    }\n    case 'mouseover': {\n      const mouseEvent = ((nativeEvent: any): MouseEvent);\n      queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(\n        queuedMouse,\n        blockedOn,\n        domEventName,\n        eventSystemFlags,\n        targetContainer,\n        mouseEvent,\n      );\n      return true;\n    }\n    case 'pointerover': {\n      const pointerEvent = ((nativeEvent: any): PointerEvent);\n      const pointerId = pointerEvent.pointerId;\n      queuedPointers.set(\n        pointerId,\n        accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedPointers.get(pointerId) || null,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          pointerEvent,\n        ),\n      );\n      return true;\n    }\n    case 'gotpointercapture': {\n      const pointerEvent = ((nativeEvent: any): PointerEvent);\n      const pointerId = pointerEvent.pointerId;\n      queuedPointerCaptures.set(\n        pointerId,\n        accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedPointerCaptures.get(pointerId) || null,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          pointerEvent,\n        ),\n      );\n      return true;\n    }\n  }\n  return false;\n}\n\n// Check if this target is unblocked. Returns true if it's unblocked.\nfunction attemptExplicitHydrationTarget(\n  queuedTarget: QueuedHydrationTarget,\n): void {\n  // TODO: This function shares a lot of logic with findInstanceBlockingEvent.\n  // Try to unify them. It's a bit tricky since it would require two return\n  // values.\n  const targetInst = getClosestInstanceFromNode(queuedTarget.target);\n  if (targetInst !== null) {\n    const nearestMounted = getNearestMountedFiber(targetInst);\n    if (nearestMounted !== null) {\n      const tag = nearestMounted.tag;\n      if (tag === SuspenseComponent) {\n        const instance = getSuspenseInstanceFromFiber(nearestMounted);\n        if (instance !== null) {\n          // We're blocked on hydrating this boundary.\n          // Increase its priority.\n          queuedTarget.blockedOn = instance;\n          attemptHydrationAtPriority(queuedTarget.priority, () => {\n            attemptHydrationAtCurrentPriority(nearestMounted);\n          });\n\n          return;\n        }\n      } else if (tag === HostRoot) {\n        const root: FiberRoot = nearestMounted.stateNode;\n        if (isRootDehydrated(root)) {\n          queuedTarget.blockedOn = getContainerFromFiber(nearestMounted);\n          // We don't currently have a way to increase the priority of\n          // a root other than sync.\n          return;\n        }\n      }\n    }\n  }\n  queuedTarget.blockedOn = null;\n}\n\nexport function queueExplicitHydrationTarget(target: Node): void {\n  // TODO: This will read the priority if it's dispatched by the React\n  // event system but not native events. Should read window.event.type, like\n  // we do for updates (getCurrentEventPriority).\n  const updatePriority = getCurrentUpdatePriority();\n  const queuedTarget: QueuedHydrationTarget = {\n    blockedOn: null,\n    target: target,\n    priority: updatePriority,\n  };\n  let i = 0;\n  for (; i < queuedExplicitHydrationTargets.length; i++) {\n    // Stop once we hit the first target with lower priority than\n    if (\n      !isHigherEventPriority(\n        updatePriority,\n        queuedExplicitHydrationTargets[i].priority,\n      )\n    ) {\n      break;\n    }\n  }\n  queuedExplicitHydrationTargets.splice(i, 0, queuedTarget);\n  if (i === 0) {\n    attemptExplicitHydrationTarget(queuedTarget);\n  }\n}\n\nfunction attemptReplayContinuousQueuedEvent(\n  queuedEvent: QueuedReplayableEvent,\n): boolean {\n  if (queuedEvent.blockedOn !== null) {\n    return false;\n  }\n  const targetContainers = queuedEvent.targetContainers;\n  while (targetContainers.length > 0) {\n    const targetContainer = targetContainers[0];\n    const nextBlockedOn = findInstanceBlockingEvent(\n      queuedEvent.domEventName,\n      queuedEvent.eventSystemFlags,\n      targetContainer,\n      queuedEvent.nativeEvent,\n    );\n    if (nextBlockedOn === null) {\n      if (enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay) {\n        const nativeEvent = queuedEvent.nativeEvent;\n        const nativeEventClone = new nativeEvent.constructor(\n          nativeEvent.type,\n          (nativeEvent: any),\n        );\n        setReplayingEvent(nativeEventClone);\n        nativeEvent.target.dispatchEvent(nativeEventClone);\n        resetReplayingEvent();\n      } else {\n        setReplayingEvent(queuedEvent.nativeEvent);\n        dispatchEventForPluginEventSystem(\n          queuedEvent.domEventName,\n          queuedEvent.eventSystemFlags,\n          queuedEvent.nativeEvent,\n          return_targetInst,\n          targetContainer,\n        );\n        resetReplayingEvent();\n      }\n    } else {\n      // We're still blocked. Try again later.\n      const fiber = getInstanceFromNode(nextBlockedOn);\n      if (fiber !== null) {\n        attemptContinuousHydration(fiber);\n      }\n      queuedEvent.blockedOn = nextBlockedOn;\n      return false;\n    }\n    // This target container was successfully dispatched. Try the next.\n    targetContainers.shift();\n  }\n  return true;\n}\n\nfunction attemptReplayContinuousQueuedEventInMap(\n  queuedEvent: QueuedReplayableEvent,\n  key: number,\n  map: Map<number, QueuedReplayableEvent>,\n): void {\n  if (attemptReplayContinuousQueuedEvent(queuedEvent)) {\n    map.delete(key);\n  }\n}\n\nfunction replayUnblockedEvents() {\n  hasScheduledReplayAttempt = false;\n  if (!enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay) {\n    // First replay discrete events.\n    while (queuedDiscreteEvents.length > 0) {\n      const nextDiscreteEvent = queuedDiscreteEvents[0];\n      if (nextDiscreteEvent.blockedOn !== null) {\n        // We're still blocked.\n        // Increase the priority of this boundary to unblock\n        // the next discrete event.\n        const fiber = getInstanceFromNode(nextDiscreteEvent.blockedOn);\n        if (fiber !== null) {\n          attemptDiscreteHydration(fiber);\n        }\n        break;\n      }\n      const targetContainers = nextDiscreteEvent.targetContainers;\n      while (targetContainers.length > 0) {\n        const targetContainer = targetContainers[0];\n        const nextBlockedOn = findInstanceBlockingEvent(\n          nextDiscreteEvent.domEventName,\n          nextDiscreteEvent.eventSystemFlags,\n          targetContainer,\n          nextDiscreteEvent.nativeEvent,\n        );\n        if (nextBlockedOn === null) {\n          // This whole function is in !enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay,\n          // so we don't need the new replay behavior code branch.\n          setReplayingEvent(nextDiscreteEvent.nativeEvent);\n          dispatchEventForPluginEventSystem(\n            nextDiscreteEvent.domEventName,\n            nextDiscreteEvent.eventSystemFlags,\n            nextDiscreteEvent.nativeEvent,\n            return_targetInst,\n            targetContainer,\n          );\n          resetReplayingEvent();\n        } else {\n          // We're still blocked. Try again later.\n          nextDiscreteEvent.blockedOn = nextBlockedOn;\n          break;\n        }\n        // This target container was successfully dispatched. Try the next.\n        targetContainers.shift();\n      }\n      if (nextDiscreteEvent.blockedOn === null) {\n        // We've successfully replayed the first event. Let's try the next one.\n        queuedDiscreteEvents.shift();\n      }\n    }\n  }\n  // Next replay any continuous events.\n  if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {\n    queuedFocus = null;\n  }\n  if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {\n    queuedDrag = null;\n  }\n  if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {\n    queuedMouse = null;\n  }\n  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);\n  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);\n}\n\nfunction scheduleCallbackIfUnblocked(\n  queuedEvent: QueuedReplayableEvent,\n  unblocked: Container | SuspenseInstance,\n) {\n  if (queuedEvent.blockedOn === unblocked) {\n    queuedEvent.blockedOn = null;\n    if (!hasScheduledReplayAttempt) {\n      hasScheduledReplayAttempt = true;\n      // Schedule a callback to attempt replaying as many events as are\n      // now unblocked. This first might not actually be unblocked yet.\n      // We could check it early to avoid scheduling an unnecessary callback.\n      scheduleCallback(NormalPriority, replayUnblockedEvents);\n    }\n  }\n}\n\nexport function retryIfBlockedOn(\n  unblocked: Container | SuspenseInstance,\n): void {\n  // Mark anything that was blocked on this as no longer blocked\n  // and eligible for a replay.\n  if (queuedDiscreteEvents.length > 0) {\n    scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked);\n    // This is a exponential search for each boundary that commits. I think it's\n    // worth it because we expect very few discrete events to queue up and once\n    // we are actually fully unblocked it will be fast to replay them.\n    for (let i = 1; i < queuedDiscreteEvents.length; i++) {\n      const queuedEvent = queuedDiscreteEvents[i];\n      if (queuedEvent.blockedOn === unblocked) {\n        queuedEvent.blockedOn = null;\n      }\n    }\n  }\n\n  if (queuedFocus !== null) {\n    scheduleCallbackIfUnblocked(queuedFocus, unblocked);\n  }\n  if (queuedDrag !== null) {\n    scheduleCallbackIfUnblocked(queuedDrag, unblocked);\n  }\n  if (queuedMouse !== null) {\n    scheduleCallbackIfUnblocked(queuedMouse, unblocked);\n  }\n  const unblock = queuedEvent =>\n    scheduleCallbackIfUnblocked(queuedEvent, unblocked);\n  queuedPointers.forEach(unblock);\n  queuedPointerCaptures.forEach(unblock);\n\n  for (let i = 0; i < queuedExplicitHydrationTargets.length; i++) {\n    const queuedTarget = queuedExplicitHydrationTargets[i];\n    if (queuedTarget.blockedOn === unblocked) {\n      queuedTarget.blockedOn = null;\n    }\n  }\n\n  while (queuedExplicitHydrationTargets.length > 0) {\n    const nextExplicitTarget = queuedExplicitHydrationTargets[0];\n    if (nextExplicitTarget.blockedOn !== null) {\n      // We're still blocked.\n      break;\n    } else {\n      attemptExplicitHydrationTarget(nextExplicitTarget);\n      if (nextExplicitTarget.blockedOn === null) {\n        // We're unblocked.\n        queuedExplicitHydrationTargets.shift();\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {AnyNativeEvent} from '../events/PluginModuleType';\nimport type {FiberRoot} from 'react-reconciler/src/ReactInternalTypes';\nimport type {Container, SuspenseInstance} from '../client/ReactDOMHostConfig';\nimport type {DOMEventName} from '../events/DOMEventNames';\nimport {enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay} from 'shared/ReactFeatureFlags';\nimport {\n  isDiscreteEventThatRequiresHydration,\n  queueDiscreteEvent,\n  hasQueuedDiscreteEvents,\n  clearIfContinuousEvent,\n  queueIfContinuousEvent,\n  attemptSynchronousHydration,\n} from './ReactDOMEventReplaying';\nimport {\n  getNearestMountedFiber,\n  getContainerFromFiber,\n  getSuspenseInstanceFromFiber,\n} from 'react-reconciler/src/ReactFiberTreeReflection';\nimport {HostRoot, SuspenseComponent} from 'react-reconciler/src/ReactWorkTags';\nimport {type EventSystemFlags, IS_CAPTURE_PHASE} from './EventSystemFlags';\n\nimport getEventTarget from './getEventTarget';\nimport {\n  getInstanceFromNode,\n  getClosestInstanceFromNode,\n} from '../client/ReactDOMComponentTree';\n\nimport {dispatchEventForPluginEventSystem} from './DOMPluginEventSystem';\n\nimport {\n  getCurrentPriorityLevel as getCurrentSchedulerPriorityLevel,\n  IdlePriority as IdleSchedulerPriority,\n  ImmediatePriority as ImmediateSchedulerPriority,\n  LowPriority as LowSchedulerPriority,\n  NormalPriority as NormalSchedulerPriority,\n  UserBlockingPriority as UserBlockingSchedulerPriority,\n} from 'react-reconciler/src/Scheduler';\nimport {\n  DiscreteEventPriority,\n  ContinuousEventPriority,\n  DefaultEventPriority,\n  IdleEventPriority,\n  getCurrentUpdatePriority,\n  setCurrentUpdatePriority,\n} from 'react-reconciler/src/ReactEventPriorities';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {isRootDehydrated} from 'react-reconciler/src/ReactFiberShellHydration';\n\nconst {ReactCurrentBatchConfig} = ReactSharedInternals;\n\n// TODO: can we stop exporting these?\nexport let _enabled = true;\n\n// This is exported in FB builds for use by legacy FB layer infra.\n// We'd like to remove this but it's not clear if this is safe.\nexport function setEnabled(enabled: ?boolean) {\n  _enabled = !!enabled;\n}\n\nexport function isEnabled() {\n  return _enabled;\n}\n\nexport function createEventListenerWrapper(\n  targetContainer: EventTarget,\n  domEventName: DOMEventName,\n  eventSystemFlags: EventSystemFlags,\n): Function {\n  return dispatchEvent.bind(\n    null,\n    domEventName,\n    eventSystemFlags,\n    targetContainer,\n  );\n}\n\nexport function createEventListenerWrapperWithPriority(\n  targetContainer: EventTarget,\n  domEventName: DOMEventName,\n  eventSystemFlags: EventSystemFlags,\n): Function {\n  const eventPriority = getEventPriority(domEventName);\n  let listenerWrapper;\n  switch (eventPriority) {\n    case DiscreteEventPriority:\n      listenerWrapper = dispatchDiscreteEvent;\n      break;\n    case ContinuousEventPriority:\n      listenerWrapper = dispatchContinuousEvent;\n      break;\n    case DefaultEventPriority:\n    default:\n      listenerWrapper = dispatchEvent;\n      break;\n  }\n  return listenerWrapper.bind(\n    null,\n    domEventName,\n    eventSystemFlags,\n    targetContainer,\n  );\n}\n\nfunction dispatchDiscreteEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent,\n) {\n  const previousPriority = getCurrentUpdatePriority();\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = null;\n  try {\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n  }\n}\n\nfunction dispatchContinuousEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent,\n) {\n  const previousPriority = getCurrentUpdatePriority();\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = null;\n  try {\n    setCurrentUpdatePriority(ContinuousEventPriority);\n    dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n  }\n}\n\nexport function dispatchEvent(\n  domEventName: DOMEventName,\n  eventSystemFlags: EventSystemFlags,\n  targetContainer: EventTarget,\n  nativeEvent: AnyNativeEvent,\n): void {\n  if (!_enabled) {\n    return;\n  }\n  if (enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay) {\n    dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(\n      domEventName,\n      eventSystemFlags,\n      targetContainer,\n      nativeEvent,\n    );\n  } else {\n    dispatchEventOriginal(\n      domEventName,\n      eventSystemFlags,\n      targetContainer,\n      nativeEvent,\n    );\n  }\n}\n\nfunction dispatchEventOriginal(\n  domEventName: DOMEventName,\n  eventSystemFlags: EventSystemFlags,\n  targetContainer: EventTarget,\n  nativeEvent: AnyNativeEvent,\n) {\n  // TODO: replaying capture phase events is currently broken\n  // because we used to do it during top-level native bubble handlers\n  // but now we use different bubble and capture handlers.\n  // In eager mode, we attach capture listeners early, so we need\n  // to filter them out until we fix the logic to handle them correctly.\n  const allowReplay = (eventSystemFlags & IS_CAPTURE_PHASE) === 0;\n\n  if (\n    allowReplay &&\n    hasQueuedDiscreteEvents() &&\n    isDiscreteEventThatRequiresHydration(domEventName)\n  ) {\n    // If we already have a queue of discrete events, and this is another discrete\n    // event, then we can't dispatch it regardless of its target, since they\n    // need to dispatch in order.\n    queueDiscreteEvent(\n      null, // Flags that we're not actually blocked on anything as far as we know.\n      domEventName,\n      eventSystemFlags,\n      targetContainer,\n      nativeEvent,\n    );\n    return;\n  }\n\n  const blockedOn = findInstanceBlockingEvent(\n    domEventName,\n    eventSystemFlags,\n    targetContainer,\n    nativeEvent,\n  );\n  if (blockedOn === null) {\n    dispatchEventForPluginEventSystem(\n      domEventName,\n      eventSystemFlags,\n      nativeEvent,\n      return_targetInst,\n      targetContainer,\n    );\n    if (allowReplay) {\n      clearIfContinuousEvent(domEventName, nativeEvent);\n    }\n    return;\n  }\n\n  if (allowReplay) {\n    if (isDiscreteEventThatRequiresHydration(domEventName)) {\n      // This this to be replayed later once the target is available.\n      queueDiscreteEvent(\n        blockedOn,\n        domEventName,\n        eventSystemFlags,\n        targetContainer,\n        nativeEvent,\n      );\n      return;\n    }\n    if (\n      queueIfContinuousEvent(\n        blockedOn,\n        domEventName,\n        eventSystemFlags,\n        targetContainer,\n        nativeEvent,\n      )\n    ) {\n      return;\n    }\n    // We need to clear only if we didn't queue because\n    // queueing is accumulative.\n    clearIfContinuousEvent(domEventName, nativeEvent);\n  }\n\n  // This is not replayable so we'll invoke it but without a target,\n  // in case the event system needs to trace it.\n  dispatchEventForPluginEventSystem(\n    domEventName,\n    eventSystemFlags,\n    nativeEvent,\n    null,\n    targetContainer,\n  );\n}\n\nfunction dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(\n  domEventName: DOMEventName,\n  eventSystemFlags: EventSystemFlags,\n  targetContainer: EventTarget,\n  nativeEvent: AnyNativeEvent,\n) {\n  let blockedOn = findInstanceBlockingEvent(\n    domEventName,\n    eventSystemFlags,\n    targetContainer,\n    nativeEvent,\n  );\n  if (blockedOn === null) {\n    dispatchEventForPluginEventSystem(\n      domEventName,\n      eventSystemFlags,\n      nativeEvent,\n      return_targetInst,\n      targetContainer,\n    );\n    clearIfContinuousEvent(domEventName, nativeEvent);\n    return;\n  }\n\n  if (\n    queueIfContinuousEvent(\n      blockedOn,\n      domEventName,\n      eventSystemFlags,\n      targetContainer,\n      nativeEvent,\n    )\n  ) {\n    nativeEvent.stopPropagation();\n    return;\n  }\n  // We need to clear only if we didn't queue because\n  // queueing is accumulative.\n  clearIfContinuousEvent(domEventName, nativeEvent);\n\n  if (\n    eventSystemFlags & IS_CAPTURE_PHASE &&\n    isDiscreteEventThatRequiresHydration(domEventName)\n  ) {\n    while (blockedOn !== null) {\n      const fiber = getInstanceFromNode(blockedOn);\n      if (fiber !== null) {\n        attemptSynchronousHydration(fiber);\n      }\n      const nextBlockedOn = findInstanceBlockingEvent(\n        domEventName,\n        eventSystemFlags,\n        targetContainer,\n        nativeEvent,\n      );\n      if (nextBlockedOn === null) {\n        dispatchEventForPluginEventSystem(\n          domEventName,\n          eventSystemFlags,\n          nativeEvent,\n          return_targetInst,\n          targetContainer,\n        );\n      }\n      if (nextBlockedOn === blockedOn) {\n        break;\n      }\n      blockedOn = nextBlockedOn;\n    }\n    if (blockedOn !== null) {\n      nativeEvent.stopPropagation();\n    }\n    return;\n  }\n\n  // This is not replayable so we'll invoke it but without a target,\n  // in case the event system needs to trace it.\n  dispatchEventForPluginEventSystem(\n    domEventName,\n    eventSystemFlags,\n    nativeEvent,\n    null,\n    targetContainer,\n  );\n}\n\nexport let return_targetInst = null;\n\n// Returns a SuspenseInstance or Container if it's blocked.\n// The return_targetInst field above is conceptually part of the return value.\nexport function findInstanceBlockingEvent(\n  domEventName: DOMEventName,\n  eventSystemFlags: EventSystemFlags,\n  targetContainer: EventTarget,\n  nativeEvent: AnyNativeEvent,\n): null | Container | SuspenseInstance {\n  // TODO: Warn if _enabled is false.\n\n  return_targetInst = null;\n\n  const nativeEventTarget = getEventTarget(nativeEvent);\n  let targetInst = getClosestInstanceFromNode(nativeEventTarget);\n\n  if (targetInst !== null) {\n    const nearestMounted = getNearestMountedFiber(targetInst);\n    if (nearestMounted === null) {\n      // This tree has been unmounted already. Dispatch without a target.\n      targetInst = null;\n    } else {\n      const tag = nearestMounted.tag;\n      if (tag === SuspenseComponent) {\n        const instance = getSuspenseInstanceFromFiber(nearestMounted);\n        if (instance !== null) {\n          // Queue the event to be replayed later. Abort dispatching since we\n          // don't want this event dispatched twice through the event system.\n          // TODO: If this is the first discrete event in the queue. Schedule an increased\n          // priority for this boundary.\n          return instance;\n        }\n        // This shouldn't happen, something went wrong but to avoid blocking\n        // the whole system, dispatch the event without a target.\n        // TODO: Warn.\n        targetInst = null;\n      } else if (tag === HostRoot) {\n        const root: FiberRoot = nearestMounted.stateNode;\n        if (isRootDehydrated(root)) {\n          // If this happens during a replay something went wrong and it might block\n          // the whole system.\n          return getContainerFromFiber(nearestMounted);\n        }\n        targetInst = null;\n      } else if (nearestMounted !== targetInst) {\n        // If we get an event (ex: img onload) before committing that\n        // component's mount, ignore it for now (that is, treat it as if it was an\n        // event on a non-React tree). We might also consider queueing events and\n        // dispatching them after the mount.\n        targetInst = null;\n      }\n    }\n  }\n  return_targetInst = targetInst;\n  // We're not blocked on anything.\n  return null;\n}\n\nexport function getEventPriority(domEventName: DOMEventName): * {\n  switch (domEventName) {\n    // Used by SimpleEventPlugin:\n    case 'cancel':\n    case 'click':\n    case 'close':\n    case 'contextmenu':\n    case 'copy':\n    case 'cut':\n    case 'auxclick':\n    case 'dblclick':\n    case 'dragend':\n    case 'dragstart':\n    case 'drop':\n    case 'focusin':\n    case 'focusout':\n    case 'input':\n    case 'invalid':\n    case 'keydown':\n    case 'keypress':\n    case 'keyup':\n    case 'mousedown':\n    case 'mouseup':\n    case 'paste':\n    case 'pause':\n    case 'play':\n    case 'pointercancel':\n    case 'pointerdown':\n    case 'pointerup':\n    case 'ratechange':\n    case 'reset':\n    case 'resize':\n    case 'seeked':\n    case 'submit':\n    case 'touchcancel':\n    case 'touchend':\n    case 'touchstart':\n    case 'volumechange':\n    // Used by polyfills:\n    // eslint-disable-next-line no-fallthrough\n    case 'change':\n    case 'selectionchange':\n    case 'textInput':\n    case 'compositionstart':\n    case 'compositionend':\n    case 'compositionupdate':\n    // Only enableCreateEventHandleAPI:\n    // eslint-disable-next-line no-fallthrough\n    case 'beforeblur':\n    case 'afterblur':\n    // Not used by React but could be by user code:\n    // eslint-disable-next-line no-fallthrough\n    case 'beforeinput':\n    case 'blur':\n    case 'fullscreenchange':\n    case 'focus':\n    case 'hashchange':\n    case 'popstate':\n    case 'select':\n    case 'selectstart':\n      return DiscreteEventPriority;\n    case 'drag':\n    case 'dragenter':\n    case 'dragexit':\n    case 'dragleave':\n    case 'dragover':\n    case 'mousemove':\n    case 'mouseout':\n    case 'mouseover':\n    case 'pointermove':\n    case 'pointerout':\n    case 'pointerover':\n    case 'scroll':\n    case 'toggle':\n    case 'touchmove':\n    case 'wheel':\n    // Not used by React but could be by user code:\n    // eslint-disable-next-line no-fallthrough\n    case 'mouseenter':\n    case 'mouseleave':\n    case 'pointerenter':\n    case 'pointerleave':\n      return ContinuousEventPriority;\n    case 'message': {\n      // We might be in the Scheduler callback.\n      // Eventually this mechanism will be replaced by a check\n      // of the current priority on the native scheduler.\n      const schedulerPriority = getCurrentSchedulerPriorityLevel();\n      switch (schedulerPriority) {\n        case ImmediateSchedulerPriority:\n          return DiscreteEventPriority;\n        case UserBlockingSchedulerPriority:\n          return ContinuousEventPriority;\n        case NormalSchedulerPriority:\n        case LowSchedulerPriority:\n          // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.\n          return DefaultEventPriority;\n        case IdleSchedulerPriority:\n          return IdleEventPriority;\n        default:\n          return DefaultEventPriority;\n      }\n    }\n    default:\n      return DefaultEventPriority;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function addEventBubbleListener(\n  target: EventTarget,\n  eventType: string,\n  listener: Function,\n): Function {\n  target.addEventListener(eventType, listener, false);\n  return listener;\n}\n\nexport function addEventCaptureListener(\n  target: EventTarget,\n  eventType: string,\n  listener: Function,\n): Function {\n  target.addEventListener(eventType, listener, true);\n  return listener;\n}\n\nexport function addEventCaptureListenerWithPassiveFlag(\n  target: EventTarget,\n  eventType: string,\n  listener: Function,\n  passive: boolean,\n): Function {\n  target.addEventListener(eventType, listener, {\n    capture: true,\n    passive,\n  });\n  return listener;\n}\n\nexport function addEventBubbleListenerWithPassiveFlag(\n  target: EventTarget,\n  eventType: string,\n  listener: Function,\n  passive: boolean,\n): Function {\n  target.addEventListener(eventType, listener, {\n    passive,\n  });\n  return listener;\n}\n\nexport function removeEventListener(\n  target: EventTarget,\n  eventType: string,\n  listener: Function,\n  capture: boolean,\n): void {\n  target.removeEventListener(eventType, listener, capture);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * These variables store information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n *\n */\n\nlet root = null;\nlet startText = null;\nlet fallbackText = null;\n\nexport function initialize(nativeEventTarget) {\n  root = nativeEventTarget;\n  startText = getText();\n  return true;\n}\n\nexport function reset() {\n  root = null;\n  startText = null;\n  fallbackText = null;\n}\n\nexport function getData() {\n  if (fallbackText) {\n    return fallbackText;\n  }\n\n  let start;\n  const startValue = startText;\n  const startLength = startValue.length;\n  let end;\n  const endValue = getText();\n  const endLength = endValue.length;\n\n  for (start = 0; start < startLength; start++) {\n    if (startValue[start] !== endValue[start]) {\n      break;\n    }\n  }\n\n  const minEnd = startLength - start;\n  for (end = 1; end <= minEnd; end++) {\n    if (startValue[startLength - end] !== endValue[endLength - end]) {\n      break;\n    }\n  }\n\n  const sliceTail = end > 1 ? 1 - end : undefined;\n  fallbackText = endValue.slice(start, sliceTail);\n  return fallbackText;\n}\n\nexport function getText() {\n  if ('value' in root) {\n    return root.value;\n  }\n  return root.textContent;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {number} Normalized `charCode` property.\n */\nfunction getEventCharCode(nativeEvent: KeyboardEvent): number {\n  let charCode;\n  const keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)\n  // report Enter as charCode 10 when ctrl is pressed.\n  if (charCode === 10) {\n    charCode = 13;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nexport default getEventCharCode;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint valid-typeof: 0 */\n\nimport assign from 'shared/assign';\nimport getEventCharCode from './getEventCharCode';\n\ntype EventInterfaceType = {\n  [propName: string]: 0 | ((event: {[propName: string]: mixed}) => mixed),\n};\n\nfunction functionThatReturnsTrue() {\n  return true;\n}\n\nfunction functionThatReturnsFalse() {\n  return false;\n}\n\n// This is intentionally a factory so that we have different returned constructors.\n// If we had a single constructor, it would be megamorphic and engines would deopt.\nfunction createSyntheticEvent(Interface: EventInterfaceType) {\n  /**\n   * Synthetic events are dispatched by event plugins, typically in response to a\n   * top-level event delegation handler.\n   *\n   * These systems should generally use pooling to reduce the frequency of garbage\n   * collection. The system should check `isPersistent` to determine whether the\n   * event should be released into the pool after being dispatched. Users that\n   * need a persisted event should invoke `persist`.\n   *\n   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n   * normalizing browser quirks. Subclasses do not necessarily have to implement a\n   * DOM interface; custom application-specific events can also subclass this.\n   */\n  function SyntheticBaseEvent(\n    reactName: string | null,\n    reactEventType: string,\n    targetInst: Fiber,\n    nativeEvent: {[propName: string]: mixed},\n    nativeEventTarget: null | EventTarget,\n  ) {\n    this._reactName = reactName;\n    this._targetInst = targetInst;\n    this.type = reactEventType;\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEventTarget;\n    this.currentTarget = null;\n\n    for (const propName in Interface) {\n      if (!Interface.hasOwnProperty(propName)) {\n        continue;\n      }\n      const normalize = Interface[propName];\n      if (normalize) {\n        this[propName] = normalize(nativeEvent);\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n\n    const defaultPrevented =\n      nativeEvent.defaultPrevented != null\n        ? nativeEvent.defaultPrevented\n        : nativeEvent.returnValue === false;\n    if (defaultPrevented) {\n      this.isDefaultPrevented = functionThatReturnsTrue;\n    } else {\n      this.isDefaultPrevented = functionThatReturnsFalse;\n    }\n    this.isPropagationStopped = functionThatReturnsFalse;\n    return this;\n  }\n\n  assign(SyntheticBaseEvent.prototype, {\n    preventDefault: function() {\n      this.defaultPrevented = true;\n      const event = this.nativeEvent;\n      if (!event) {\n        return;\n      }\n\n      if (event.preventDefault) {\n        event.preventDefault();\n        // $FlowFixMe - flow is not aware of `unknown` in IE\n      } else if (typeof event.returnValue !== 'unknown') {\n        event.returnValue = false;\n      }\n      this.isDefaultPrevented = functionThatReturnsTrue;\n    },\n\n    stopPropagation: function() {\n      const event = this.nativeEvent;\n      if (!event) {\n        return;\n      }\n\n      if (event.stopPropagation) {\n        event.stopPropagation();\n        // $FlowFixMe - flow is not aware of `unknown` in IE\n      } else if (typeof event.cancelBubble !== 'unknown') {\n        // The ChangeEventPlugin registers a \"propertychange\" event for\n        // IE. This event does not support bubbling or cancelling, and\n        // any references to cancelBubble throw \"Member not found\".  A\n        // typeof check of \"unknown\" circumvents this issue (and is also\n        // IE specific).\n        event.cancelBubble = true;\n      }\n\n      this.isPropagationStopped = functionThatReturnsTrue;\n    },\n\n    /**\n     * We release all dispatched `SyntheticEvent`s after each event loop, adding\n     * them back into the pool. This allows a way to hold onto a reference that\n     * won't be added back into the pool.\n     */\n    persist: function() {\n      // Modern event system doesn't use pooling.\n    },\n\n    /**\n     * Checks if this event should be released back into the pool.\n     *\n     * @return {boolean} True if this should not be released, false otherwise.\n     */\n    isPersistent: functionThatReturnsTrue,\n  });\n  return SyntheticBaseEvent;\n}\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst EventInterface = {\n  eventPhase: 0,\n  bubbles: 0,\n  cancelable: 0,\n  timeStamp: function(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: 0,\n  isTrusted: 0,\n};\nexport const SyntheticEvent = createSyntheticEvent(EventInterface);\n\nconst UIEventInterface: EventInterfaceType = {\n  ...EventInterface,\n  view: 0,\n  detail: 0,\n};\nexport const SyntheticUIEvent = createSyntheticEvent(UIEventInterface);\n\nlet lastMovementX;\nlet lastMovementY;\nlet lastMouseEvent;\n\nfunction updateMouseMovementPolyfillState(event) {\n  if (event !== lastMouseEvent) {\n    if (lastMouseEvent && event.type === 'mousemove') {\n      lastMovementX = event.screenX - lastMouseEvent.screenX;\n      lastMovementY = event.screenY - lastMouseEvent.screenY;\n    } else {\n      lastMovementX = 0;\n      lastMovementY = 0;\n    }\n    lastMouseEvent = event;\n  }\n}\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst MouseEventInterface: EventInterfaceType = {\n  ...UIEventInterface,\n  screenX: 0,\n  screenY: 0,\n  clientX: 0,\n  clientY: 0,\n  pageX: 0,\n  pageY: 0,\n  ctrlKey: 0,\n  shiftKey: 0,\n  altKey: 0,\n  metaKey: 0,\n  getModifierState: getEventModifierState,\n  button: 0,\n  buttons: 0,\n  relatedTarget: function(event) {\n    if (event.relatedTarget === undefined)\n      return event.fromElement === event.srcElement\n        ? event.toElement\n        : event.fromElement;\n\n    return event.relatedTarget;\n  },\n  movementX: function(event) {\n    if ('movementX' in event) {\n      return event.movementX;\n    }\n    updateMouseMovementPolyfillState(event);\n    return lastMovementX;\n  },\n  movementY: function(event) {\n    if ('movementY' in event) {\n      return event.movementY;\n    }\n    // Don't need to call updateMouseMovementPolyfillState() here\n    // because it's guaranteed to have already run when movementX\n    // was copied.\n    return lastMovementY;\n  },\n};\nexport const SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst DragEventInterface: EventInterfaceType = {\n  ...MouseEventInterface,\n  dataTransfer: 0,\n};\nexport const SyntheticDragEvent = createSyntheticEvent(DragEventInterface);\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst FocusEventInterface: EventInterfaceType = {\n  ...UIEventInterface,\n  relatedTarget: 0,\n};\nexport const SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n */\nconst AnimationEventInterface: EventInterfaceType = {\n  ...EventInterface,\n  animationName: 0,\n  elapsedTime: 0,\n  pseudoElement: 0,\n};\nexport const SyntheticAnimationEvent = createSyntheticEvent(\n  AnimationEventInterface,\n);\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nconst ClipboardEventInterface: EventInterfaceType = {\n  ...EventInterface,\n  clipboardData: function(event) {\n    return 'clipboardData' in event\n      ? event.clipboardData\n      : window.clipboardData;\n  },\n};\nexport const SyntheticClipboardEvent = createSyntheticEvent(\n  ClipboardEventInterface,\n);\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nconst CompositionEventInterface: EventInterfaceType = {\n  ...EventInterface,\n  data: 0,\n};\nexport const SyntheticCompositionEvent = createSyntheticEvent(\n  CompositionEventInterface,\n);\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\n// Happens to share the same list for now.\nexport const SyntheticInputEvent = SyntheticCompositionEvent;\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nconst normalizeKey = {\n  Esc: 'Escape',\n  Spacebar: ' ',\n  Left: 'ArrowLeft',\n  Up: 'ArrowUp',\n  Right: 'ArrowRight',\n  Down: 'ArrowDown',\n  Del: 'Delete',\n  Win: 'OS',\n  Menu: 'ContextMenu',\n  Apps: 'ContextMenu',\n  Scroll: 'ScrollLock',\n  MozPrintableKey: 'Unidentified',\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nconst translateToKey = {\n  '8': 'Backspace',\n  '9': 'Tab',\n  '12': 'Clear',\n  '13': 'Enter',\n  '16': 'Shift',\n  '17': 'Control',\n  '18': 'Alt',\n  '19': 'Pause',\n  '20': 'CapsLock',\n  '27': 'Escape',\n  '32': ' ',\n  '33': 'PageUp',\n  '34': 'PageDown',\n  '35': 'End',\n  '36': 'Home',\n  '37': 'ArrowLeft',\n  '38': 'ArrowUp',\n  '39': 'ArrowRight',\n  '40': 'ArrowDown',\n  '45': 'Insert',\n  '46': 'Delete',\n  '112': 'F1',\n  '113': 'F2',\n  '114': 'F3',\n  '115': 'F4',\n  '116': 'F5',\n  '117': 'F6',\n  '118': 'F7',\n  '119': 'F8',\n  '120': 'F9',\n  '121': 'F10',\n  '122': 'F11',\n  '123': 'F12',\n  '144': 'NumLock',\n  '145': 'ScrollLock',\n  '224': 'Meta',\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    const key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    const charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\nconst modifierKeyToProp = {\n  Alt: 'altKey',\n  Control: 'ctrlKey',\n  Meta: 'metaKey',\n  Shift: 'shiftKey',\n};\n\n// Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support\n// getModifierState. If getModifierState is not supported, we map it to a set of\n// modifier keys exposed by the event. In this case, Lock-keys are not supported.\nfunction modifierStateGetter(keyArg) {\n  const syntheticEvent = this;\n  const nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  const keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst KeyboardEventInterface = {\n  ...UIEventInterface,\n  key: getEventKey,\n  code: 0,\n  location: 0,\n  ctrlKey: 0,\n  shiftKey: 0,\n  altKey: 0,\n  metaKey: 0,\n  repeat: 0,\n  locale: 0,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function(event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function(event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function(event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n};\nexport const SyntheticKeyboardEvent = createSyntheticEvent(\n  KeyboardEventInterface,\n);\n\n/**\n * @interface PointerEvent\n * @see http://www.w3.org/TR/pointerevents/\n */\nconst PointerEventInterface = {\n  ...MouseEventInterface,\n  pointerId: 0,\n  width: 0,\n  height: 0,\n  pressure: 0,\n  tangentialPressure: 0,\n  tiltX: 0,\n  tiltY: 0,\n  twist: 0,\n  pointerType: 0,\n  isPrimary: 0,\n};\nexport const SyntheticPointerEvent = createSyntheticEvent(\n  PointerEventInterface,\n);\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nconst TouchEventInterface = {\n  ...UIEventInterface,\n  touches: 0,\n  targetTouches: 0,\n  changedTouches: 0,\n  altKey: 0,\n  metaKey: 0,\n  ctrlKey: 0,\n  shiftKey: 0,\n  getModifierState: getEventModifierState,\n};\nexport const SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n */\nconst TransitionEventInterface = {\n  ...EventInterface,\n  propertyName: 0,\n  elapsedTime: 0,\n  pseudoElement: 0,\n};\nexport const SyntheticTransitionEvent = createSyntheticEvent(\n  TransitionEventInterface,\n);\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst WheelEventInterface = {\n  ...MouseEventInterface,\n  deltaX(event) {\n    return 'deltaX' in event\n      ? event.deltaX\n      : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n      'wheelDeltaX' in event\n      ? -event.wheelDeltaX\n      : 0;\n  },\n  deltaY(event) {\n    return 'deltaY' in event\n      ? event.deltaY\n      : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n      'wheelDeltaY' in event\n      ? -event.wheelDeltaY\n      : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n      'wheelDelta' in event\n      ? -event.wheelDelta\n      : 0;\n  },\n  deltaZ: 0,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: 0,\n};\nexport const SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {DOMEventName} from '../../events/DOMEventNames';\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\nimport type {AnyNativeEvent} from '../../events/PluginModuleType';\nimport type {DispatchQueue} from '../DOMPluginEventSystem';\nimport type {EventSystemFlags} from '../EventSystemFlags';\n\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\n\nimport {registerTwoPhaseEvent} from '../EventRegistry';\nimport {\n  getData as FallbackCompositionStateGetData,\n  initialize as FallbackCompositionStateInitialize,\n  reset as FallbackCompositionStateReset,\n} from '../FallbackCompositionState';\nimport {\n  SyntheticCompositionEvent,\n  SyntheticInputEvent,\n} from '../SyntheticEvent';\nimport {accumulateTwoPhaseListeners} from '../DOMPluginEventSystem';\n\nconst END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nconst START_KEYCODE = 229;\n\nconst canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;\n\nlet documentMode = null;\nif (canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nconst canUseTextInputEvent =\n  canUseDOM && 'TextEvent' in window && !documentMode;\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nconst useFallbackCompositionData =\n  canUseDOM &&\n  (!canUseCompositionEvent ||\n    (documentMode && documentMode > 8 && documentMode <= 11));\n\nconst SPACEBAR_CODE = 32;\nconst SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\nfunction registerEvents() {\n  registerTwoPhaseEvent('onBeforeInput', [\n    'compositionend',\n    'keypress',\n    'textInput',\n    'paste',\n  ]);\n  registerTwoPhaseEvent('onCompositionEnd', [\n    'compositionend',\n    'focusout',\n    'keydown',\n    'keypress',\n    'keyup',\n    'mousedown',\n  ]);\n  registerTwoPhaseEvent('onCompositionStart', [\n    'compositionstart',\n    'focusout',\n    'keydown',\n    'keypress',\n    'keyup',\n    'mousedown',\n  ]);\n  registerTwoPhaseEvent('onCompositionUpdate', [\n    'compositionupdate',\n    'focusout',\n    'keydown',\n    'keypress',\n    'keyup',\n    'mousedown',\n  ]);\n}\n\n// Track whether we've ever handled a keypress on the space key.\nlet hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent: any) {\n  return (\n    (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n    // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n    !(nativeEvent.ctrlKey && nativeEvent.altKey)\n  );\n}\n\n/**\n * Translate native top level events into event types.\n */\nfunction getCompositionEventType(domEventName: DOMEventName) {\n  switch (domEventName) {\n    case 'compositionstart':\n      return 'onCompositionStart';\n    case 'compositionend':\n      return 'onCompositionEnd';\n    case 'compositionupdate':\n      return 'onCompositionUpdate';\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n */\nfunction isFallbackCompositionStart(\n  domEventName: DOMEventName,\n  nativeEvent: any,\n): boolean {\n  return domEventName === 'keydown' && nativeEvent.keyCode === START_KEYCODE;\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n */\nfunction isFallbackCompositionEnd(\n  domEventName: DOMEventName,\n  nativeEvent: any,\n): boolean {\n  switch (domEventName) {\n    case 'keyup':\n      // Command keys insert or clear IME input.\n      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n    case 'keydown':\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return nativeEvent.keyCode !== START_KEYCODE;\n    case 'keypress':\n    case 'mousedown':\n    case 'focusout':\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent: any) {\n  const detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n/**\n * Check if a composition event was triggered by Korean IME.\n * Our fallback mode does not work well with IE's Korean IME,\n * so just use native composition events when Korean IME is used.\n * Although CompositionEvent.locale property is deprecated,\n * it is available in IE, where our fallback mode is enabled.\n *\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isUsingKoreanIME(nativeEvent: any) {\n  return nativeEvent.locale === 'ko';\n}\n\n// Track the current IME composition status, if any.\nlet isComposing = false;\n\n/**\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(\n  dispatchQueue,\n  domEventName,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget,\n) {\n  let eventType;\n  let fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(domEventName);\n  } else if (!isComposing) {\n    if (isFallbackCompositionStart(domEventName, nativeEvent)) {\n      eventType = 'onCompositionStart';\n    }\n  } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) {\n    eventType = 'onCompositionEnd';\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!isComposing && eventType === 'onCompositionStart') {\n      isComposing = FallbackCompositionStateInitialize(nativeEventTarget);\n    } else if (eventType === 'onCompositionEnd') {\n      if (isComposing) {\n        fallbackData = FallbackCompositionStateGetData();\n      }\n    }\n  }\n\n  const listeners = accumulateTwoPhaseListeners(targetInst, eventType);\n  if (listeners.length > 0) {\n    const event = new SyntheticCompositionEvent(\n      eventType,\n      domEventName,\n      null,\n      nativeEvent,\n      nativeEventTarget,\n    );\n    dispatchQueue.push({event, listeners});\n    if (fallbackData) {\n      // Inject data generated from fallback path into the synthetic event.\n      // This matches the property of native CompositionEventInterface.\n      event.data = fallbackData;\n    } else {\n      const customData = getDataFromCustomEvent(nativeEvent);\n      if (customData !== null) {\n        event.data = customData;\n      }\n    }\n  }\n}\n\nfunction getNativeBeforeInputChars(\n  domEventName: DOMEventName,\n  nativeEvent: any,\n): ?string {\n  switch (domEventName) {\n    case 'compositionend':\n      return getDataFromCustomEvent(nativeEvent);\n    case 'keypress':\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      const which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case 'textInput':\n      // Record the characters to be added to the DOM.\n      const chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to ignore it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n */\nfunction getFallbackBeforeInputChars(\n  domEventName: DOMEventName,\n  nativeEvent: any,\n): ?string {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  // If composition event is available, we extract a string only at\n  // compositionevent, otherwise extract it at fallback events.\n  if (isComposing) {\n    if (\n      domEventName === 'compositionend' ||\n      (!canUseCompositionEvent &&\n        isFallbackCompositionEnd(domEventName, nativeEvent))\n    ) {\n      const chars = FallbackCompositionStateGetData();\n      FallbackCompositionStateReset();\n      isComposing = false;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (domEventName) {\n    case 'paste':\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case 'keypress':\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (!isKeypressCommand(nativeEvent)) {\n        // IE fires the `keypress` event when a user types an emoji via\n        // Touch keyboard of Windows.  In such a case, the `char` property\n        // holds an emoji character like `\\uD83D\\uDE0A`.  Because its length\n        // is 2, the property `which` does not represent an emoji correctly.\n        // In such a case, we directly return the `char` property instead of\n        // using `which`.\n        if (nativeEvent.char && nativeEvent.char.length > 1) {\n          return nativeEvent.char;\n        } else if (nativeEvent.which) {\n          return String.fromCharCode(nativeEvent.which);\n        }\n      }\n      return null;\n    case 'compositionend':\n      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)\n        ? null\n        : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(\n  dispatchQueue,\n  domEventName,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget,\n) {\n  let chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(domEventName, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(domEventName, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  const listeners = accumulateTwoPhaseListeners(targetInst, 'onBeforeInput');\n  if (listeners.length > 0) {\n    const event = new SyntheticInputEvent(\n      'onBeforeInput',\n      'beforeinput',\n      null,\n      nativeEvent,\n      nativeEventTarget,\n    );\n    dispatchQueue.push({event, listeners});\n    event.data = chars;\n  }\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nfunction extractEvents(\n  dispatchQueue: DispatchQueue,\n  domEventName: DOMEventName,\n  targetInst: null | Fiber,\n  nativeEvent: AnyNativeEvent,\n  nativeEventTarget: null | EventTarget,\n  eventSystemFlags: EventSystemFlags,\n  targetContainer: EventTarget,\n): void {\n  extractCompositionEvent(\n    dispatchQueue,\n    domEventName,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n  );\n  extractBeforeInputEvent(\n    dispatchQueue,\n    domEventName,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n  );\n}\n\nexport {registerEvents, extractEvents};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\nconst supportedInputTypes: {[key: string]: true | void, ...} = {\n  color: true,\n  date: true,\n  datetime: true,\n  'datetime-local': true,\n  email: true,\n  month: true,\n  number: true,\n  password: true,\n  range: true,\n  search: true,\n  tel: true,\n  text: true,\n  time: true,\n  url: true,\n  week: true,\n};\n\nfunction isTextInputElement(elem: ?HTMLElement): boolean {\n  const nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\n  if (nodeName === 'input') {\n    return !!supportedInputTypes[((elem: any): HTMLInputElement).type];\n  }\n\n  if (nodeName === 'textarea') {\n    return true;\n  }\n\n  return false;\n}\n\nexport default isTextInputElement;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix: string): boolean {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  const eventName = 'on' + eventNameSuffix;\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof (element: any)[eventName] === 'function';\n  }\n\n  return isSupported;\n}\n\nexport default isEventSupported;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nimport type {AnyNativeEvent} from '../PluginModuleType';\nimport type {DOMEventName} from '../DOMEventNames';\nimport type {DispatchQueue} from '../DOMPluginEventSystem';\nimport type {EventSystemFlags} from '../EventSystemFlags';\n\nimport {registerTwoPhaseEvent} from '../EventRegistry';\nimport {SyntheticEvent} from '../SyntheticEvent';\nimport isTextInputElement from '../isTextInputElement';\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\n\nimport getEventTarget from '../getEventTarget';\nimport isEventSupported from '../isEventSupported';\nimport {getNodeFromInstance} from '../../client/ReactDOMComponentTree';\nimport {updateValueIfChanged} from '../../client/inputValueTracking';\nimport {setDefaultValue} from '../../client/ReactDOMInput';\nimport {enqueueStateRestore} from '../ReactDOMControlledComponent';\n\nimport {\n  disableInputAttributeSyncing,\n  enableCustomElementPropertySupport,\n} from 'shared/ReactFeatureFlags';\nimport {batchedUpdates} from '../ReactDOMUpdateBatching';\nimport {\n  processDispatchQueue,\n  accumulateTwoPhaseListeners,\n} from '../DOMPluginEventSystem';\nimport isCustomComponent from '../../shared/isCustomComponent';\n\nfunction registerEvents() {\n  registerTwoPhaseEvent('onChange', [\n    'change',\n    'click',\n    'focusin',\n    'focusout',\n    'input',\n    'keydown',\n    'keyup',\n    'selectionchange',\n  ]);\n}\n\nfunction createAndAccumulateChangeEvent(\n  dispatchQueue,\n  inst,\n  nativeEvent,\n  target,\n) {\n  // Flag this event loop as needing state restore.\n  enqueueStateRestore(((target: any): Node));\n  const listeners = accumulateTwoPhaseListeners(inst, 'onChange');\n  if (listeners.length > 0) {\n    const event = new SyntheticEvent(\n      'onChange',\n      'change',\n      null,\n      nativeEvent,\n      target,\n    );\n    dispatchQueue.push({event, listeners});\n  }\n}\n/**\n * For IE shims\n */\nlet activeElement = null;\nlet activeElementInst = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  const nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return (\n    nodeName === 'select' ||\n    (nodeName === 'input' && (elem: any).type === 'file')\n  );\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  const dispatchQueue = [];\n  createAndAccumulateChangeEvent(\n    dispatchQueue,\n    activeElementInst,\n    nativeEvent,\n    getEventTarget(nativeEvent),\n  );\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  batchedUpdates(runEventInBatch, dispatchQueue);\n}\n\nfunction runEventInBatch(dispatchQueue) {\n  processDispatchQueue(dispatchQueue, 0);\n}\n\nfunction getInstIfValueChanged(targetInst: Object) {\n  const targetNode = getNodeFromInstance(targetInst);\n  if (updateValueIfChanged(((targetNode: any): HTMLInputElement))) {\n    return targetInst;\n  }\n}\n\nfunction getTargetInstForChangeEvent(domEventName: DOMEventName, targetInst) {\n  if (domEventName === 'change') {\n    return targetInst;\n  }\n}\n\n/**\n * SECTION: handle `input` event\n */\nlet isInputEventSupported = false;\nif (canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events.\n  isInputEventSupported =\n    isEventSupported('input') &&\n    (!document.documentMode || document.documentMode > 9);\n}\n\n/**\n * (For IE <=9) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  (activeElement: any).attachEvent('onpropertychange', handlePropertyChange);\n}\n\n/**\n * (For IE <=9) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n  (activeElement: any).detachEvent('onpropertychange', handlePropertyChange);\n  activeElement = null;\n  activeElementInst = null;\n}\n\n/**\n * (For IE <=9) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  if (getInstIfValueChanged(activeElementInst)) {\n    manualDispatchChangeEvent(nativeEvent);\n  }\n}\n\nfunction handleEventsForInputEventPolyfill(\n  domEventName: DOMEventName,\n  target,\n  targetInst,\n) {\n  if (domEventName === 'focusin') {\n    // In IE9, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(target, targetInst);\n  } else if (domEventName === 'focusout') {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetInstForInputEventPolyfill(\n  domEventName: DOMEventName,\n  targetInst,\n) {\n  if (\n    domEventName === 'selectionchange' ||\n    domEventName === 'keyup' ||\n    domEventName === 'keydown'\n  ) {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    return getInstIfValueChanged(activeElementInst);\n  }\n}\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  const nodeName = elem.nodeName;\n  return (\n    nodeName &&\n    nodeName.toLowerCase() === 'input' &&\n    (elem.type === 'checkbox' || elem.type === 'radio')\n  );\n}\n\nfunction getTargetInstForClickEvent(domEventName: DOMEventName, targetInst) {\n  if (domEventName === 'click') {\n    return getInstIfValueChanged(targetInst);\n  }\n}\n\nfunction getTargetInstForInputOrChangeEvent(\n  domEventName: DOMEventName,\n  targetInst,\n) {\n  if (domEventName === 'input' || domEventName === 'change') {\n    return getInstIfValueChanged(targetInst);\n  }\n}\n\nfunction handleControlledInputBlur(node: HTMLInputElement) {\n  const state = (node: any)._wrapperState;\n\n  if (!state || !state.controlled || node.type !== 'number') {\n    return;\n  }\n\n  if (!disableInputAttributeSyncing) {\n    // If controlled, assign the value attribute to the current value on blur\n    setDefaultValue((node: any), 'number', (node: any).value);\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nfunction extractEvents(\n  dispatchQueue: DispatchQueue,\n  domEventName: DOMEventName,\n  targetInst: null | Fiber,\n  nativeEvent: AnyNativeEvent,\n  nativeEventTarget: null | EventTarget,\n  eventSystemFlags: EventSystemFlags,\n  targetContainer: null | EventTarget,\n) {\n  const targetNode = targetInst ? getNodeFromInstance(targetInst) : window;\n\n  let getTargetInstFunc, handleEventFunc;\n  if (shouldUseChangeEvent(targetNode)) {\n    getTargetInstFunc = getTargetInstForChangeEvent;\n  } else if (isTextInputElement(((targetNode: any): HTMLElement))) {\n    if (isInputEventSupported) {\n      getTargetInstFunc = getTargetInstForInputOrChangeEvent;\n    } else {\n      getTargetInstFunc = getTargetInstForInputEventPolyfill;\n      handleEventFunc = handleEventsForInputEventPolyfill;\n    }\n  } else if (shouldUseClickEvent(targetNode)) {\n    getTargetInstFunc = getTargetInstForClickEvent;\n  } else if (\n    enableCustomElementPropertySupport &&\n    targetInst &&\n    isCustomComponent(targetInst.elementType, targetInst.memoizedProps)\n  ) {\n    getTargetInstFunc = getTargetInstForChangeEvent;\n  }\n\n  if (getTargetInstFunc) {\n    const inst = getTargetInstFunc(domEventName, targetInst);\n    if (inst) {\n      createAndAccumulateChangeEvent(\n        dispatchQueue,\n        inst,\n        nativeEvent,\n        nativeEventTarget,\n      );\n      return;\n    }\n  }\n\n  if (handleEventFunc) {\n    handleEventFunc(domEventName, targetNode, targetInst);\n  }\n\n  // When blurring, set the value attribute for number inputs\n  if (domEventName === 'focusout') {\n    handleControlledInputBlur(((targetNode: any): HTMLInputElement));\n  }\n}\n\nexport {registerEvents, extractEvents};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {AnyNativeEvent} from '../PluginModuleType';\nimport type {DOMEventName} from '../DOMEventNames';\nimport type {DispatchQueue} from '../DOMPluginEventSystem';\nimport type {EventSystemFlags} from '../EventSystemFlags';\n\nimport {registerDirectEvent} from '../EventRegistry';\nimport {isReplayingEvent} from '../CurrentReplayingEvent';\nimport {SyntheticMouseEvent, SyntheticPointerEvent} from '../SyntheticEvent';\nimport {\n  getClosestInstanceFromNode,\n  getNodeFromInstance,\n  isContainerMarkedAsRoot,\n} from '../../client/ReactDOMComponentTree';\nimport {accumulateEnterLeaveTwoPhaseListeners} from '../DOMPluginEventSystem';\nimport type {KnownReactSyntheticEvent} from '../ReactSyntheticEventType';\n\nimport {HostComponent, HostText} from 'react-reconciler/src/ReactWorkTags';\nimport {getNearestMountedFiber} from 'react-reconciler/src/ReactFiberTreeReflection';\n\nfunction registerEvents() {\n  registerDirectEvent('onMouseEnter', ['mouseout', 'mouseover']);\n  registerDirectEvent('onMouseLeave', ['mouseout', 'mouseover']);\n  registerDirectEvent('onPointerEnter', ['pointerout', 'pointerover']);\n  registerDirectEvent('onPointerLeave', ['pointerout', 'pointerover']);\n}\n\n/**\n * For almost every interaction we care about, there will be both a top-level\n * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n * we do not extract duplicate events. However, moving the mouse into the\n * browser from outside will not fire a `mouseout` event. In this case, we use\n * the `mouseover` top-level event.\n */\nfunction extractEvents(\n  dispatchQueue: DispatchQueue,\n  domEventName: DOMEventName,\n  targetInst: null | Fiber,\n  nativeEvent: AnyNativeEvent,\n  nativeEventTarget: null | EventTarget,\n  eventSystemFlags: EventSystemFlags,\n  targetContainer: EventTarget,\n) {\n  const isOverEvent =\n    domEventName === 'mouseover' || domEventName === 'pointerover';\n  const isOutEvent =\n    domEventName === 'mouseout' || domEventName === 'pointerout';\n\n  if (isOverEvent && !isReplayingEvent(nativeEvent)) {\n    // If this is an over event with a target, we might have already dispatched\n    // the event in the out event of the other target. If this is replayed,\n    // then it's because we couldn't dispatch against this target previously\n    // so we have to do it now instead.\n    const related =\n      (nativeEvent: any).relatedTarget || (nativeEvent: any).fromElement;\n    if (related) {\n      // If the related node is managed by React, we can assume that we have\n      // already dispatched the corresponding events during its mouseout.\n      if (\n        getClosestInstanceFromNode(related) ||\n        isContainerMarkedAsRoot(related)\n      ) {\n        return;\n      }\n    }\n  }\n\n  if (!isOutEvent && !isOverEvent) {\n    // Must not be a mouse or pointer in or out - ignoring.\n    return;\n  }\n\n  let win;\n  // TODO: why is this nullable in the types but we read from it?\n  if ((nativeEventTarget: any).window === nativeEventTarget) {\n    // `nativeEventTarget` is probably a window object.\n    win = nativeEventTarget;\n  } else {\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    const doc = (nativeEventTarget: any).ownerDocument;\n    if (doc) {\n      win = doc.defaultView || doc.parentWindow;\n    } else {\n      win = window;\n    }\n  }\n\n  let from;\n  let to;\n  if (isOutEvent) {\n    const related = nativeEvent.relatedTarget || (nativeEvent: any).toElement;\n    from = targetInst;\n    to = related ? getClosestInstanceFromNode((related: any)) : null;\n    if (to !== null) {\n      const nearestMounted = getNearestMountedFiber(to);\n      if (\n        to !== nearestMounted ||\n        (to.tag !== HostComponent && to.tag !== HostText)\n      ) {\n        to = null;\n      }\n    }\n  } else {\n    // Moving to a node from outside the window.\n    from = null;\n    to = targetInst;\n  }\n\n  if (from === to) {\n    // Nothing pertains to our managed components.\n    return;\n  }\n\n  let SyntheticEventCtor = SyntheticMouseEvent;\n  let leaveEventType = 'onMouseLeave';\n  let enterEventType = 'onMouseEnter';\n  let eventTypePrefix = 'mouse';\n  if (domEventName === 'pointerout' || domEventName === 'pointerover') {\n    SyntheticEventCtor = SyntheticPointerEvent;\n    leaveEventType = 'onPointerLeave';\n    enterEventType = 'onPointerEnter';\n    eventTypePrefix = 'pointer';\n  }\n\n  const fromNode = from == null ? win : getNodeFromInstance(from);\n  const toNode = to == null ? win : getNodeFromInstance(to);\n\n  const leave = new SyntheticEventCtor(\n    leaveEventType,\n    eventTypePrefix + 'leave',\n    from,\n    nativeEvent,\n    nativeEventTarget,\n  );\n  leave.target = fromNode;\n  leave.relatedTarget = toNode;\n\n  let enter: KnownReactSyntheticEvent | null = null;\n\n  // We should only process this nativeEvent if we are processing\n  // the first ancestor. Next time, we will ignore the event.\n  const nativeTargetInst = getClosestInstanceFromNode((nativeEventTarget: any));\n  if (nativeTargetInst === targetInst) {\n    const enterEvent: KnownReactSyntheticEvent = new SyntheticEventCtor(\n      enterEventType,\n      eventTypePrefix + 'enter',\n      to,\n      nativeEvent,\n      nativeEventTarget,\n    );\n    enterEvent.target = toNode;\n    enterEvent.relatedTarget = fromNode;\n    enter = enterEvent;\n  }\n\n  accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);\n}\n\nexport {registerEvents, extractEvents};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst objectIs: (x: any, y: any) => boolean =\n  typeof Object.is === 'function' ? Object.is : is;\n\nexport default objectIs;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport is from './objectIs';\nimport hasOwnProperty from './hasOwnProperty';\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA: mixed, objB: mixed): boolean {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    const currentKey = keysA[i];\n    if (\n      !hasOwnProperty.call(objB, currentKey) ||\n      !is(objA[currentKey], objB[currentKey])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default shallowEqual;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {TEXT_NODE} from '../shared/HTMLNodeType';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root: Element, offset: number): ?Object {\n  let node = getLeafNode(root);\n  let nodeStart = 0;\n  let nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === TEXT_NODE) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart,\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nexport default getNodeForCharacterOffset;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport getNodeForCharacterOffset from './getNodeForCharacterOffset';\nimport {TEXT_NODE} from '../shared/HTMLNodeType';\n\n/**\n * @param {DOMElement} outerNode\n * @return {?object}\n */\nexport function getOffsets(outerNode) {\n  const {ownerDocument} = outerNode;\n  const win = (ownerDocument && ownerDocument.defaultView) || window;\n  const selection = win.getSelection && win.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  const {anchorNode, anchorOffset, focusNode, focusOffset} = selection;\n\n  // In Firefox, anchorNode and focusNode can be \"anonymous divs\", e.g. the\n  // up/down buttons on an <input type=\"number\">. Anonymous divs do not seem to\n  // expose properties, triggering a \"Permission denied error\" if any of its\n  // properties are accessed. The only seemingly possible way to avoid erroring\n  // is to access a property that typically works for non-anonymous divs and\n  // catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n  try {\n    /* eslint-disable no-unused-expressions */\n    anchorNode.nodeType;\n    focusNode.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  return getModernOffsetsFromPoints(\n    outerNode,\n    anchorNode,\n    anchorOffset,\n    focusNode,\n    focusOffset,\n  );\n}\n\n/**\n * Returns {start, end} where `start` is the character/codepoint index of\n * (anchorNode, anchorOffset) within the textContent of `outerNode`, and\n * `end` is the index of (focusNode, focusOffset).\n *\n * Returns null if you pass in garbage input but we should probably just crash.\n *\n * Exported only for testing.\n */\nexport function getModernOffsetsFromPoints(\n  outerNode,\n  anchorNode,\n  anchorOffset,\n  focusNode,\n  focusOffset,\n) {\n  let length = 0;\n  let start = -1;\n  let end = -1;\n  let indexWithinAnchor = 0;\n  let indexWithinFocus = 0;\n  let node = outerNode;\n  let parentNode = null;\n\n  outer: while (true) {\n    let next = null;\n\n    while (true) {\n      if (\n        node === anchorNode &&\n        (anchorOffset === 0 || node.nodeType === TEXT_NODE)\n      ) {\n        start = length + anchorOffset;\n      }\n      if (\n        node === focusNode &&\n        (focusOffset === 0 || node.nodeType === TEXT_NODE)\n      ) {\n        end = length + focusOffset;\n      }\n\n      if (node.nodeType === TEXT_NODE) {\n        length += node.nodeValue.length;\n      }\n\n      if ((next = node.firstChild) === null) {\n        break;\n      }\n      // Moving from `node` to its first child `next`.\n      parentNode = node;\n      node = next;\n    }\n\n    while (true) {\n      if (node === outerNode) {\n        // If `outerNode` has children, this is always the second time visiting\n        // it. If it has no children, this is still the first loop, and the only\n        // valid selection is anchorNode and focusNode both equal to this node\n        // and both offsets 0, in which case we will have handled above.\n        break outer;\n      }\n      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {\n        start = length;\n      }\n      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {\n        end = length;\n      }\n      if ((next = node.nextSibling) !== null) {\n        break;\n      }\n      node = parentNode;\n      parentNode = node.parentNode;\n    }\n\n    // Moving from `node` to its next sibling `next`.\n    node = next;\n  }\n\n  if (start === -1 || end === -1) {\n    // This should never happen. (Would happen if the anchor/focus nodes aren't\n    // actually inside the passed-in node.)\n    return null;\n  }\n\n  return {\n    start: start,\n    end: end,\n  };\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programmatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nexport function setOffsets(node, offsets) {\n  const doc = node.ownerDocument || document;\n  const win = (doc && doc.defaultView) || window;\n\n  // Edge fails with \"Object expected\" in some scenarios.\n  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,\n  // fails when pasting 100+ items)\n  if (!win.getSelection) {\n    return;\n  }\n\n  const selection = win.getSelection();\n  const length = node.textContent.length;\n  let start = Math.min(offsets.start, length);\n  let end = offsets.end === undefined ? start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    const temp = end;\n    end = start;\n    start = temp;\n  }\n\n  const startMarker = getNodeForCharacterOffset(node, start);\n  const endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    if (\n      selection.rangeCount === 1 &&\n      selection.anchorNode === startMarker.node &&\n      selection.anchorOffset === startMarker.offset &&\n      selection.focusNode === endMarker.node &&\n      selection.focusOffset === endMarker.offset\n    ) {\n      return;\n    }\n    const range = doc.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport getActiveElement from './getActiveElement';\n\nimport {getOffsets, setOffsets} from './ReactDOMSelection';\nimport {ELEMENT_NODE, TEXT_NODE} from '../shared/HTMLNodeType';\n\nfunction isTextNode(node) {\n  return node && node.nodeType === TEXT_NODE;\n}\n\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nfunction isInDocument(node) {\n  return (\n    node &&\n    node.ownerDocument &&\n    containsNode(node.ownerDocument.documentElement, node)\n  );\n}\n\nfunction isSameOriginFrame(iframe) {\n  try {\n    // Accessing the contentDocument of a HTMLIframeElement can cause the browser\n    // to throw, e.g. if it has a cross-origin src attribute.\n    // Safari will show an error in the console when the access results in \"Blocked a frame with origin\". e.g:\n    // iframe.contentDocument.defaultView;\n    // A safety way is to access one of the cross origin properties: Window or Location\n    // Which might result in \"SecurityError\" DOM Exception and it is compatible to Safari.\n    // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl\n\n    return typeof iframe.contentWindow.location.href === 'string';\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction getActiveElementDeep() {\n  let win = window;\n  let element = getActiveElement();\n  while (element instanceof win.HTMLIFrameElement) {\n    if (isSameOriginFrame(element)) {\n      win = element.contentWindow;\n    } else {\n      return element;\n    }\n    element = getActiveElement(win.document);\n  }\n  return element;\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\n\n/**\n * @hasSelectionCapabilities: we get the element types that support selection\n * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`\n * and `selectionEnd` rows.\n */\nexport function hasSelectionCapabilities(elem) {\n  const nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return (\n    nodeName &&\n    ((nodeName === 'input' &&\n      (elem.type === 'text' ||\n        elem.type === 'search' ||\n        elem.type === 'tel' ||\n        elem.type === 'url' ||\n        elem.type === 'password')) ||\n      nodeName === 'textarea' ||\n      elem.contentEditable === 'true')\n  );\n}\n\nexport function getSelectionInformation() {\n  const focusedElem = getActiveElementDeep();\n  return {\n    focusedElem: focusedElem,\n    selectionRange: hasSelectionCapabilities(focusedElem)\n      ? getSelection(focusedElem)\n      : null,\n  };\n}\n\n/**\n * @restoreSelection: If any selection information was potentially lost,\n * restore it. This is useful when performing operations that could remove dom\n * nodes and place them back in, resulting in focus being lost.\n */\nexport function restoreSelection(priorSelectionInformation) {\n  const curFocusedElem = getActiveElementDeep();\n  const priorFocusedElem = priorSelectionInformation.focusedElem;\n  const priorSelectionRange = priorSelectionInformation.selectionRange;\n  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n    if (\n      priorSelectionRange !== null &&\n      hasSelectionCapabilities(priorFocusedElem)\n    ) {\n      setSelection(priorFocusedElem, priorSelectionRange);\n    }\n\n    // Focusing a node can change the scroll position, which is undesirable\n    const ancestors = [];\n    let ancestor = priorFocusedElem;\n    while ((ancestor = ancestor.parentNode)) {\n      if (ancestor.nodeType === ELEMENT_NODE) {\n        ancestors.push({\n          element: ancestor,\n          left: ancestor.scrollLeft,\n          top: ancestor.scrollTop,\n        });\n      }\n    }\n\n    if (typeof priorFocusedElem.focus === 'function') {\n      priorFocusedElem.focus();\n    }\n\n    for (let i = 0; i < ancestors.length; i++) {\n      const info = ancestors[i];\n      info.element.scrollLeft = info.left;\n      info.element.scrollTop = info.top;\n    }\n  }\n}\n\n/**\n * @getSelection: Gets the selection bounds of a focused textarea, input or\n * contentEditable node.\n * -@input: Look up selection bounds of this input\n * -@return {start: selectionStart, end: selectionEnd}\n */\nexport function getSelection(input) {\n  let selection;\n\n  if ('selectionStart' in input) {\n    // Modern browser with input or textarea.\n    selection = {\n      start: input.selectionStart,\n      end: input.selectionEnd,\n    };\n  } else {\n    // Content editable or old IE textarea.\n    selection = getOffsets(input);\n  }\n\n  return selection || {start: 0, end: 0};\n}\n\n/**\n * @setSelection: Sets the selection bounds of a textarea or input and focuses\n * the input.\n * -@input     Set selection bounds of this input or textarea\n * -@offsets   Object of same form that is returned from get*\n */\nexport function setSelection(input, offsets) {\n  const start = offsets.start;\n  let end = offsets.end;\n  if (end === undefined) {\n    end = start;\n  }\n\n  if ('selectionStart' in input) {\n    input.selectionStart = start;\n    input.selectionEnd = Math.min(end, input.value.length);\n  } else {\n    setOffsets(input, offsets);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {AnyNativeEvent} from '../PluginModuleType';\nimport type {DOMEventName} from '../DOMEventNames';\nimport type {DispatchQueue} from '../DOMPluginEventSystem';\nimport type {EventSystemFlags} from '../EventSystemFlags';\n\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\nimport {SyntheticEvent} from '../../events/SyntheticEvent';\nimport isTextInputElement from '../isTextInputElement';\nimport shallowEqual from 'shared/shallowEqual';\n\nimport {registerTwoPhaseEvent} from '../EventRegistry';\nimport getActiveElement from '../../client/getActiveElement';\nimport {getNodeFromInstance} from '../../client/ReactDOMComponentTree';\nimport {hasSelectionCapabilities} from '../../client/ReactInputSelection';\nimport {DOCUMENT_NODE} from '../../shared/HTMLNodeType';\nimport {accumulateTwoPhaseListeners} from '../DOMPluginEventSystem';\n\nconst skipSelectionChangeEvent =\n  canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nfunction registerEvents() {\n  registerTwoPhaseEvent('onSelect', [\n    'focusout',\n    'contextmenu',\n    'dragend',\n    'focusin',\n    'keydown',\n    'keyup',\n    'mousedown',\n    'mouseup',\n    'selectionchange',\n  ]);\n}\n\nlet activeElement = null;\nlet activeElementInst = null;\nlet lastSelection = null;\nlet mouseDown = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n */\nfunction getSelection(node: any) {\n  if ('selectionStart' in node && hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd,\n    };\n  } else {\n    const win =\n      (node.ownerDocument && node.ownerDocument.defaultView) || window;\n    const selection = win.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset,\n    };\n  }\n}\n\n/**\n * Get document associated with the event target.\n */\nfunction getEventTargetDocument(eventTarget: any) {\n  return eventTarget.window === eventTarget\n    ? eventTarget.document\n    : eventTarget.nodeType === DOCUMENT_NODE\n    ? eventTarget\n    : eventTarget.ownerDocument;\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @param {object} nativeEventTarget\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  const doc = getEventTargetDocument(nativeEventTarget);\n\n  if (\n    mouseDown ||\n    activeElement == null ||\n    activeElement !== getActiveElement(doc)\n  ) {\n    return;\n  }\n\n  // Only fire when selection has actually changed.\n  const currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    const listeners = accumulateTwoPhaseListeners(\n      activeElementInst,\n      'onSelect',\n    );\n    if (listeners.length > 0) {\n      const event = new SyntheticEvent(\n        'onSelect',\n        'select',\n        null,\n        nativeEvent,\n        nativeEventTarget,\n      );\n      dispatchQueue.push({event, listeners});\n      event.target = activeElement;\n    }\n  }\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nfunction extractEvents(\n  dispatchQueue: DispatchQueue,\n  domEventName: DOMEventName,\n  targetInst: null | Fiber,\n  nativeEvent: AnyNativeEvent,\n  nativeEventTarget: null | EventTarget,\n  eventSystemFlags: EventSystemFlags,\n  targetContainer: EventTarget,\n) {\n  const targetNode = targetInst ? getNodeFromInstance(targetInst) : window;\n\n  switch (domEventName) {\n    // Track the input node that has focus.\n    case 'focusin':\n      if (\n        isTextInputElement((targetNode: any)) ||\n        targetNode.contentEditable === 'true'\n      ) {\n        activeElement = targetNode;\n        activeElementInst = targetInst;\n        lastSelection = null;\n      }\n      break;\n    case 'focusout':\n      activeElement = null;\n      activeElementInst = null;\n      lastSelection = null;\n      break;\n    // Don't fire the event while the user is dragging. This matches the\n    // semantics of the native select event.\n    case 'mousedown':\n      mouseDown = true;\n      break;\n    case 'contextmenu':\n    case 'mouseup':\n    case 'dragend':\n      mouseDown = false;\n      constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n      break;\n    // Chrome and IE fire non-standard event when selection is changed (and\n    // sometimes when it hasn't). IE's event fires out of order with respect\n    // to key and input events on deletion, so we discard it.\n    //\n    // Firefox doesn't support selectionchange, so check selection status\n    // after each key entry. The selection changes after keydown and before\n    // keyup, but we check on keydown as well in the case of holding down a\n    // key, when multiple keydown events are fired but only one keyup is.\n    // This is also our approach for IE handling, for the reason above.\n    case 'selectionchange':\n      if (skipSelectionChangeEvent) {\n        break;\n      }\n    // falls through\n    case 'keydown':\n    case 'keyup':\n      constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n  }\n}\n\nexport {registerEvents, extractEvents};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\n\n/**\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n *\n * @param {string} styleProp\n * @param {string} eventName\n * @returns {object}\n */\nfunction makePrefixMap(styleProp, eventName) {\n  const prefixes = {};\n\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n\n  return prefixes;\n}\n\n/**\n * A list of event names to a configurable list of vendor prefixes.\n */\nconst vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd'),\n};\n\n/**\n * Event names that have already been detected and prefixed (if applicable).\n */\nconst prefixedEventNames = {};\n\n/**\n * Element to check for prefixes on.\n */\nlet style = {};\n\n/**\n * Bootstrap if a DOM exists.\n */\nif (canUseDOM) {\n  style = document.createElement('div').style;\n\n  // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  }\n\n  // Same as above\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n\n/**\n * Attempts to determine the correct vendor prefixed event name.\n *\n * @param {string} eventName\n * @returns {string}\n */\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  const prefixMap = vendorPrefixes[eventName];\n\n  for (const styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return (prefixedEventNames[eventName] = prefixMap[styleProp]);\n    }\n  }\n\n  return eventName;\n}\n\nexport default getVendorPrefixedEventName;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport getVendorPrefixedEventName from './getVendorPrefixedEventName';\n\nexport type DOMEventName =\n  | 'abort'\n  | 'afterblur' // Not a real event. This is used by event experiments.\n  // These are vendor-prefixed so you should use the exported constants instead:\n  // 'animationiteration' |\n  // 'animationend |\n  // 'animationstart' |\n  | 'beforeblur' // Not a real event. This is used by event experiments.\n  | 'beforeinput'\n  | 'blur'\n  | 'canplay'\n  | 'canplaythrough'\n  | 'cancel'\n  | 'change'\n  | 'click'\n  | 'close'\n  | 'compositionend'\n  | 'compositionstart'\n  | 'compositionupdate'\n  | 'contextmenu'\n  | 'copy'\n  | 'cut'\n  | 'dblclick'\n  | 'auxclick'\n  | 'drag'\n  | 'dragend'\n  | 'dragenter'\n  | 'dragexit'\n  | 'dragleave'\n  | 'dragover'\n  | 'dragstart'\n  | 'drop'\n  | 'durationchange'\n  | 'emptied'\n  | 'encrypted'\n  | 'ended'\n  | 'error'\n  | 'focus'\n  | 'focusin'\n  | 'focusout'\n  | 'fullscreenchange'\n  | 'gotpointercapture'\n  | 'hashchange'\n  | 'input'\n  | 'invalid'\n  | 'keydown'\n  | 'keypress'\n  | 'keyup'\n  | 'load'\n  | 'loadstart'\n  | 'loadeddata'\n  | 'loadedmetadata'\n  | 'lostpointercapture'\n  | 'message'\n  | 'mousedown'\n  | 'mouseenter'\n  | 'mouseleave'\n  | 'mousemove'\n  | 'mouseout'\n  | 'mouseover'\n  | 'mouseup'\n  | 'paste'\n  | 'pause'\n  | 'play'\n  | 'playing'\n  | 'pointercancel'\n  | 'pointerdown'\n  | 'pointerenter'\n  | 'pointerleave'\n  | 'pointermove'\n  | 'pointerout'\n  | 'pointerover'\n  | 'pointerup'\n  | 'popstate'\n  | 'progress'\n  | 'ratechange'\n  | 'reset'\n  | 'resize'\n  | 'scroll'\n  | 'seeked'\n  | 'seeking'\n  | 'select'\n  | 'selectstart'\n  | 'selectionchange'\n  | 'stalled'\n  | 'submit'\n  | 'suspend'\n  | 'textInput' // Intentionally camelCase. Non-standard.\n  | 'timeupdate'\n  | 'toggle'\n  | 'touchcancel'\n  | 'touchend'\n  | 'touchmove'\n  | 'touchstart'\n  // These are vendor-prefixed so you should use the exported constants instead:\n  // 'transitionend' |\n  | 'volumechange'\n  | 'waiting'\n  | 'wheel';\n\nexport const ANIMATION_END: DOMEventName = getVendorPrefixedEventName(\n  'animationend',\n);\nexport const ANIMATION_ITERATION: DOMEventName = getVendorPrefixedEventName(\n  'animationiteration',\n);\nexport const ANIMATION_START: DOMEventName = getVendorPrefixedEventName(\n  'animationstart',\n);\nexport const TRANSITION_END: DOMEventName = getVendorPrefixedEventName(\n  'transitionend',\n);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {DOMEventName} from './DOMEventNames';\n\nimport {registerTwoPhaseEvent} from './EventRegistry';\nimport {\n  ANIMATION_END,\n  ANIMATION_ITERATION,\n  ANIMATION_START,\n  TRANSITION_END,\n} from './DOMEventNames';\n\nimport {enableCreateEventHandleAPI} from 'shared/ReactFeatureFlags';\n\nexport const topLevelEventsToReactNames: Map<\n  DOMEventName,\n  string | null,\n> = new Map();\n\n// NOTE: Capitalization is important in this list!\n//\n// E.g. it needs \"pointerDown\", not \"pointerdown\".\n// This is because we derive both React name (\"onPointerDown\")\n// and DOM name (\"pointerdown\") from the same list.\n//\n// Exceptions that don't match this convention are listed separately.\n//\n// prettier-ignore\nconst simpleEventPluginEvents = [\n  'abort',\n  'auxClick',\n  'cancel',\n  'canPlay',\n  'canPlayThrough',\n  'click',\n  'close',\n  'contextMenu',\n  'copy',\n  'cut',\n  'drag',\n  'dragEnd',\n  'dragEnter',\n  'dragExit',\n  'dragLeave',\n  'dragOver',\n  'dragStart',\n  'drop',\n  'durationChange',\n  'emptied',\n  'encrypted',\n  'ended',\n  'error',\n  'gotPointerCapture',\n  'input',\n  'invalid',\n  'keyDown',\n  'keyPress',\n  'keyUp',\n  'load',\n  'loadedData',\n  'loadedMetadata',\n  'loadStart',\n  'lostPointerCapture',\n  'mouseDown',\n  'mouseMove',\n  'mouseOut',\n  'mouseOver',\n  'mouseUp',\n  'paste',\n  'pause',\n  'play',\n  'playing',\n  'pointerCancel',\n  'pointerDown',\n  'pointerMove',\n  'pointerOut',\n  'pointerOver',\n  'pointerUp',\n  'progress',\n  'rateChange',\n  'reset',\n  'resize',\n  'seeked',\n  'seeking',\n  'stalled',\n  'submit',\n  'suspend',\n  'timeUpdate',\n  'touchCancel',\n  'touchEnd',\n  'touchStart',\n  'volumeChange',\n  'scroll',\n  'toggle',\n  'touchMove',\n  'waiting',\n  'wheel',\n];\n\nif (enableCreateEventHandleAPI) {\n  // Special case: these two events don't have on* React handler\n  // and are only accessible via the createEventHandle API.\n  topLevelEventsToReactNames.set('beforeblur', null);\n  topLevelEventsToReactNames.set('afterblur', null);\n}\n\nfunction registerSimpleEvent(domEventName, reactName) {\n  topLevelEventsToReactNames.set(domEventName, reactName);\n  registerTwoPhaseEvent(reactName, [domEventName]);\n}\n\nexport function registerSimpleEvents() {\n  for (let i = 0; i < simpleEventPluginEvents.length; i++) {\n    const eventName = ((simpleEventPluginEvents[i]: any): string);\n    const domEventName = ((eventName.toLowerCase(): any): DOMEventName);\n    const capitalizedEvent = eventName[0].toUpperCase() + eventName.slice(1);\n    registerSimpleEvent(domEventName, 'on' + capitalizedEvent);\n  }\n  // Special cases where event names don't match.\n  registerSimpleEvent(ANIMATION_END, 'onAnimationEnd');\n  registerSimpleEvent(ANIMATION_ITERATION, 'onAnimationIteration');\n  registerSimpleEvent(ANIMATION_START, 'onAnimationStart');\n  registerSimpleEvent('dblclick', 'onDoubleClick');\n  registerSimpleEvent('focusin', 'onFocus');\n  registerSimpleEvent('focusout', 'onBlur');\n  registerSimpleEvent(TRANSITION_END, 'onTransitionEnd');\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {DOMEventName} from '../../events/DOMEventNames';\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\nimport type {AnyNativeEvent} from '../../events/PluginModuleType';\nimport type {DispatchQueue} from '../DOMPluginEventSystem';\nimport type {EventSystemFlags} from '../EventSystemFlags';\n\nimport {\n  SyntheticEvent,\n  SyntheticKeyboardEvent,\n  SyntheticFocusEvent,\n  SyntheticMouseEvent,\n  SyntheticDragEvent,\n  SyntheticTouchEvent,\n  SyntheticAnimationEvent,\n  SyntheticTransitionEvent,\n  SyntheticUIEvent,\n  SyntheticWheelEvent,\n  SyntheticClipboardEvent,\n  SyntheticPointerEvent,\n} from '../../events/SyntheticEvent';\n\nimport {\n  ANIMATION_END,\n  ANIMATION_ITERATION,\n  ANIMATION_START,\n  TRANSITION_END,\n} from '../DOMEventNames';\nimport {\n  topLevelEventsToReactNames,\n  registerSimpleEvents,\n} from '../DOMEventProperties';\nimport {\n  accumulateSinglePhaseListeners,\n  accumulateEventHandleNonManagedNodeListeners,\n} from '../DOMPluginEventSystem';\nimport {IS_EVENT_HANDLE_NON_MANAGED_NODE} from '../EventSystemFlags';\n\nimport getEventCharCode from '../getEventCharCode';\nimport {IS_CAPTURE_PHASE} from '../EventSystemFlags';\n\nimport {enableCreateEventHandleAPI} from 'shared/ReactFeatureFlags';\n\nfunction extractEvents(\n  dispatchQueue: DispatchQueue,\n  domEventName: DOMEventName,\n  targetInst: null | Fiber,\n  nativeEvent: AnyNativeEvent,\n  nativeEventTarget: null | EventTarget,\n  eventSystemFlags: EventSystemFlags,\n  targetContainer: EventTarget,\n): void {\n  const reactName = topLevelEventsToReactNames.get(domEventName);\n  if (reactName === undefined) {\n    return;\n  }\n  let SyntheticEventCtor = SyntheticEvent;\n  let reactEventType: string = domEventName;\n  switch (domEventName) {\n    case 'keypress':\n      // Firefox creates a keypress event for function keys too. This removes\n      // the unwanted keypress events. Enter is however both printable and\n      // non-printable. One would expect Tab to be as well (but it isn't).\n      if (getEventCharCode(((nativeEvent: any): KeyboardEvent)) === 0) {\n        return;\n      }\n    /* falls through */\n    case 'keydown':\n    case 'keyup':\n      SyntheticEventCtor = SyntheticKeyboardEvent;\n      break;\n    case 'focusin':\n      reactEventType = 'focus';\n      SyntheticEventCtor = SyntheticFocusEvent;\n      break;\n    case 'focusout':\n      reactEventType = 'blur';\n      SyntheticEventCtor = SyntheticFocusEvent;\n      break;\n    case 'beforeblur':\n    case 'afterblur':\n      SyntheticEventCtor = SyntheticFocusEvent;\n      break;\n    case 'click':\n      // Firefox creates a click event on right mouse clicks. This removes the\n      // unwanted click events.\n      if (nativeEvent.button === 2) {\n        return;\n      }\n    /* falls through */\n    case 'auxclick':\n    case 'dblclick':\n    case 'mousedown':\n    case 'mousemove':\n    case 'mouseup':\n    // TODO: Disabled elements should not respond to mouse events\n    /* falls through */\n    case 'mouseout':\n    case 'mouseover':\n    case 'contextmenu':\n      SyntheticEventCtor = SyntheticMouseEvent;\n      break;\n    case 'drag':\n    case 'dragend':\n    case 'dragenter':\n    case 'dragexit':\n    case 'dragleave':\n    case 'dragover':\n    case 'dragstart':\n    case 'drop':\n      SyntheticEventCtor = SyntheticDragEvent;\n      break;\n    case 'touchcancel':\n    case 'touchend':\n    case 'touchmove':\n    case 'touchstart':\n      SyntheticEventCtor = SyntheticTouchEvent;\n      break;\n    case ANIMATION_END:\n    case ANIMATION_ITERATION:\n    case ANIMATION_START:\n      SyntheticEventCtor = SyntheticAnimationEvent;\n      break;\n    case TRANSITION_END:\n      SyntheticEventCtor = SyntheticTransitionEvent;\n      break;\n    case 'scroll':\n      SyntheticEventCtor = SyntheticUIEvent;\n      break;\n    case 'wheel':\n      SyntheticEventCtor = SyntheticWheelEvent;\n      break;\n    case 'copy':\n    case 'cut':\n    case 'paste':\n      SyntheticEventCtor = SyntheticClipboardEvent;\n      break;\n    case 'gotpointercapture':\n    case 'lostpointercapture':\n    case 'pointercancel':\n    case 'pointerdown':\n    case 'pointermove':\n    case 'pointerout':\n    case 'pointerover':\n    case 'pointerup':\n      SyntheticEventCtor = SyntheticPointerEvent;\n      break;\n    default:\n      // Unknown event. This is used by createEventHandle.\n      break;\n  }\n\n  const inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;\n  if (\n    enableCreateEventHandleAPI &&\n    eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE\n  ) {\n    const listeners = accumulateEventHandleNonManagedNodeListeners(\n      // TODO: this cast may not make sense for events like\n      // \"focus\" where React listens to e.g. \"focusin\".\n      ((reactEventType: any): DOMEventName),\n      targetContainer,\n      inCapturePhase,\n    );\n    if (listeners.length > 0) {\n      // Intentionally create event lazily.\n      const event = new SyntheticEventCtor(\n        reactName,\n        reactEventType,\n        null,\n        nativeEvent,\n        nativeEventTarget,\n      );\n      dispatchQueue.push({event, listeners});\n    }\n  } else {\n    // Some events don't bubble in the browser.\n    // In the past, React has always bubbled them, but this can be surprising.\n    // We're going to try aligning closer to the browser behavior by not bubbling\n    // them in React either. We'll start by not bubbling onScroll, and then expand.\n    const accumulateTargetOnly =\n      !inCapturePhase &&\n      // TODO: ideally, we'd eventually add all events from\n      // nonDelegatedEvents list in DOMPluginEventSystem.\n      // Then we can remove this special list.\n      // This is a breaking change that can wait until React 18.\n      domEventName === 'scroll';\n\n    const listeners = accumulateSinglePhaseListeners(\n      targetInst,\n      reactName,\n      nativeEvent.type,\n      inCapturePhase,\n      accumulateTargetOnly,\n      nativeEvent,\n    );\n    if (listeners.length > 0) {\n      // Intentionally create event lazily.\n      const event = new SyntheticEventCtor(\n        reactName,\n        reactEventType,\n        null,\n        nativeEvent,\n        nativeEventTarget,\n      );\n      dispatchQueue.push({event, listeners});\n    }\n  }\n}\n\nexport {registerSimpleEvents as registerEvents, extractEvents};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {DOMEventName} from './DOMEventNames';\nimport {\n  type EventSystemFlags,\n  SHOULD_NOT_DEFER_CLICK_FOR_FB_SUPPORT_MODE,\n  IS_LEGACY_FB_SUPPORT_MODE,\n  SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS,\n} from './EventSystemFlags';\nimport type {AnyNativeEvent} from './PluginModuleType';\nimport type {\n  KnownReactSyntheticEvent,\n  ReactSyntheticEvent,\n} from './ReactSyntheticEventType';\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\n\nimport {allNativeEvents} from './EventRegistry';\nimport {\n  IS_CAPTURE_PHASE,\n  IS_EVENT_HANDLE_NON_MANAGED_NODE,\n  IS_NON_DELEGATED,\n} from './EventSystemFlags';\nimport {isReplayingEvent} from './CurrentReplayingEvent';\n\nimport {\n  HostRoot,\n  HostPortal,\n  HostComponent,\n  HostText,\n  ScopeComponent,\n} from 'react-reconciler/src/ReactWorkTags';\n\nimport getEventTarget from './getEventTarget';\nimport {\n  getClosestInstanceFromNode,\n  getEventListenerSet,\n  getEventHandlerListeners,\n} from '../client/ReactDOMComponentTree';\nimport {COMMENT_NODE} from '../shared/HTMLNodeType';\nimport {batchedUpdates} from './ReactDOMUpdateBatching';\nimport getListener from './getListener';\nimport {passiveBrowserEventsSupported} from './checkPassiveEvents';\n\nimport {\n  enableLegacyFBSupport,\n  enableCreateEventHandleAPI,\n  enableScopeAPI,\n} from 'shared/ReactFeatureFlags';\nimport {\n  invokeGuardedCallbackAndCatchFirstError,\n  rethrowCaughtError,\n} from 'shared/ReactErrorUtils';\nimport {DOCUMENT_NODE} from '../shared/HTMLNodeType';\nimport {createEventListenerWrapperWithPriority} from './ReactDOMEventListener';\nimport {\n  removeEventListener,\n  addEventCaptureListener,\n  addEventBubbleListener,\n  addEventBubbleListenerWithPassiveFlag,\n  addEventCaptureListenerWithPassiveFlag,\n} from './EventListener';\nimport * as BeforeInputEventPlugin from './plugins/BeforeInputEventPlugin';\nimport * as ChangeEventPlugin from './plugins/ChangeEventPlugin';\nimport * as EnterLeaveEventPlugin from './plugins/EnterLeaveEventPlugin';\nimport * as SelectEventPlugin from './plugins/SelectEventPlugin';\nimport * as SimpleEventPlugin from './plugins/SimpleEventPlugin';\n\ntype DispatchListener = {|\n  instance: null | Fiber,\n  listener: Function,\n  currentTarget: EventTarget,\n|};\n\ntype DispatchEntry = {|\n  event: ReactSyntheticEvent,\n  listeners: Array<DispatchListener>,\n|};\n\nexport type DispatchQueue = Array<DispatchEntry>;\n\n// TODO: remove top-level side effect.\nSimpleEventPlugin.registerEvents();\nEnterLeaveEventPlugin.registerEvents();\nChangeEventPlugin.registerEvents();\nSelectEventPlugin.registerEvents();\nBeforeInputEventPlugin.registerEvents();\n\nfunction extractEvents(\n  dispatchQueue: DispatchQueue,\n  domEventName: DOMEventName,\n  targetInst: null | Fiber,\n  nativeEvent: AnyNativeEvent,\n  nativeEventTarget: null | EventTarget,\n  eventSystemFlags: EventSystemFlags,\n  targetContainer: EventTarget,\n) {\n  // TODO: we should remove the concept of a \"SimpleEventPlugin\".\n  // This is the basic functionality of the event system. All\n  // the other plugins are essentially polyfills. So the plugin\n  // should probably be inlined somewhere and have its logic\n  // be core the to event system. This would potentially allow\n  // us to ship builds of React without the polyfilled plugins below.\n  SimpleEventPlugin.extractEvents(\n    dispatchQueue,\n    domEventName,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n    eventSystemFlags,\n    targetContainer,\n  );\n  const shouldProcessPolyfillPlugins =\n    (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0;\n  // We don't process these events unless we are in the\n  // event's native \"bubble\" phase, which means that we're\n  // not in the capture phase. That's because we emulate\n  // the capture phase here still. This is a trade-off,\n  // because in an ideal world we would not emulate and use\n  // the phases properly, like we do with the SimpleEvent\n  // plugin. However, the plugins below either expect\n  // emulation (EnterLeave) or use state localized to that\n  // plugin (BeforeInput, Change, Select). The state in\n  // these modules complicates things, as you'll essentially\n  // get the case where the capture phase event might change\n  // state, only for the following bubble event to come in\n  // later and not trigger anything as the state now\n  // invalidates the heuristics of the event plugin. We\n  // could alter all these plugins to work in such ways, but\n  // that might cause other unknown side-effects that we\n  // can't foresee right now.\n  if (shouldProcessPolyfillPlugins) {\n    EnterLeaveEventPlugin.extractEvents(\n      dispatchQueue,\n      domEventName,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget,\n      eventSystemFlags,\n      targetContainer,\n    );\n    ChangeEventPlugin.extractEvents(\n      dispatchQueue,\n      domEventName,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget,\n      eventSystemFlags,\n      targetContainer,\n    );\n    SelectEventPlugin.extractEvents(\n      dispatchQueue,\n      domEventName,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget,\n      eventSystemFlags,\n      targetContainer,\n    );\n    BeforeInputEventPlugin.extractEvents(\n      dispatchQueue,\n      domEventName,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget,\n      eventSystemFlags,\n      targetContainer,\n    );\n  }\n}\n\n// List of events that need to be individually attached to media elements.\nexport const mediaEventTypes: Array<DOMEventName> = [\n  'abort',\n  'canplay',\n  'canplaythrough',\n  'durationchange',\n  'emptied',\n  'encrypted',\n  'ended',\n  'error',\n  'loadeddata',\n  'loadedmetadata',\n  'loadstart',\n  'pause',\n  'play',\n  'playing',\n  'progress',\n  'ratechange',\n  'resize',\n  'seeked',\n  'seeking',\n  'stalled',\n  'suspend',\n  'timeupdate',\n  'volumechange',\n  'waiting',\n];\n\n// We should not delegate these events to the container, but rather\n// set them on the actual target element itself. This is primarily\n// because these events do not consistently bubble in the DOM.\nexport const nonDelegatedEvents: Set<DOMEventName> = new Set([\n  'cancel',\n  'close',\n  'invalid',\n  'load',\n  'scroll',\n  'toggle',\n  // In order to reduce bytes, we insert the above array of media events\n  // into this Set. Note: the \"error\" event isn't an exclusive media event,\n  // and can occur on other elements too. Rather than duplicate that event,\n  // we just take it from the media events array.\n  ...mediaEventTypes,\n]);\n\nfunction executeDispatch(\n  event: ReactSyntheticEvent,\n  listener: Function,\n  currentTarget: EventTarget,\n): void {\n  const type = event.type || 'unknown-event';\n  event.currentTarget = currentTarget;\n  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\n  event.currentTarget = null;\n}\n\nfunction processDispatchQueueItemsInOrder(\n  event: ReactSyntheticEvent,\n  dispatchListeners: Array<DispatchListener>,\n  inCapturePhase: boolean,\n): void {\n  let previousInstance;\n  if (inCapturePhase) {\n    for (let i = dispatchListeners.length - 1; i >= 0; i--) {\n      const {instance, currentTarget, listener} = dispatchListeners[i];\n      if (instance !== previousInstance && event.isPropagationStopped()) {\n        return;\n      }\n      executeDispatch(event, listener, currentTarget);\n      previousInstance = instance;\n    }\n  } else {\n    for (let i = 0; i < dispatchListeners.length; i++) {\n      const {instance, currentTarget, listener} = dispatchListeners[i];\n      if (instance !== previousInstance && event.isPropagationStopped()) {\n        return;\n      }\n      executeDispatch(event, listener, currentTarget);\n      previousInstance = instance;\n    }\n  }\n}\n\nexport function processDispatchQueue(\n  dispatchQueue: DispatchQueue,\n  eventSystemFlags: EventSystemFlags,\n): void {\n  const inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;\n  for (let i = 0; i < dispatchQueue.length; i++) {\n    const {event, listeners} = dispatchQueue[i];\n    processDispatchQueueItemsInOrder(event, listeners, inCapturePhase);\n    //  event system doesn't use pooling.\n  }\n  // This would be a good time to rethrow if any of the event handlers threw.\n  rethrowCaughtError();\n}\n\nfunction dispatchEventsForPlugins(\n  domEventName: DOMEventName,\n  eventSystemFlags: EventSystemFlags,\n  nativeEvent: AnyNativeEvent,\n  targetInst: null | Fiber,\n  targetContainer: EventTarget,\n): void {\n  const nativeEventTarget = getEventTarget(nativeEvent);\n  const dispatchQueue: DispatchQueue = [];\n  extractEvents(\n    dispatchQueue,\n    domEventName,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n    eventSystemFlags,\n    targetContainer,\n  );\n  processDispatchQueue(dispatchQueue, eventSystemFlags);\n}\n\nexport function listenToNonDelegatedEvent(\n  domEventName: DOMEventName,\n  targetElement: Element,\n): void {\n  if (__DEV__) {\n    if (!nonDelegatedEvents.has(domEventName)) {\n      console.error(\n        'Did not expect a listenToNonDelegatedEvent() call for \"%s\". ' +\n          'This is a bug in React. Please file an issue.',\n        domEventName,\n      );\n    }\n  }\n  const isCapturePhaseListener = false;\n  const listenerSet = getEventListenerSet(targetElement);\n  const listenerSetKey = getListenerSetKey(\n    domEventName,\n    isCapturePhaseListener,\n  );\n  if (!listenerSet.has(listenerSetKey)) {\n    addTrappedEventListener(\n      targetElement,\n      domEventName,\n      IS_NON_DELEGATED,\n      isCapturePhaseListener,\n    );\n    listenerSet.add(listenerSetKey);\n  }\n}\n\nexport function listenToNativeEvent(\n  domEventName: DOMEventName,\n  isCapturePhaseListener: boolean,\n  target: EventTarget,\n): void {\n  if (__DEV__) {\n    if (nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener) {\n      console.error(\n        'Did not expect a listenToNativeEvent() call for \"%s\" in the bubble phase. ' +\n          'This is a bug in React. Please file an issue.',\n        domEventName,\n      );\n    }\n  }\n\n  let eventSystemFlags = 0;\n  if (isCapturePhaseListener) {\n    eventSystemFlags |= IS_CAPTURE_PHASE;\n  }\n  addTrappedEventListener(\n    target,\n    domEventName,\n    eventSystemFlags,\n    isCapturePhaseListener,\n  );\n}\n\n// This is only used by createEventHandle when the\n// target is not a DOM element. E.g. window.\nexport function listenToNativeEventForNonManagedEventTarget(\n  domEventName: DOMEventName,\n  isCapturePhaseListener: boolean,\n  target: EventTarget,\n): void {\n  let eventSystemFlags = IS_EVENT_HANDLE_NON_MANAGED_NODE;\n  const listenerSet = getEventListenerSet(target);\n  const listenerSetKey = getListenerSetKey(\n    domEventName,\n    isCapturePhaseListener,\n  );\n  if (!listenerSet.has(listenerSetKey)) {\n    if (isCapturePhaseListener) {\n      eventSystemFlags |= IS_CAPTURE_PHASE;\n    }\n    addTrappedEventListener(\n      target,\n      domEventName,\n      eventSystemFlags,\n      isCapturePhaseListener,\n    );\n    listenerSet.add(listenerSetKey);\n  }\n}\n\nconst listeningMarker =\n  '_reactListening' +\n  Math.random()\n    .toString(36)\n    .slice(2);\n\nexport function listenToAllSupportedEvents(rootContainerElement: EventTarget) {\n  if (!(rootContainerElement: any)[listeningMarker]) {\n    (rootContainerElement: any)[listeningMarker] = true;\n    allNativeEvents.forEach(domEventName => {\n      // We handle selectionchange separately because it\n      // doesn't bubble and needs to be on the document.\n      if (domEventName !== 'selectionchange') {\n        if (!nonDelegatedEvents.has(domEventName)) {\n          listenToNativeEvent(domEventName, false, rootContainerElement);\n        }\n        listenToNativeEvent(domEventName, true, rootContainerElement);\n      }\n    });\n    const ownerDocument =\n      (rootContainerElement: any).nodeType === DOCUMENT_NODE\n        ? rootContainerElement\n        : (rootContainerElement: any).ownerDocument;\n    if (ownerDocument !== null) {\n      // The selectionchange event also needs deduplication\n      // but it is attached to the document.\n      if (!(ownerDocument: any)[listeningMarker]) {\n        (ownerDocument: any)[listeningMarker] = true;\n        listenToNativeEvent('selectionchange', false, ownerDocument);\n      }\n    }\n  }\n}\n\nfunction addTrappedEventListener(\n  targetContainer: EventTarget,\n  domEventName: DOMEventName,\n  eventSystemFlags: EventSystemFlags,\n  isCapturePhaseListener: boolean,\n  isDeferredListenerForLegacyFBSupport?: boolean,\n) {\n  let listener = createEventListenerWrapperWithPriority(\n    targetContainer,\n    domEventName,\n    eventSystemFlags,\n  );\n  // If passive option is not supported, then the event will be\n  // active and not passive.\n  let isPassiveListener = undefined;\n  if (passiveBrowserEventsSupported) {\n    // Browsers introduced an intervention, making these events\n    // passive by default on document. React doesn't bind them\n    // to document anymore, but changing this now would undo\n    // the performance wins from the change. So we emulate\n    // the existing behavior manually on the roots now.\n    // https://github.com/facebook/react/issues/19651\n    if (\n      domEventName === 'touchstart' ||\n      domEventName === 'touchmove' ||\n      domEventName === 'wheel'\n    ) {\n      isPassiveListener = true;\n    }\n  }\n\n  targetContainer =\n    enableLegacyFBSupport && isDeferredListenerForLegacyFBSupport\n      ? (targetContainer: any).ownerDocument\n      : targetContainer;\n\n  let unsubscribeListener;\n  // When legacyFBSupport is enabled, it's for when we\n  // want to add a one time event listener to a container.\n  // This should only be used with enableLegacyFBSupport\n  // due to requirement to provide compatibility with\n  // internal FB www event tooling. This works by removing\n  // the event listener as soon as it is invoked. We could\n  // also attempt to use the {once: true} param on\n  // addEventListener, but that requires support and some\n  // browsers do not support this today, and given this is\n  // to support legacy code patterns, it's likely they'll\n  // need support for such browsers.\n  if (enableLegacyFBSupport && isDeferredListenerForLegacyFBSupport) {\n    const originalListener = listener;\n    listener = function(...p) {\n      removeEventListener(\n        targetContainer,\n        domEventName,\n        unsubscribeListener,\n        isCapturePhaseListener,\n      );\n      return originalListener.apply(this, p);\n    };\n  }\n  // TODO: There are too many combinations here. Consolidate them.\n  if (isCapturePhaseListener) {\n    if (isPassiveListener !== undefined) {\n      unsubscribeListener = addEventCaptureListenerWithPassiveFlag(\n        targetContainer,\n        domEventName,\n        listener,\n        isPassiveListener,\n      );\n    } else {\n      unsubscribeListener = addEventCaptureListener(\n        targetContainer,\n        domEventName,\n        listener,\n      );\n    }\n  } else {\n    if (isPassiveListener !== undefined) {\n      unsubscribeListener = addEventBubbleListenerWithPassiveFlag(\n        targetContainer,\n        domEventName,\n        listener,\n        isPassiveListener,\n      );\n    } else {\n      unsubscribeListener = addEventBubbleListener(\n        targetContainer,\n        domEventName,\n        listener,\n      );\n    }\n  }\n}\n\nfunction deferClickToDocumentForLegacyFBSupport(\n  domEventName: DOMEventName,\n  targetContainer: EventTarget,\n): void {\n  // We defer all click events with legacy FB support mode on.\n  // This means we add a one time event listener to trigger\n  // after the FB delegated listeners fire.\n  const isDeferredListenerForLegacyFBSupport = true;\n  addTrappedEventListener(\n    targetContainer,\n    domEventName,\n    IS_LEGACY_FB_SUPPORT_MODE,\n    false,\n    isDeferredListenerForLegacyFBSupport,\n  );\n}\n\nfunction isMatchingRootContainer(\n  grandContainer: Element,\n  targetContainer: EventTarget,\n): boolean {\n  return (\n    grandContainer === targetContainer ||\n    (grandContainer.nodeType === COMMENT_NODE &&\n      grandContainer.parentNode === targetContainer)\n  );\n}\n\nexport function dispatchEventForPluginEventSystem(\n  domEventName: DOMEventName,\n  eventSystemFlags: EventSystemFlags,\n  nativeEvent: AnyNativeEvent,\n  targetInst: null | Fiber,\n  targetContainer: EventTarget,\n): void {\n  let ancestorInst = targetInst;\n  if (\n    (eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 &&\n    (eventSystemFlags & IS_NON_DELEGATED) === 0\n  ) {\n    const targetContainerNode = ((targetContainer: any): Node);\n\n    // If we are using the legacy FB support flag, we\n    // defer the event to the null with a one\n    // time event listener so we can defer the event.\n    if (\n      enableLegacyFBSupport &&\n      // If our event flags match the required flags for entering\n      // FB legacy mode and we are processing the \"click\" event,\n      // then we can defer the event to the \"document\", to allow\n      // for legacy FB support, where the expected behavior was to\n      // match React < 16 behavior of delegated clicks to the doc.\n      domEventName === 'click' &&\n      (eventSystemFlags & SHOULD_NOT_DEFER_CLICK_FOR_FB_SUPPORT_MODE) === 0 &&\n      !isReplayingEvent(nativeEvent)\n    ) {\n      deferClickToDocumentForLegacyFBSupport(domEventName, targetContainer);\n      return;\n    }\n    if (targetInst !== null) {\n      // The below logic attempts to work out if we need to change\n      // the target fiber to a different ancestor. We had similar logic\n      // in the legacy event system, except the big difference between\n      // systems is that the modern event system now has an event listener\n      // attached to each React Root and React Portal Root. Together,\n      // the DOM nodes representing these roots are the \"rootContainer\".\n      // To figure out which ancestor instance we should use, we traverse\n      // up the fiber tree from the target instance and attempt to find\n      // root boundaries that match that of our current \"rootContainer\".\n      // If we find that \"rootContainer\", we find the parent fiber\n      // sub-tree for that root and make that our ancestor instance.\n      let node = targetInst;\n\n      mainLoop: while (true) {\n        if (node === null) {\n          return;\n        }\n        const nodeTag = node.tag;\n        if (nodeTag === HostRoot || nodeTag === HostPortal) {\n          let container = node.stateNode.containerInfo;\n          if (isMatchingRootContainer(container, targetContainerNode)) {\n            break;\n          }\n          if (nodeTag === HostPortal) {\n            // The target is a portal, but it's not the rootContainer we're looking for.\n            // Normally portals handle their own events all the way down to the root.\n            // So we should be able to stop now. However, we don't know if this portal\n            // was part of *our* root.\n            let grandNode = node.return;\n            while (grandNode !== null) {\n              const grandTag = grandNode.tag;\n              if (grandTag === HostRoot || grandTag === HostPortal) {\n                const grandContainer = grandNode.stateNode.containerInfo;\n                if (\n                  isMatchingRootContainer(grandContainer, targetContainerNode)\n                ) {\n                  // This is the rootContainer we're looking for and we found it as\n                  // a parent of the Portal. That means we can ignore it because the\n                  // Portal will bubble through to us.\n                  return;\n                }\n              }\n              grandNode = grandNode.return;\n            }\n          }\n          // Now we need to find it's corresponding host fiber in the other\n          // tree. To do this we can use getClosestInstanceFromNode, but we\n          // need to validate that the fiber is a host instance, otherwise\n          // we need to traverse up through the DOM till we find the correct\n          // node that is from the other tree.\n          while (container !== null) {\n            const parentNode = getClosestInstanceFromNode(container);\n            if (parentNode === null) {\n              return;\n            }\n            const parentTag = parentNode.tag;\n            if (parentTag === HostComponent || parentTag === HostText) {\n              node = ancestorInst = parentNode;\n              continue mainLoop;\n            }\n            container = container.parentNode;\n          }\n        }\n        node = node.return;\n      }\n    }\n  }\n\n  batchedUpdates(() =>\n    dispatchEventsForPlugins(\n      domEventName,\n      eventSystemFlags,\n      nativeEvent,\n      ancestorInst,\n      targetContainer,\n    ),\n  );\n}\n\nfunction createDispatchListener(\n  instance: null | Fiber,\n  listener: Function,\n  currentTarget: EventTarget,\n): DispatchListener {\n  return {\n    instance,\n    listener,\n    currentTarget,\n  };\n}\n\nexport function accumulateSinglePhaseListeners(\n  targetFiber: Fiber | null,\n  reactName: string | null,\n  nativeEventType: string,\n  inCapturePhase: boolean,\n  accumulateTargetOnly: boolean,\n  nativeEvent: AnyNativeEvent,\n): Array<DispatchListener> {\n  const captureName = reactName !== null ? reactName + 'Capture' : null;\n  const reactEventName = inCapturePhase ? captureName : reactName;\n  let listeners: Array<DispatchListener> = [];\n\n  let instance = targetFiber;\n  let lastHostComponent = null;\n\n  // Accumulate all instances and listeners via the target -> root path.\n  while (instance !== null) {\n    const {stateNode, tag} = instance;\n    // Handle listeners that are on HostComponents (i.e. <div>)\n    if (tag === HostComponent && stateNode !== null) {\n      lastHostComponent = stateNode;\n\n      // createEventHandle listeners\n      if (enableCreateEventHandleAPI) {\n        const eventHandlerListeners = getEventHandlerListeners(\n          lastHostComponent,\n        );\n        if (eventHandlerListeners !== null) {\n          eventHandlerListeners.forEach(entry => {\n            if (\n              entry.type === nativeEventType &&\n              entry.capture === inCapturePhase\n            ) {\n              listeners.push(\n                createDispatchListener(\n                  instance,\n                  entry.callback,\n                  (lastHostComponent: any),\n                ),\n              );\n            }\n          });\n        }\n      }\n\n      // Standard React on* listeners, i.e. onClick or onClickCapture\n      if (reactEventName !== null) {\n        const listener = getListener(instance, reactEventName);\n        if (listener != null) {\n          listeners.push(\n            createDispatchListener(instance, listener, lastHostComponent),\n          );\n        }\n      }\n    } else if (\n      enableCreateEventHandleAPI &&\n      enableScopeAPI &&\n      tag === ScopeComponent &&\n      lastHostComponent !== null &&\n      stateNode !== null\n    ) {\n      // Scopes\n      const reactScopeInstance = stateNode;\n      const eventHandlerListeners = getEventHandlerListeners(\n        reactScopeInstance,\n      );\n      if (eventHandlerListeners !== null) {\n        eventHandlerListeners.forEach(entry => {\n          if (\n            entry.type === nativeEventType &&\n            entry.capture === inCapturePhase\n          ) {\n            listeners.push(\n              createDispatchListener(\n                instance,\n                entry.callback,\n                (lastHostComponent: any),\n              ),\n            );\n          }\n        });\n      }\n    }\n    // If we are only accumulating events for the target, then we don't\n    // continue to propagate through the React fiber tree to find other\n    // listeners.\n    if (accumulateTargetOnly) {\n      break;\n    }\n    // If we are processing the onBeforeBlur event, then we need to take\n    // into consideration that part of the React tree might have been hidden\n    // or deleted (as we're invoking this event during commit). We can find\n    // this out by checking if intercept fiber set on the event matches the\n    // current instance fiber. In which case, we should clear all existing\n    // listeners.\n    if (enableCreateEventHandleAPI && nativeEvent.type === 'beforeblur') {\n      // $FlowFixMe: internal field\n      const detachedInterceptFiber = nativeEvent._detachedInterceptFiber;\n      if (\n        detachedInterceptFiber !== null &&\n        (detachedInterceptFiber === instance ||\n          detachedInterceptFiber === instance.alternate)\n      ) {\n        listeners = [];\n      }\n    }\n    instance = instance.return;\n  }\n  return listeners;\n}\n\n// We should only use this function for:\n// - BeforeInputEventPlugin\n// - ChangeEventPlugin\n// - SelectEventPlugin\n// This is because we only process these plugins\n// in the bubble phase, so we need to accumulate two\n// phase event listeners (via emulation).\nexport function accumulateTwoPhaseListeners(\n  targetFiber: Fiber | null,\n  reactName: string,\n): Array<DispatchListener> {\n  const captureName = reactName + 'Capture';\n  const listeners: Array<DispatchListener> = [];\n  let instance = targetFiber;\n\n  // Accumulate all instances and listeners via the target -> root path.\n  while (instance !== null) {\n    const {stateNode, tag} = instance;\n    // Handle listeners that are on HostComponents (i.e. <div>)\n    if (tag === HostComponent && stateNode !== null) {\n      const currentTarget = stateNode;\n      const captureListener = getListener(instance, captureName);\n      if (captureListener != null) {\n        listeners.unshift(\n          createDispatchListener(instance, captureListener, currentTarget),\n        );\n      }\n      const bubbleListener = getListener(instance, reactName);\n      if (bubbleListener != null) {\n        listeners.push(\n          createDispatchListener(instance, bubbleListener, currentTarget),\n        );\n      }\n    }\n    instance = instance.return;\n  }\n  return listeners;\n}\n\nfunction getParent(inst: Fiber | null): Fiber | null {\n  if (inst === null) {\n    return null;\n  }\n  do {\n    inst = inst.return;\n    // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n  if (inst) {\n    return inst;\n  }\n  return null;\n}\n\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\nfunction getLowestCommonAncestor(instA: Fiber, instB: Fiber): Fiber | null {\n  let nodeA = instA;\n  let nodeB = instB;\n  let depthA = 0;\n  for (let tempA = nodeA; tempA; tempA = getParent(tempA)) {\n    depthA++;\n  }\n  let depthB = 0;\n  for (let tempB = nodeB; tempB; tempB = getParent(tempB)) {\n    depthB++;\n  }\n\n  // If A is deeper, crawl up.\n  while (depthA - depthB > 0) {\n    nodeA = getParent(nodeA);\n    depthA--;\n  }\n\n  // If B is deeper, crawl up.\n  while (depthB - depthA > 0) {\n    nodeB = getParent(nodeB);\n    depthB--;\n  }\n\n  // Walk in lockstep until we find a match.\n  let depth = depthA;\n  while (depth--) {\n    if (nodeA === nodeB || (nodeB !== null && nodeA === nodeB.alternate)) {\n      return nodeA;\n    }\n    nodeA = getParent(nodeA);\n    nodeB = getParent(nodeB);\n  }\n  return null;\n}\n\nfunction accumulateEnterLeaveListenersForEvent(\n  dispatchQueue: DispatchQueue,\n  event: KnownReactSyntheticEvent,\n  target: Fiber,\n  common: Fiber | null,\n  inCapturePhase: boolean,\n): void {\n  const registrationName = event._reactName;\n  const listeners: Array<DispatchListener> = [];\n\n  let instance = target;\n  while (instance !== null) {\n    if (instance === common) {\n      break;\n    }\n    const {alternate, stateNode, tag} = instance;\n    if (alternate !== null && alternate === common) {\n      break;\n    }\n    if (tag === HostComponent && stateNode !== null) {\n      const currentTarget = stateNode;\n      if (inCapturePhase) {\n        const captureListener = getListener(instance, registrationName);\n        if (captureListener != null) {\n          listeners.unshift(\n            createDispatchListener(instance, captureListener, currentTarget),\n          );\n        }\n      } else if (!inCapturePhase) {\n        const bubbleListener = getListener(instance, registrationName);\n        if (bubbleListener != null) {\n          listeners.push(\n            createDispatchListener(instance, bubbleListener, currentTarget),\n          );\n        }\n      }\n    }\n    instance = instance.return;\n  }\n  if (listeners.length !== 0) {\n    dispatchQueue.push({event, listeners});\n  }\n}\n\n// We should only use this function for:\n// - EnterLeaveEventPlugin\n// This is because we only process this plugin\n// in the bubble phase, so we need to accumulate two\n// phase event listeners.\nexport function accumulateEnterLeaveTwoPhaseListeners(\n  dispatchQueue: DispatchQueue,\n  leaveEvent: KnownReactSyntheticEvent,\n  enterEvent: null | KnownReactSyntheticEvent,\n  from: Fiber | null,\n  to: Fiber | null,\n): void {\n  const common = from && to ? getLowestCommonAncestor(from, to) : null;\n\n  if (from !== null) {\n    accumulateEnterLeaveListenersForEvent(\n      dispatchQueue,\n      leaveEvent,\n      from,\n      common,\n      false,\n    );\n  }\n  if (to !== null && enterEvent !== null) {\n    accumulateEnterLeaveListenersForEvent(\n      dispatchQueue,\n      enterEvent,\n      to,\n      common,\n      true,\n    );\n  }\n}\n\nexport function accumulateEventHandleNonManagedNodeListeners(\n  reactEventType: DOMEventName,\n  currentTarget: EventTarget,\n  inCapturePhase: boolean,\n): Array<DispatchListener> {\n  const listeners: Array<DispatchListener> = [];\n\n  const eventListeners = getEventHandlerListeners(currentTarget);\n  if (eventListeners !== null) {\n    eventListeners.forEach(entry => {\n      if (entry.type === reactEventType && entry.capture === inCapturePhase) {\n        listeners.push(\n          createDispatchListener(null, entry.callback, currentTarget),\n        );\n      }\n    });\n  }\n  return listeners;\n}\n\nexport function getListenerSetKey(\n  domEventName: DOMEventName,\n  capture: boolean,\n): string {\n  return `${domEventName}__${capture ? 'capture' : 'bubble'}`;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  registrationNameDependencies,\n  possibleRegistrationNames,\n} from '../events/EventRegistry';\n\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\nimport hasOwnProperty from 'shared/hasOwnProperty';\nimport {checkHtmlStringCoercion} from 'shared/CheckStringCoercion';\n\nimport {\n  getValueForAttribute,\n  getValueForProperty,\n  setValueForProperty,\n} from './DOMPropertyOperations';\nimport {\n  initWrapperState as ReactDOMInputInitWrapperState,\n  getHostProps as ReactDOMInputGetHostProps,\n  postMountWrapper as ReactDOMInputPostMountWrapper,\n  updateChecked as ReactDOMInputUpdateChecked,\n  updateWrapper as ReactDOMInputUpdateWrapper,\n  restoreControlledState as ReactDOMInputRestoreControlledState,\n} from './ReactDOMInput';\nimport {\n  postMountWrapper as ReactDOMOptionPostMountWrapper,\n  validateProps as ReactDOMOptionValidateProps,\n} from './ReactDOMOption';\nimport {\n  initWrapperState as ReactDOMSelectInitWrapperState,\n  getHostProps as ReactDOMSelectGetHostProps,\n  postMountWrapper as ReactDOMSelectPostMountWrapper,\n  restoreControlledState as ReactDOMSelectRestoreControlledState,\n  postUpdateWrapper as ReactDOMSelectPostUpdateWrapper,\n} from './ReactDOMSelect';\nimport {\n  initWrapperState as ReactDOMTextareaInitWrapperState,\n  getHostProps as ReactDOMTextareaGetHostProps,\n  postMountWrapper as ReactDOMTextareaPostMountWrapper,\n  updateWrapper as ReactDOMTextareaUpdateWrapper,\n  restoreControlledState as ReactDOMTextareaRestoreControlledState,\n} from './ReactDOMTextarea';\nimport {track} from './inputValueTracking';\nimport setInnerHTML from './setInnerHTML';\nimport setTextContent from './setTextContent';\nimport {\n  createDangerousStringForStyles,\n  setValueForStyles,\n  validateShorthandPropertyCollisionInDev,\n} from './CSSPropertyOperations';\nimport {HTML_NAMESPACE, getIntrinsicNamespace} from '../shared/DOMNamespaces';\nimport {\n  getPropertyInfo,\n  shouldIgnoreAttribute,\n  shouldRemoveAttribute,\n} from '../shared/DOMProperty';\nimport assertValidProps from '../shared/assertValidProps';\nimport {DOCUMENT_NODE} from '../shared/HTMLNodeType';\nimport isCustomComponent from '../shared/isCustomComponent';\nimport possibleStandardNames from '../shared/possibleStandardNames';\nimport {validateProperties as validateARIAProperties} from '../shared/ReactDOMInvalidARIAHook';\nimport {validateProperties as validateInputProperties} from '../shared/ReactDOMNullInputValuePropHook';\nimport {validateProperties as validateUnknownProperties} from '../shared/ReactDOMUnknownPropertyHook';\n\nimport {\n  enableTrustedTypesIntegration,\n  enableCustomElementPropertySupport,\n  enableClientRenderFallbackOnTextMismatch,\n} from 'shared/ReactFeatureFlags';\nimport {\n  mediaEventTypes,\n  listenToNonDelegatedEvent,\n} from '../events/DOMPluginEventSystem';\n\nlet didWarnInvalidHydration = false;\nlet didWarnScriptTags = false;\n\nconst DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';\nconst SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';\nconst SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';\nconst AUTOFOCUS = 'autoFocus';\nconst CHILDREN = 'children';\nconst STYLE = 'style';\nconst HTML = '__html';\n\nlet warnedUnknownTags;\n\nlet validatePropertiesInDevelopment;\nlet warnForPropDifference;\nlet warnForExtraAttributes;\nlet warnForInvalidEventListener;\nlet canDiffStyleForHydrationWarning;\n\nlet normalizeHTML;\n\nif (__DEV__) {\n  warnedUnknownTags = {\n    // There are working polyfills for <dialog>. Let people use it.\n    dialog: true,\n    // Electron ships a custom <webview> tag to display external web content in\n    // an isolated frame and process.\n    // This tag is not present in non Electron environments such as JSDom which\n    // is often used for testing purposes.\n    // @see https://electronjs.org/docs/api/webview-tag\n    webview: true,\n  };\n\n  validatePropertiesInDevelopment = function(type, props) {\n    validateARIAProperties(type, props);\n    validateInputProperties(type, props);\n    validateUnknownProperties(type, props, {\n      registrationNameDependencies,\n      possibleRegistrationNames,\n    });\n  };\n\n  // IE 11 parses & normalizes the style attribute as opposed to other\n  // browsers. It adds spaces and sorts the properties in some\n  // non-alphabetical order. Handling that would require sorting CSS\n  // properties in the client & server versions or applying\n  // `expectedStyle` to a temporary DOM node to read its `style` attribute\n  // normalized. Since it only affects IE, we're skipping style warnings\n  // in that browser completely in favor of doing all that work.\n  // See https://github.com/facebook/react/issues/11807\n  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;\n\n  warnForPropDifference = function(\n    propName: string,\n    serverValue: mixed,\n    clientValue: mixed,\n  ) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    const normalizedClientValue = normalizeMarkupForTextOrAttribute(\n      clientValue,\n    );\n    const normalizedServerValue = normalizeMarkupForTextOrAttribute(\n      serverValue,\n    );\n    if (normalizedServerValue === normalizedClientValue) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Prop `%s` did not match. Server: %s Client: %s',\n      propName,\n      JSON.stringify(normalizedServerValue),\n      JSON.stringify(normalizedClientValue),\n    );\n  };\n\n  warnForExtraAttributes = function(attributeNames: Set<string>) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    const names = [];\n    attributeNames.forEach(function(name) {\n      names.push(name);\n    });\n    console.error('Extra attributes from the server: %s', names);\n  };\n\n  warnForInvalidEventListener = function(registrationName, listener) {\n    if (listener === false) {\n      console.error(\n        'Expected `%s` listener to be a function, instead got `false`.\\n\\n' +\n          'If you used to conditionally omit it with %s={condition && value}, ' +\n          'pass %s={condition ? value : undefined} instead.',\n        registrationName,\n        registrationName,\n        registrationName,\n      );\n    } else {\n      console.error(\n        'Expected `%s` listener to be a function, instead got a value of `%s` type.',\n        registrationName,\n        typeof listener,\n      );\n    }\n  };\n\n  // Parse the HTML and read it back to normalize the HTML string so that it\n  // can be used for comparison.\n  normalizeHTML = function(parent: Element, html: string) {\n    // We could have created a separate document here to avoid\n    // re-initializing custom elements if they exist. But this breaks\n    // how <noscript> is being handled. So we use the same document.\n    // See the discussion in https://github.com/facebook/react/pull/11157.\n    const testElement =\n      parent.namespaceURI === HTML_NAMESPACE\n        ? parent.ownerDocument.createElement(parent.tagName)\n        : parent.ownerDocument.createElementNS(\n            (parent.namespaceURI: any),\n            parent.tagName,\n          );\n    testElement.innerHTML = html;\n    return testElement.innerHTML;\n  };\n}\n\n// HTML parsing normalizes CR and CRLF to LF.\n// It also can turn \\u0000 into \\uFFFD inside attributes.\n// https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream\n// If we have a mismatch, it might be caused by that.\n// We will still patch up in this case but not fire the warning.\nconst NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g;\nconst NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\n\nfunction normalizeMarkupForTextOrAttribute(markup: mixed): string {\n  if (__DEV__) {\n    checkHtmlStringCoercion(markup);\n  }\n  const markupString = typeof markup === 'string' ? markup : '' + (markup: any);\n  return markupString\n    .replace(NORMALIZE_NEWLINES_REGEX, '\\n')\n    .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');\n}\n\nexport function checkForUnmatchedText(\n  serverText: string,\n  clientText: string | number,\n  isConcurrentMode: boolean,\n  shouldWarnDev: boolean,\n) {\n  const normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);\n  const normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);\n  if (normalizedServerText === normalizedClientText) {\n    return;\n  }\n\n  if (shouldWarnDev) {\n    if (__DEV__) {\n      if (!didWarnInvalidHydration) {\n        didWarnInvalidHydration = true;\n        console.error(\n          'Text content did not match. Server: \"%s\" Client: \"%s\"',\n          normalizedServerText,\n          normalizedClientText,\n        );\n      }\n    }\n  }\n\n  if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) {\n    // In concurrent roots, we throw when there's a text mismatch and revert to\n    // client rendering, up to the nearest Suspense boundary.\n    throw new Error('Text content does not match server-rendered HTML.');\n  }\n}\n\nfunction getOwnerDocumentFromRootContainer(\n  rootContainerElement: Element | Document | DocumentFragment,\n): Document {\n  return rootContainerElement.nodeType === DOCUMENT_NODE\n    ? (rootContainerElement: any)\n    : rootContainerElement.ownerDocument;\n}\n\nfunction noop() {}\n\nexport function trapClickOnNonInteractiveElement(node: HTMLElement) {\n  // Mobile Safari does not fire properly bubble click events on\n  // non-interactive elements, which means delegated click listeners do not\n  // fire. The workaround for this bug involves attaching an empty click\n  // listener on the target node.\n  // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n  // Just set it using the onclick property so that we don't have to manage any\n  // bookkeeping for it. Not sure if we need to clear it when the listener is\n  // removed.\n  // TODO: Only do this for the relevant Safaris maybe?\n  node.onclick = noop;\n}\n\nfunction setInitialDOMProperties(\n  tag: string,\n  domElement: Element,\n  rootContainerElement: Element | Document | DocumentFragment,\n  nextProps: Object,\n  isCustomComponentTag: boolean,\n): void {\n  for (const propKey in nextProps) {\n    if (!nextProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n    const nextProp = nextProps[propKey];\n    if (propKey === STYLE) {\n      if (__DEV__) {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      }\n      // Relies on `updateStylesByID` not mutating `styleUpdates`.\n      setValueForStyles(domElement, nextProp);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\n      if (nextHtml != null) {\n        setInnerHTML(domElement, nextHtml);\n      }\n    } else if (propKey === CHILDREN) {\n      if (typeof nextProp === 'string') {\n        // Avoid setting initial textContent when the text is empty. In IE11 setting\n        // textContent on a <textarea> will cause the placeholder to not\n        // show within the <textarea> until it has been focused and blurred again.\n        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n        const canSetTextContent = tag !== 'textarea' || nextProp !== '';\n        if (canSetTextContent) {\n          setTextContent(domElement, nextProp);\n        }\n      } else if (typeof nextProp === 'number') {\n        setTextContent(domElement, '' + nextProp);\n      }\n    } else if (\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n      propKey === SUPPRESS_HYDRATION_WARNING\n    ) {\n      // Noop\n    } else if (propKey === AUTOFOCUS) {\n      // We polyfill it separately on the client during commit.\n      // We could have excluded it in the property list instead of\n      // adding a special case here, but then it wouldn't be emitted\n      // on server rendering (but we *do* want to emit it in SSR).\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n    } else if (nextProp != null) {\n      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);\n    }\n  }\n}\n\nfunction updateDOMProperties(\n  domElement: Element,\n  updatePayload: Array<any>,\n  wasCustomComponentTag: boolean,\n  isCustomComponentTag: boolean,\n): void {\n  // TODO: Handle wasCustomComponentTag\n  for (let i = 0; i < updatePayload.length; i += 2) {\n    const propKey = updatePayload[i];\n    const propValue = updatePayload[i + 1];\n    if (propKey === STYLE) {\n      setValueForStyles(domElement, propValue);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      setInnerHTML(domElement, propValue);\n    } else if (propKey === CHILDREN) {\n      setTextContent(domElement, propValue);\n    } else {\n      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);\n    }\n  }\n}\n\nexport function createElement(\n  type: string,\n  props: Object,\n  rootContainerElement: Element | Document | DocumentFragment,\n  parentNamespace: string,\n): Element {\n  let isCustomComponentTag;\n\n  // We create tags in the namespace of their parent container, except HTML\n  // tags get no namespace.\n  const ownerDocument: Document = getOwnerDocumentFromRootContainer(\n    rootContainerElement,\n  );\n  let domElement: Element;\n  let namespaceURI = parentNamespace;\n  if (namespaceURI === HTML_NAMESPACE) {\n    namespaceURI = getIntrinsicNamespace(type);\n  }\n  if (namespaceURI === HTML_NAMESPACE) {\n    if (__DEV__) {\n      isCustomComponentTag = isCustomComponent(type, props);\n      // Should this check be gated by parent namespace? Not sure we want to\n      // allow <SVG> or <mATH>.\n      if (!isCustomComponentTag && type !== type.toLowerCase()) {\n        console.error(\n          '<%s /> is using incorrect casing. ' +\n            'Use PascalCase for React components, ' +\n            'or lowercase for HTML elements.',\n          type,\n        );\n      }\n    }\n\n    if (type === 'script') {\n      // Create the script via .innerHTML so its \"parser-inserted\" flag is\n      // set to true and it does not execute\n      const div = ownerDocument.createElement('div');\n      if (__DEV__) {\n        if (enableTrustedTypesIntegration && !didWarnScriptTags) {\n          console.error(\n            'Encountered a script tag while rendering React component. ' +\n              'Scripts inside React components are never executed when rendering ' +\n              'on the client. Consider using template tag instead ' +\n              '(https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template).',\n          );\n          didWarnScriptTags = true;\n        }\n      }\n      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line\n      // This is guaranteed to yield a script element.\n      const firstChild = ((div.firstChild: any): HTMLScriptElement);\n      domElement = div.removeChild(firstChild);\n    } else if (typeof props.is === 'string') {\n      // $FlowIssue `createElement` should be updated for Web Components\n      domElement = ownerDocument.createElement(type, {is: props.is});\n    } else {\n      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.\n      // See discussion in https://github.com/facebook/react/pull/6896\n      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n      domElement = ownerDocument.createElement(type);\n      // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`\n      // attributes on `select`s needs to be added before `option`s are inserted.\n      // This prevents:\n      // - a bug where the `select` does not scroll to the correct option because singular\n      //  `select` elements automatically pick the first item #13222\n      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239\n      // See https://github.com/facebook/react/issues/13222\n      // and https://github.com/facebook/react/issues/14239\n      if (type === 'select') {\n        const node = ((domElement: any): HTMLSelectElement);\n        if (props.multiple) {\n          node.multiple = true;\n        } else if (props.size) {\n          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where\n          // it is possible that no option is selected.\n          //\n          // This is only necessary when a select in \"single selection mode\".\n          node.size = props.size;\n        }\n      }\n    }\n  } else {\n    domElement = ownerDocument.createElementNS(namespaceURI, type);\n  }\n\n  if (__DEV__) {\n    if (namespaceURI === HTML_NAMESPACE) {\n      if (\n        !isCustomComponentTag &&\n        Object.prototype.toString.call(domElement) ===\n          '[object HTMLUnknownElement]' &&\n        !hasOwnProperty.call(warnedUnknownTags, type)\n      ) {\n        warnedUnknownTags[type] = true;\n        console.error(\n          'The tag <%s> is unrecognized in this browser. ' +\n            'If you meant to render a React component, start its name with ' +\n            'an uppercase letter.',\n          type,\n        );\n      }\n    }\n  }\n\n  return domElement;\n}\n\nexport function createTextNode(\n  text: string,\n  rootContainerElement: Element | Document | DocumentFragment,\n): Text {\n  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(\n    text,\n  );\n}\n\nexport function setInitialProperties(\n  domElement: Element,\n  tag: string,\n  rawProps: Object,\n  rootContainerElement: Element | Document | DocumentFragment,\n): void {\n  const isCustomComponentTag = isCustomComponent(tag, rawProps);\n  if (__DEV__) {\n    validatePropertiesInDevelopment(tag, rawProps);\n  }\n\n  // TODO: Make sure that we check isMounted before firing any of these events.\n  let props: Object;\n  switch (tag) {\n    case 'dialog':\n      listenToNonDelegatedEvent('cancel', domElement);\n      listenToNonDelegatedEvent('close', domElement);\n      props = rawProps;\n      break;\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the load event.\n      listenToNonDelegatedEvent('load', domElement);\n      props = rawProps;\n      break;\n    case 'video':\n    case 'audio':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for all the media events.\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);\n      }\n      props = rawProps;\n      break;\n    case 'source':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the error event.\n      listenToNonDelegatedEvent('error', domElement);\n      props = rawProps;\n      break;\n    case 'img':\n    case 'image':\n    case 'link':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for error and load events.\n      listenToNonDelegatedEvent('error', domElement);\n      listenToNonDelegatedEvent('load', domElement);\n      props = rawProps;\n      break;\n    case 'details':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the toggle event.\n      listenToNonDelegatedEvent('toggle', domElement);\n      props = rawProps;\n      break;\n    case 'input':\n      ReactDOMInputInitWrapperState(domElement, rawProps);\n      props = ReactDOMInputGetHostProps(domElement, rawProps);\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n    case 'option':\n      ReactDOMOptionValidateProps(domElement, rawProps);\n      props = rawProps;\n      break;\n    case 'select':\n      ReactDOMSelectInitWrapperState(domElement, rawProps);\n      props = ReactDOMSelectGetHostProps(domElement, rawProps);\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n    case 'textarea':\n      ReactDOMTextareaInitWrapperState(domElement, rawProps);\n      props = ReactDOMTextareaGetHostProps(domElement, rawProps);\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n    default:\n      props = rawProps;\n  }\n\n  assertValidProps(tag, props);\n\n  setInitialDOMProperties(\n    tag,\n    domElement,\n    rootContainerElement,\n    props,\n    isCustomComponentTag,\n  );\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMInputPostMountWrapper(domElement, rawProps, false);\n      break;\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\n      break;\n    case 'option':\n      ReactDOMOptionPostMountWrapper(domElement, rawProps);\n      break;\n    case 'select':\n      ReactDOMSelectPostMountWrapper(domElement, rawProps);\n      break;\n    default:\n      if (typeof props.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\n      }\n      break;\n  }\n}\n\n// Calculate the diff between the two objects.\nexport function diffProperties(\n  domElement: Element,\n  tag: string,\n  lastRawProps: Object,\n  nextRawProps: Object,\n  rootContainerElement: Element | Document | DocumentFragment,\n): null | Array<mixed> {\n  if (__DEV__) {\n    validatePropertiesInDevelopment(tag, nextRawProps);\n  }\n\n  let updatePayload: null | Array<any> = null;\n\n  let lastProps: Object;\n  let nextProps: Object;\n  switch (tag) {\n    case 'input':\n      lastProps = ReactDOMInputGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMInputGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    case 'select':\n      lastProps = ReactDOMSelectGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMSelectGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    case 'textarea':\n      lastProps = ReactDOMTextareaGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMTextareaGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    default:\n      lastProps = lastRawProps;\n      nextProps = nextRawProps;\n      if (\n        typeof lastProps.onClick !== 'function' &&\n        typeof nextProps.onClick === 'function'\n      ) {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\n      }\n      break;\n  }\n\n  assertValidProps(tag, nextProps);\n\n  let propKey;\n  let styleName;\n  let styleUpdates = null;\n  for (propKey in lastProps) {\n    if (\n      nextProps.hasOwnProperty(propKey) ||\n      !lastProps.hasOwnProperty(propKey) ||\n      lastProps[propKey] == null\n    ) {\n      continue;\n    }\n    if (propKey === STYLE) {\n      const lastStyle = lastProps[propKey];\n      for (styleName in lastStyle) {\n        if (lastStyle.hasOwnProperty(styleName)) {\n          if (!styleUpdates) {\n            styleUpdates = {};\n          }\n          styleUpdates[styleName] = '';\n        }\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {\n      // Noop. This is handled by the clear text mechanism.\n    } else if (\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n      propKey === SUPPRESS_HYDRATION_WARNING\n    ) {\n      // Noop\n    } else if (propKey === AUTOFOCUS) {\n      // Noop. It doesn't work on updates anyway.\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      // This is a special case. If any listener updates we need to ensure\n      // that the \"current\" fiber pointer gets updated so we need a commit\n      // to update this element.\n      if (!updatePayload) {\n        updatePayload = [];\n      }\n    } else {\n      // For all other deleted properties we add it to the queue. We use\n      // the allowed property list in the commit phase instead.\n      (updatePayload = updatePayload || []).push(propKey, null);\n    }\n  }\n  for (propKey in nextProps) {\n    const nextProp = nextProps[propKey];\n    const lastProp = lastProps != null ? lastProps[propKey] : undefined;\n    if (\n      !nextProps.hasOwnProperty(propKey) ||\n      nextProp === lastProp ||\n      (nextProp == null && lastProp == null)\n    ) {\n      continue;\n    }\n    if (propKey === STYLE) {\n      if (__DEV__) {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      }\n      if (lastProp) {\n        // Unset styles on `lastProp` but not on `nextProp`.\n        for (styleName in lastProp) {\n          if (\n            lastProp.hasOwnProperty(styleName) &&\n            (!nextProp || !nextProp.hasOwnProperty(styleName))\n          ) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n            styleUpdates[styleName] = '';\n          }\n        }\n        // Update styles that changed since `lastProp`.\n        for (styleName in nextProp) {\n          if (\n            nextProp.hasOwnProperty(styleName) &&\n            lastProp[styleName] !== nextProp[styleName]\n          ) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n            styleUpdates[styleName] = nextProp[styleName];\n          }\n        }\n      } else {\n        // Relies on `updateStylesByID` not mutating `styleUpdates`.\n        if (!styleUpdates) {\n          if (!updatePayload) {\n            updatePayload = [];\n          }\n          updatePayload.push(propKey, styleUpdates);\n        }\n        styleUpdates = nextProp;\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\n      const lastHtml = lastProp ? lastProp[HTML] : undefined;\n      if (nextHtml != null) {\n        if (lastHtml !== nextHtml) {\n          (updatePayload = updatePayload || []).push(propKey, nextHtml);\n        }\n      } else {\n        // TODO: It might be too late to clear this if we have children\n        // inserted already.\n      }\n    } else if (propKey === CHILDREN) {\n      if (typeof nextProp === 'string' || typeof nextProp === 'number') {\n        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);\n      }\n    } else if (\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n      propKey === SUPPRESS_HYDRATION_WARNING\n    ) {\n      // Noop\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        // We eagerly listen to this even though we haven't committed yet.\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n      if (!updatePayload && lastProp !== nextProp) {\n        // This is a special case. If any listener updates we need to ensure\n        // that the \"current\" props pointer gets updated so we need a commit\n        // to update this element.\n        updatePayload = [];\n      }\n    } else {\n      // For any other property we always add it to the queue and then we\n      // filter it out using the allowed property list during the commit.\n      (updatePayload = updatePayload || []).push(propKey, nextProp);\n    }\n  }\n  if (styleUpdates) {\n    if (__DEV__) {\n      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);\n    }\n    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);\n  }\n  return updatePayload;\n}\n\n// Apply the diff.\nexport function updateProperties(\n  domElement: Element,\n  updatePayload: Array<any>,\n  tag: string,\n  lastRawProps: Object,\n  nextRawProps: Object,\n): void {\n  // Update checked *before* name.\n  // In the middle of an update, it is possible to have multiple checked.\n  // When a checked radio tries to change name, browser makes another radio's checked false.\n  if (\n    tag === 'input' &&\n    nextRawProps.type === 'radio' &&\n    nextRawProps.name != null\n  ) {\n    ReactDOMInputUpdateChecked(domElement, nextRawProps);\n  }\n\n  const wasCustomComponentTag = isCustomComponent(tag, lastRawProps);\n  const isCustomComponentTag = isCustomComponent(tag, nextRawProps);\n  // Apply the diff.\n  updateDOMProperties(\n    domElement,\n    updatePayload,\n    wasCustomComponentTag,\n    isCustomComponentTag,\n  );\n\n  // TODO: Ensure that an update gets scheduled if any of the special props\n  // changed.\n  switch (tag) {\n    case 'input':\n      // Update the wrapper around inputs *after* updating props. This has to\n      // happen after `updateDOMProperties`. Otherwise HTML5 input validations\n      // raise warnings and prevent the new value from being assigned.\n      ReactDOMInputUpdateWrapper(domElement, nextRawProps);\n      break;\n    case 'textarea':\n      ReactDOMTextareaUpdateWrapper(domElement, nextRawProps);\n      break;\n    case 'select':\n      // <select> value update needs to occur after <option> children\n      // reconciliation\n      ReactDOMSelectPostUpdateWrapper(domElement, nextRawProps);\n      break;\n  }\n}\n\nfunction getPossibleStandardName(propName: string): string | null {\n  if (__DEV__) {\n    const lowerCasedName = propName.toLowerCase();\n    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n      return null;\n    }\n    return possibleStandardNames[lowerCasedName] || null;\n  }\n  return null;\n}\n\nexport function diffHydratedProperties(\n  domElement: Element,\n  tag: string,\n  rawProps: Object,\n  parentNamespace: string,\n  rootContainerElement: Element | Document | DocumentFragment,\n  isConcurrentMode: boolean,\n  shouldWarnDev: boolean,\n): null | Array<mixed> {\n  let isCustomComponentTag;\n  let extraAttributeNames: Set<string>;\n\n  if (__DEV__) {\n    isCustomComponentTag = isCustomComponent(tag, rawProps);\n    validatePropertiesInDevelopment(tag, rawProps);\n  }\n\n  // TODO: Make sure that we check isMounted before firing any of these events.\n  switch (tag) {\n    case 'dialog':\n      listenToNonDelegatedEvent('cancel', domElement);\n      listenToNonDelegatedEvent('close', domElement);\n      break;\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the load event.\n      listenToNonDelegatedEvent('load', domElement);\n      break;\n    case 'video':\n    case 'audio':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for all the media events.\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);\n      }\n      break;\n    case 'source':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the error event.\n      listenToNonDelegatedEvent('error', domElement);\n      break;\n    case 'img':\n    case 'image':\n    case 'link':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for error and load events.\n      listenToNonDelegatedEvent('error', domElement);\n      listenToNonDelegatedEvent('load', domElement);\n      break;\n    case 'details':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the toggle event.\n      listenToNonDelegatedEvent('toggle', domElement);\n      break;\n    case 'input':\n      ReactDOMInputInitWrapperState(domElement, rawProps);\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n    case 'option':\n      ReactDOMOptionValidateProps(domElement, rawProps);\n      break;\n    case 'select':\n      ReactDOMSelectInitWrapperState(domElement, rawProps);\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n    case 'textarea':\n      ReactDOMTextareaInitWrapperState(domElement, rawProps);\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n  }\n\n  assertValidProps(tag, rawProps);\n\n  if (__DEV__) {\n    extraAttributeNames = new Set();\n    const attributes = domElement.attributes;\n    for (let i = 0; i < attributes.length; i++) {\n      const name = attributes[i].name.toLowerCase();\n      switch (name) {\n        // Controlled attributes are not validated\n        // TODO: Only ignore them on controlled tags.\n        case 'value':\n          break;\n        case 'checked':\n          break;\n        case 'selected':\n          break;\n        default:\n          // Intentionally use the original name.\n          // See discussion in https://github.com/facebook/react/pull/10676.\n          extraAttributeNames.add(attributes[i].name);\n      }\n    }\n  }\n\n  let updatePayload = null;\n  for (const propKey in rawProps) {\n    if (!rawProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n    const nextProp = rawProps[propKey];\n    if (propKey === CHILDREN) {\n      // For text content children we compare against textContent. This\n      // might match additional HTML that is hidden when we read it using\n      // textContent. E.g. \"foo\" will match \"f<span>oo</span>\" but that still\n      // satisfies our requirement. Our requirement is not to produce perfect\n      // HTML and attributes. Ideally we should preserve structure but it's\n      // ok not to if the visible content is still enough to indicate what\n      // even listeners these nodes might be wired up to.\n      // TODO: Warn if there is more than a single textNode as a child.\n      // TODO: Should we use domElement.firstChild.nodeValue to compare?\n      if (typeof nextProp === 'string') {\n        if (domElement.textContent !== nextProp) {\n          if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n            checkForUnmatchedText(\n              domElement.textContent,\n              nextProp,\n              isConcurrentMode,\n              shouldWarnDev,\n            );\n          }\n          updatePayload = [CHILDREN, nextProp];\n        }\n      } else if (typeof nextProp === 'number') {\n        if (domElement.textContent !== '' + nextProp) {\n          if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n            checkForUnmatchedText(\n              domElement.textContent,\n              nextProp,\n              isConcurrentMode,\n              shouldWarnDev,\n            );\n          }\n          updatePayload = [CHILDREN, '' + nextProp];\n        }\n      }\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n    } else if (\n      shouldWarnDev &&\n      __DEV__ &&\n      // Convince Flow we've calculated it (it's DEV-only in this method.)\n      typeof isCustomComponentTag === 'boolean'\n    ) {\n      // Validate that the properties correspond to their expected values.\n      let serverValue;\n      const propertyInfo =\n        isCustomComponentTag && enableCustomElementPropertySupport\n          ? null\n          : getPropertyInfo(propKey);\n      if (rawProps[SUPPRESS_HYDRATION_WARNING] === true) {\n        // Don't bother comparing. We're ignoring all these warnings.\n      } else if (\n        propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n        propKey === SUPPRESS_HYDRATION_WARNING ||\n        // Controlled attributes are not validated\n        // TODO: Only ignore them on controlled tags.\n        propKey === 'value' ||\n        propKey === 'checked' ||\n        propKey === 'selected'\n      ) {\n        // Noop\n      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n        const serverHTML = domElement.innerHTML;\n        const nextHtml = nextProp ? nextProp[HTML] : undefined;\n        if (nextHtml != null) {\n          const expectedHTML = normalizeHTML(domElement, nextHtml);\n          if (expectedHTML !== serverHTML) {\n            warnForPropDifference(propKey, serverHTML, expectedHTML);\n          }\n        }\n      } else if (propKey === STYLE) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey);\n\n        if (canDiffStyleForHydrationWarning) {\n          const expectedStyle = createDangerousStringForStyles(nextProp);\n          serverValue = domElement.getAttribute('style');\n          if (expectedStyle !== serverValue) {\n            warnForPropDifference(propKey, serverValue, expectedStyle);\n          }\n        }\n      } else if (\n        enableCustomElementPropertySupport &&\n        isCustomComponentTag &&\n        (propKey === 'offsetParent' ||\n          propKey === 'offsetTop' ||\n          propKey === 'offsetLeft' ||\n          propKey === 'offsetWidth' ||\n          propKey === 'offsetHeight' ||\n          propKey === 'isContentEditable' ||\n          propKey === 'outerText' ||\n          propKey === 'outerHTML')\n      ) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey.toLowerCase());\n        if (__DEV__) {\n          console.error(\n            'Assignment to read-only property will result in a no-op: `%s`',\n            propKey,\n          );\n        }\n      } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey.toLowerCase());\n        serverValue = getValueForAttribute(\n          domElement,\n          propKey,\n          nextProp,\n          isCustomComponentTag,\n        );\n\n        if (nextProp !== serverValue) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      } else if (\n        !shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) &&\n        !shouldRemoveAttribute(\n          propKey,\n          nextProp,\n          propertyInfo,\n          isCustomComponentTag,\n        )\n      ) {\n        let isMismatchDueToBadCasing = false;\n        if (propertyInfo !== null) {\n          // $FlowFixMe - Should be inferred as not undefined.\n          extraAttributeNames.delete(propertyInfo.attributeName);\n          serverValue = getValueForProperty(\n            domElement,\n            propKey,\n            nextProp,\n            propertyInfo,\n          );\n        } else {\n          let ownNamespace = parentNamespace;\n          if (ownNamespace === HTML_NAMESPACE) {\n            ownNamespace = getIntrinsicNamespace(tag);\n          }\n          if (ownNamespace === HTML_NAMESPACE) {\n            // $FlowFixMe - Should be inferred as not undefined.\n            extraAttributeNames.delete(propKey.toLowerCase());\n          } else {\n            const standardName = getPossibleStandardName(propKey);\n            if (standardName !== null && standardName !== propKey) {\n              // If an SVG prop is supplied with bad casing, it will\n              // be successfully parsed from HTML, but will produce a mismatch\n              // (and would be incorrectly rendered on the client).\n              // However, we already warn about bad casing elsewhere.\n              // So we'll skip the misleading extra mismatch warning in this case.\n              isMismatchDueToBadCasing = true;\n              // $FlowFixMe - Should be inferred as not undefined.\n              extraAttributeNames.delete(standardName);\n            }\n            // $FlowFixMe - Should be inferred as not undefined.\n            extraAttributeNames.delete(propKey);\n          }\n          serverValue = getValueForAttribute(\n            domElement,\n            propKey,\n            nextProp,\n            isCustomComponentTag,\n          );\n        }\n\n        const dontWarnCustomElement =\n          enableCustomElementPropertySupport &&\n          isCustomComponentTag &&\n          (typeof nextProp === 'function' || typeof nextProp === 'object');\n        if (\n          !dontWarnCustomElement &&\n          nextProp !== serverValue &&\n          !isMismatchDueToBadCasing\n        ) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      }\n    }\n  }\n\n  if (__DEV__) {\n    if (shouldWarnDev) {\n      if (\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.size > 0 &&\n        rawProps[SUPPRESS_HYDRATION_WARNING] !== true\n      ) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        warnForExtraAttributes(extraAttributeNames);\n      }\n    }\n  }\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMInputPostMountWrapper(domElement, rawProps, true);\n      break;\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\n      break;\n    case 'select':\n    case 'option':\n      // For input and textarea we current always set the value property at\n      // post mount to force it to diverge from attributes. However, for\n      // option and select we don't quite do the same thing and select\n      // is not resilient to the DOM state changing so we don't do that here.\n      // TODO: Consider not doing this for input and textarea.\n      break;\n    default:\n      if (typeof rawProps.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\n      }\n      break;\n  }\n\n  return updatePayload;\n}\n\nexport function diffHydratedText(\n  textNode: Text,\n  text: string,\n  isConcurrentMode: boolean,\n): boolean {\n  const isDifferent = textNode.nodeValue !== text;\n  return isDifferent;\n}\n\nexport function warnForDeletedHydratableElement(\n  parentNode: Element | Document | DocumentFragment,\n  child: Element,\n) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Did not expect server HTML to contain a <%s> in <%s>.',\n      child.nodeName.toLowerCase(),\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function warnForDeletedHydratableText(\n  parentNode: Element | Document | DocumentFragment,\n  child: Text,\n) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Did not expect server HTML to contain the text node \"%s\" in <%s>.',\n      child.nodeValue,\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function warnForInsertedHydratedElement(\n  parentNode: Element | Document | DocumentFragment,\n  tag: string,\n  props: Object,\n) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Expected server HTML to contain a matching <%s> in <%s>.',\n      tag,\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function warnForInsertedHydratedText(\n  parentNode: Element | Document | DocumentFragment,\n  text: string,\n) {\n  if (__DEV__) {\n    if (text === '') {\n      // We expect to insert empty text nodes since they're not represented in\n      // the HTML.\n      // TODO: Remove this special case if we can just avoid inserting empty\n      // text nodes.\n      return;\n    }\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Expected server HTML to contain a matching text node for \"%s\" in <%s>.',\n      text,\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function restoreControlledState(\n  domElement: Element,\n  tag: string,\n  props: Object,\n): void {\n  switch (tag) {\n    case 'input':\n      ReactDOMInputRestoreControlledState(domElement, props);\n      return;\n    case 'textarea':\n      ReactDOMTextareaRestoreControlledState(domElement, props);\n      return;\n    case 'select':\n      ReactDOMSelectRestoreControlledState(domElement, props);\n      return;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {DOMEventName} from '../events/DOMEventNames';\nimport type {Fiber, FiberRoot} from 'react-reconciler/src/ReactInternalTypes';\nimport type {\n  BoundingRect,\n  IntersectionObserverOptions,\n  ObserveVisibleRectsCallback,\n} from 'react-reconciler/src/ReactTestSelectors';\nimport type {ReactScopeInstance} from 'shared/ReactTypes';\n\nimport {\n  precacheFiberNode,\n  updateFiberProps,\n  getClosestInstanceFromNode,\n  getFiberFromScopeInstance,\n  getInstanceFromNode as getInstanceFromNodeDOMTree,\n  isContainerMarkedAsRoot,\n} from './ReactDOMComponentTree';\nexport {detachDeletedInstance} from './ReactDOMComponentTree';\nimport {hasRole} from './DOMAccessibilityRoles';\nimport {\n  createElement,\n  createTextNode,\n  setInitialProperties,\n  diffProperties,\n  updateProperties,\n  diffHydratedProperties,\n  diffHydratedText,\n  trapClickOnNonInteractiveElement,\n  checkForUnmatchedText,\n  warnForDeletedHydratableElement,\n  warnForDeletedHydratableText,\n  warnForInsertedHydratedElement,\n  warnForInsertedHydratedText,\n} from './ReactDOMComponent';\nimport {getSelectionInformation, restoreSelection} from './ReactInputSelection';\nimport setTextContent from './setTextContent';\nimport {validateDOMNesting, updatedAncestorInfo} from './validateDOMNesting';\nimport {\n  isEnabled as ReactBrowserEventEmitterIsEnabled,\n  setEnabled as ReactBrowserEventEmitterSetEnabled,\n  getEventPriority,\n} from '../events/ReactDOMEventListener';\nimport {getChildNamespace} from '../shared/DOMNamespaces';\nimport {\n  ELEMENT_NODE,\n  TEXT_NODE,\n  COMMENT_NODE,\n  DOCUMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n} from '../shared/HTMLNodeType';\nimport dangerousStyleValue from '../shared/dangerousStyleValue';\n\nimport {retryIfBlockedOn} from '../events/ReactDOMEventReplaying';\n\nimport {\n  enableCreateEventHandleAPI,\n  enableScopeAPI,\n} from 'shared/ReactFeatureFlags';\nimport {HostComponent, HostText} from 'react-reconciler/src/ReactWorkTags';\nimport {listenToAllSupportedEvents} from '../events/DOMPluginEventSystem';\n\nimport {DefaultEventPriority} from 'react-reconciler/src/ReactEventPriorities';\n\n// TODO: Remove this deep import when we delete the legacy root API\nimport {ConcurrentMode, NoMode} from 'react-reconciler/src/ReactTypeOfMode';\n\nexport type Type = string;\nexport type Props = {\n  autoFocus?: boolean,\n  children?: mixed,\n  disabled?: boolean,\n  hidden?: boolean,\n  suppressHydrationWarning?: boolean,\n  dangerouslySetInnerHTML?: mixed,\n  style?: {display?: string, ...},\n  bottom?: null | number,\n  left?: null | number,\n  right?: null | number,\n  top?: null | number,\n  ...\n};\nexport type EventTargetChildElement = {\n  type: string,\n  props: null | {\n    style?: {\n      position?: string,\n      zIndex?: number,\n      bottom?: string,\n      left?: string,\n      right?: string,\n      top?: string,\n      ...\n    },\n    ...\n  },\n  ...\n};\nexport type Container =\n  | (Element & {_reactRootContainer?: FiberRoot, ...})\n  | (Document & {_reactRootContainer?: FiberRoot, ...})\n  | (DocumentFragment & {_reactRootContainer?: FiberRoot, ...});\nexport type Instance = Element;\nexport type TextInstance = Text;\nexport type SuspenseInstance = Comment & {_reactRetry?: () => void, ...};\nexport type HydratableInstance = Instance | TextInstance | SuspenseInstance;\nexport type PublicInstance = Element | Text;\ntype HostContextDev = {\n  namespace: string,\n  ancestorInfo: mixed,\n  ...\n};\ntype HostContextProd = string;\nexport type HostContext = HostContextDev | HostContextProd;\nexport type UpdatePayload = Array<mixed>;\nexport type ChildSet = void; // Unused\nexport type TimeoutHandle = TimeoutID;\nexport type NoTimeout = -1;\nexport type RendererInspectionConfig = $ReadOnly<{||}>;\n\ntype SelectionInformation = {|\n  focusedElem: null | HTMLElement,\n  selectionRange: mixed,\n|};\n\nconst SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';\n\nconst SUSPENSE_START_DATA = '$';\nconst SUSPENSE_END_DATA = '/$';\nconst SUSPENSE_PENDING_START_DATA = '$?';\nconst SUSPENSE_FALLBACK_START_DATA = '$!';\n\nconst STYLE = 'style';\n\nlet eventsEnabled: ?boolean = null;\nlet selectionInformation: null | SelectionInformation = null;\n\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoPersistence';\n\nexport function getRootHostContext(\n  rootContainerInstance: Container,\n): HostContext {\n  let type;\n  let namespace;\n  const nodeType = rootContainerInstance.nodeType;\n  switch (nodeType) {\n    case DOCUMENT_NODE:\n    case DOCUMENT_FRAGMENT_NODE: {\n      type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';\n      const root = (rootContainerInstance: any).documentElement;\n      namespace = root ? root.namespaceURI : getChildNamespace(null, '');\n      break;\n    }\n    default: {\n      const container: any =\n        nodeType === COMMENT_NODE\n          ? rootContainerInstance.parentNode\n          : rootContainerInstance;\n      const ownNamespace = container.namespaceURI || null;\n      type = container.tagName;\n      namespace = getChildNamespace(ownNamespace, type);\n      break;\n    }\n  }\n  if (__DEV__) {\n    const validatedTag = type.toLowerCase();\n    const ancestorInfo = updatedAncestorInfo(null, validatedTag);\n    return {namespace, ancestorInfo};\n  }\n  return namespace;\n}\n\nexport function getChildHostContext(\n  parentHostContext: HostContext,\n  type: string,\n  rootContainerInstance: Container,\n): HostContext {\n  if (__DEV__) {\n    const parentHostContextDev = ((parentHostContext: any): HostContextDev);\n    const namespace = getChildNamespace(parentHostContextDev.namespace, type);\n    const ancestorInfo = updatedAncestorInfo(\n      parentHostContextDev.ancestorInfo,\n      type,\n    );\n    return {namespace, ancestorInfo};\n  }\n  const parentNamespace = ((parentHostContext: any): HostContextProd);\n  return getChildNamespace(parentNamespace, type);\n}\n\nexport function getPublicInstance(instance: Instance): * {\n  return instance;\n}\n\nexport function prepareForCommit(containerInfo: Container): Object | null {\n  eventsEnabled = ReactBrowserEventEmitterIsEnabled();\n  selectionInformation = getSelectionInformation();\n  let activeInstance = null;\n  if (enableCreateEventHandleAPI) {\n    const focusedElem = selectionInformation.focusedElem;\n    if (focusedElem !== null) {\n      activeInstance = getClosestInstanceFromNode(focusedElem);\n    }\n  }\n  ReactBrowserEventEmitterSetEnabled(false);\n  return activeInstance;\n}\n\nexport function beforeActiveInstanceBlur(internalInstanceHandle: Object): void {\n  if (enableCreateEventHandleAPI) {\n    ReactBrowserEventEmitterSetEnabled(true);\n    dispatchBeforeDetachedBlur(\n      (selectionInformation: any).focusedElem,\n      internalInstanceHandle,\n    );\n    ReactBrowserEventEmitterSetEnabled(false);\n  }\n}\n\nexport function afterActiveInstanceBlur(): void {\n  if (enableCreateEventHandleAPI) {\n    ReactBrowserEventEmitterSetEnabled(true);\n    dispatchAfterDetachedBlur((selectionInformation: any).focusedElem);\n    ReactBrowserEventEmitterSetEnabled(false);\n  }\n}\n\nexport function resetAfterCommit(containerInfo: Container): void {\n  restoreSelection(selectionInformation);\n  ReactBrowserEventEmitterSetEnabled(eventsEnabled);\n  eventsEnabled = null;\n  selectionInformation = null;\n}\n\nexport function createInstance(\n  type: string,\n  props: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n  internalInstanceHandle: Object,\n): Instance {\n  let parentNamespace: string;\n  if (__DEV__) {\n    // TODO: take namespace into account when validating.\n    const hostContextDev = ((hostContext: any): HostContextDev);\n    validateDOMNesting(type, null, hostContextDev.ancestorInfo);\n    if (\n      typeof props.children === 'string' ||\n      typeof props.children === 'number'\n    ) {\n      const string = '' + props.children;\n      const ownAncestorInfo = updatedAncestorInfo(\n        hostContextDev.ancestorInfo,\n        type,\n      );\n      validateDOMNesting(null, string, ownAncestorInfo);\n    }\n    parentNamespace = hostContextDev.namespace;\n  } else {\n    parentNamespace = ((hostContext: any): HostContextProd);\n  }\n  const domElement: Instance = createElement(\n    type,\n    props,\n    rootContainerInstance,\n    parentNamespace,\n  );\n  precacheFiberNode(internalInstanceHandle, domElement);\n  updateFiberProps(domElement, props);\n  return domElement;\n}\n\nexport function appendInitialChild(\n  parentInstance: Instance,\n  child: Instance | TextInstance,\n): void {\n  parentInstance.appendChild(child);\n}\n\nexport function finalizeInitialChildren(\n  domElement: Instance,\n  type: string,\n  props: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): boolean {\n  setInitialProperties(domElement, type, props, rootContainerInstance);\n  switch (type) {\n    case 'button':\n    case 'input':\n    case 'select':\n    case 'textarea':\n      return !!props.autoFocus;\n    case 'img':\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function prepareUpdate(\n  domElement: Instance,\n  type: string,\n  oldProps: Props,\n  newProps: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): null | Array<mixed> {\n  if (__DEV__) {\n    const hostContextDev = ((hostContext: any): HostContextDev);\n    if (\n      typeof newProps.children !== typeof oldProps.children &&\n      (typeof newProps.children === 'string' ||\n        typeof newProps.children === 'number')\n    ) {\n      const string = '' + newProps.children;\n      const ownAncestorInfo = updatedAncestorInfo(\n        hostContextDev.ancestorInfo,\n        type,\n      );\n      validateDOMNesting(null, string, ownAncestorInfo);\n    }\n  }\n  return diffProperties(\n    domElement,\n    type,\n    oldProps,\n    newProps,\n    rootContainerInstance,\n  );\n}\n\nexport function shouldSetTextContent(type: string, props: Props): boolean {\n  return (\n    type === 'textarea' ||\n    type === 'noscript' ||\n    typeof props.children === 'string' ||\n    typeof props.children === 'number' ||\n    (typeof props.dangerouslySetInnerHTML === 'object' &&\n      props.dangerouslySetInnerHTML !== null &&\n      props.dangerouslySetInnerHTML.__html != null)\n  );\n}\n\nexport function createTextInstance(\n  text: string,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n  internalInstanceHandle: Object,\n): TextInstance {\n  if (__DEV__) {\n    const hostContextDev = ((hostContext: any): HostContextDev);\n    validateDOMNesting(null, text, hostContextDev.ancestorInfo);\n  }\n  const textNode: TextInstance = createTextNode(text, rootContainerInstance);\n  precacheFiberNode(internalInstanceHandle, textNode);\n  return textNode;\n}\n\nexport function getCurrentEventPriority(): * {\n  const currentEvent = window.event;\n  if (currentEvent === undefined) {\n    return DefaultEventPriority;\n  }\n  return getEventPriority(currentEvent.type);\n}\n\nexport const isPrimaryRenderer = true;\nexport const warnsIfNotActing = true;\n// This initialization code may run even on server environments\n// if a component just imports ReactDOM (e.g. for findDOMNode).\n// Some environments might not have setTimeout or clearTimeout.\nexport const scheduleTimeout: any =\n  typeof setTimeout === 'function' ? setTimeout : (undefined: any);\nexport const cancelTimeout: any =\n  typeof clearTimeout === 'function' ? clearTimeout : (undefined: any);\nexport const noTimeout = -1;\nconst localPromise = typeof Promise === 'function' ? Promise : undefined;\n\n// -------------------\n//     Microtasks\n// -------------------\nexport const supportsMicrotasks = true;\nexport const scheduleMicrotask: any =\n  typeof queueMicrotask === 'function'\n    ? queueMicrotask\n    : typeof localPromise !== 'undefined'\n    ? callback =>\n        localPromise\n          .resolve(null)\n          .then(callback)\n          .catch(handleErrorInNextTick)\n    : scheduleTimeout; // TODO: Determine the best fallback here.\n\nfunction handleErrorInNextTick(error) {\n  setTimeout(() => {\n    throw error;\n  });\n}\n\n// -------------------\n//     Mutation\n// -------------------\n\nexport const supportsMutation = true;\n\nexport function commitMount(\n  domElement: Instance,\n  type: string,\n  newProps: Props,\n  internalInstanceHandle: Object,\n): void {\n  // Despite the naming that might imply otherwise, this method only\n  // fires if there is an `Update` effect scheduled during mounting.\n  // This happens if `finalizeInitialChildren` returns `true` (which it\n  // does to implement the `autoFocus` attribute on the client). But\n  // there are also other cases when this might happen (such as patching\n  // up text content during hydration mismatch). So we'll check this again.\n  switch (type) {\n    case 'button':\n    case 'input':\n    case 'select':\n    case 'textarea':\n      if (newProps.autoFocus) {\n        ((domElement: any):\n          | HTMLButtonElement\n          | HTMLInputElement\n          | HTMLSelectElement\n          | HTMLTextAreaElement).focus();\n      }\n      return;\n    case 'img': {\n      if ((newProps: any).src) {\n        ((domElement: any): HTMLImageElement).src = (newProps: any).src;\n      }\n      return;\n    }\n  }\n}\n\nexport function commitUpdate(\n  domElement: Instance,\n  updatePayload: Array<mixed>,\n  type: string,\n  oldProps: Props,\n  newProps: Props,\n  internalInstanceHandle: Object,\n): void {\n  // Apply the diff to the DOM node.\n  updateProperties(domElement, updatePayload, type, oldProps, newProps);\n  // Update the props handle so that we know which props are the ones with\n  // with current event handlers.\n  updateFiberProps(domElement, newProps);\n}\n\nexport function resetTextContent(domElement: Instance): void {\n  setTextContent(domElement, '');\n}\n\nexport function commitTextUpdate(\n  textInstance: TextInstance,\n  oldText: string,\n  newText: string,\n): void {\n  textInstance.nodeValue = newText;\n}\n\nexport function appendChild(\n  parentInstance: Instance,\n  child: Instance | TextInstance,\n): void {\n  parentInstance.appendChild(child);\n}\n\nexport function appendChildToContainer(\n  container: Container,\n  child: Instance | TextInstance,\n): void {\n  let parentNode;\n  if (container.nodeType === COMMENT_NODE) {\n    parentNode = (container.parentNode: any);\n    parentNode.insertBefore(child, container);\n  } else {\n    parentNode = container;\n    parentNode.appendChild(child);\n  }\n  // This container might be used for a portal.\n  // If something inside a portal is clicked, that click should bubble\n  // through the React tree. However, on Mobile Safari the click would\n  // never bubble through the *DOM* tree unless an ancestor with onclick\n  // event exists. So we wouldn't see it and dispatch it.\n  // This is why we ensure that non React root containers have inline onclick\n  // defined.\n  // https://github.com/facebook/react/issues/11918\n  const reactRootContainer = container._reactRootContainer;\n  if (\n    (reactRootContainer === null || reactRootContainer === undefined) &&\n    parentNode.onclick === null\n  ) {\n    // TODO: This cast may not be sound for SVG, MathML or custom elements.\n    trapClickOnNonInteractiveElement(((parentNode: any): HTMLElement));\n  }\n}\n\nexport function insertBefore(\n  parentInstance: Instance,\n  child: Instance | TextInstance,\n  beforeChild: Instance | TextInstance | SuspenseInstance,\n): void {\n  parentInstance.insertBefore(child, beforeChild);\n}\n\nexport function insertInContainerBefore(\n  container: Container,\n  child: Instance | TextInstance,\n  beforeChild: Instance | TextInstance | SuspenseInstance,\n): void {\n  if (container.nodeType === COMMENT_NODE) {\n    (container.parentNode: any).insertBefore(child, beforeChild);\n  } else {\n    container.insertBefore(child, beforeChild);\n  }\n}\n\nfunction createEvent(type: DOMEventName, bubbles: boolean): Event {\n  const event = document.createEvent('Event');\n  event.initEvent(((type: any): string), bubbles, false);\n  return event;\n}\n\nfunction dispatchBeforeDetachedBlur(\n  target: HTMLElement,\n  internalInstanceHandle: Object,\n): void {\n  if (enableCreateEventHandleAPI) {\n    const event = createEvent('beforeblur', true);\n    // Dispatch \"beforeblur\" directly on the target,\n    // so it gets picked up by the event system and\n    // can propagate through the React internal tree.\n    // $FlowFixMe: internal field\n    event._detachedInterceptFiber = internalInstanceHandle;\n    target.dispatchEvent(event);\n  }\n}\n\nfunction dispatchAfterDetachedBlur(target: HTMLElement): void {\n  if (enableCreateEventHandleAPI) {\n    const event = createEvent('afterblur', false);\n    // So we know what was detached, make the relatedTarget the\n    // detached target on the \"afterblur\" event.\n    (event: any).relatedTarget = target;\n    // Dispatch the event on the document.\n    document.dispatchEvent(event);\n  }\n}\n\nexport function removeChild(\n  parentInstance: Instance,\n  child: Instance | TextInstance | SuspenseInstance,\n): void {\n  parentInstance.removeChild(child);\n}\n\nexport function removeChildFromContainer(\n  container: Container,\n  child: Instance | TextInstance | SuspenseInstance,\n): void {\n  if (container.nodeType === COMMENT_NODE) {\n    (container.parentNode: any).removeChild(child);\n  } else {\n    container.removeChild(child);\n  }\n}\n\nexport function clearSuspenseBoundary(\n  parentInstance: Instance,\n  suspenseInstance: SuspenseInstance,\n): void {\n  let node = suspenseInstance;\n  // Delete all nodes within this suspense boundary.\n  // There might be nested nodes so we need to keep track of how\n  // deep we are and only break out when we're back on top.\n  let depth = 0;\n  do {\n    const nextNode = node.nextSibling;\n    parentInstance.removeChild(node);\n    if (nextNode && nextNode.nodeType === COMMENT_NODE) {\n      const data = ((nextNode: any).data: string);\n      if (data === SUSPENSE_END_DATA) {\n        if (depth === 0) {\n          parentInstance.removeChild(nextNode);\n          // Retry if any event replaying was blocked on this.\n          retryIfBlockedOn(suspenseInstance);\n          return;\n        } else {\n          depth--;\n        }\n      } else if (\n        data === SUSPENSE_START_DATA ||\n        data === SUSPENSE_PENDING_START_DATA ||\n        data === SUSPENSE_FALLBACK_START_DATA\n      ) {\n        depth++;\n      }\n    }\n    node = nextNode;\n  } while (node);\n  // TODO: Warn, we didn't find the end comment boundary.\n  // Retry if any event replaying was blocked on this.\n  retryIfBlockedOn(suspenseInstance);\n}\n\nexport function clearSuspenseBoundaryFromContainer(\n  container: Container,\n  suspenseInstance: SuspenseInstance,\n): void {\n  if (container.nodeType === COMMENT_NODE) {\n    clearSuspenseBoundary((container.parentNode: any), suspenseInstance);\n  } else if (container.nodeType === ELEMENT_NODE) {\n    clearSuspenseBoundary((container: any), suspenseInstance);\n  } else {\n    // Document nodes should never contain suspense boundaries.\n  }\n  // Retry if any event replaying was blocked on this.\n  retryIfBlockedOn(container);\n}\n\nexport function hideInstance(instance: Instance): void {\n  // TODO: Does this work for all element types? What about MathML? Should we\n  // pass host context to this method?\n  instance = ((instance: any): HTMLElement);\n  const style = instance.style;\n  if (typeof style.setProperty === 'function') {\n    style.setProperty('display', 'none', 'important');\n  } else {\n    style.display = 'none';\n  }\n}\n\nexport function hideTextInstance(textInstance: TextInstance): void {\n  textInstance.nodeValue = '';\n}\n\nexport function unhideInstance(instance: Instance, props: Props): void {\n  instance = ((instance: any): HTMLElement);\n  const styleProp = props[STYLE];\n  const display =\n    styleProp !== undefined &&\n    styleProp !== null &&\n    styleProp.hasOwnProperty('display')\n      ? styleProp.display\n      : null;\n  instance.style.display = dangerousStyleValue('display', display);\n}\n\nexport function unhideTextInstance(\n  textInstance: TextInstance,\n  text: string,\n): void {\n  textInstance.nodeValue = text;\n}\n\nexport function clearContainer(container: Container): void {\n  if (container.nodeType === ELEMENT_NODE) {\n    ((container: any): Element).textContent = '';\n  } else if (container.nodeType === DOCUMENT_NODE) {\n    if (container.documentElement) {\n      container.removeChild(container.documentElement);\n    }\n  }\n}\n\n// -------------------\n//     Hydration\n// -------------------\n\nexport const supportsHydration = true;\n\nexport function canHydrateInstance(\n  instance: HydratableInstance,\n  type: string,\n  props: Props,\n): null | Instance {\n  if (\n    instance.nodeType !== ELEMENT_NODE ||\n    type.toLowerCase() !== instance.nodeName.toLowerCase()\n  ) {\n    return null;\n  }\n  // This has now been refined to an element node.\n  return ((instance: any): Instance);\n}\n\nexport function canHydrateTextInstance(\n  instance: HydratableInstance,\n  text: string,\n): null | TextInstance {\n  if (text === '' || instance.nodeType !== TEXT_NODE) {\n    // Empty strings are not parsed by HTML so there won't be a correct match here.\n    return null;\n  }\n  // This has now been refined to a text node.\n  return ((instance: any): TextInstance);\n}\n\nexport function canHydrateSuspenseInstance(\n  instance: HydratableInstance,\n): null | SuspenseInstance {\n  if (instance.nodeType !== COMMENT_NODE) {\n    // Empty strings are not parsed by HTML so there won't be a correct match here.\n    return null;\n  }\n  // This has now been refined to a suspense node.\n  return ((instance: any): SuspenseInstance);\n}\n\nexport function isSuspenseInstancePending(instance: SuspenseInstance) {\n  return instance.data === SUSPENSE_PENDING_START_DATA;\n}\n\nexport function isSuspenseInstanceFallback(instance: SuspenseInstance) {\n  return instance.data === SUSPENSE_FALLBACK_START_DATA;\n}\n\nexport function getSuspenseInstanceFallbackErrorDetails(\n  instance: SuspenseInstance,\n): {digest: ?string, message?: string, stack?: string} {\n  const dataset =\n    instance.nextSibling && ((instance.nextSibling: any): HTMLElement).dataset;\n  let digest, message, stack;\n  if (dataset) {\n    digest = dataset.dgst;\n    if (__DEV__) {\n      message = dataset.msg;\n      stack = dataset.stck;\n    }\n  }\n  if (__DEV__) {\n    return {\n      message,\n      digest,\n      stack,\n    };\n  } else {\n    // Object gets DCE'd if constructed in tail position and matches callsite destructuring\n    return {\n      digest,\n    };\n  }\n\n  // let value = {message: undefined, hash: undefined};\n  // const nextSibling = instance.nextSibling;\n  // if (nextSibling) {\n  //   const dataset = ((nextSibling: any): HTMLTemplateElement).dataset;\n  //   value.message = dataset.msg;\n  //   value.hash = dataset.hash;\n  //   if (__DEV__) {\n  //     value.stack = dataset.stack;\n  //   }\n  // }\n  // return value;\n}\n\nexport function registerSuspenseInstanceRetry(\n  instance: SuspenseInstance,\n  callback: () => void,\n) {\n  instance._reactRetry = callback;\n}\n\nfunction getNextHydratable(node) {\n  // Skip non-hydratable nodes.\n  for (; node != null; node = node.nextSibling) {\n    const nodeType = node.nodeType;\n    if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {\n      break;\n    }\n    if (nodeType === COMMENT_NODE) {\n      const nodeData = (node: any).data;\n      if (\n        nodeData === SUSPENSE_START_DATA ||\n        nodeData === SUSPENSE_FALLBACK_START_DATA ||\n        nodeData === SUSPENSE_PENDING_START_DATA\n      ) {\n        break;\n      }\n      if (nodeData === SUSPENSE_END_DATA) {\n        return null;\n      }\n    }\n  }\n  return (node: any);\n}\n\nexport function getNextHydratableSibling(\n  instance: HydratableInstance,\n): null | HydratableInstance {\n  return getNextHydratable(instance.nextSibling);\n}\n\nexport function getFirstHydratableChild(\n  parentInstance: Instance,\n): null | HydratableInstance {\n  return getNextHydratable(parentInstance.firstChild);\n}\n\nexport function getFirstHydratableChildWithinContainer(\n  parentContainer: Container,\n): null | HydratableInstance {\n  return getNextHydratable(parentContainer.firstChild);\n}\n\nexport function getFirstHydratableChildWithinSuspenseInstance(\n  parentInstance: SuspenseInstance,\n): null | HydratableInstance {\n  return getNextHydratable(parentInstance.nextSibling);\n}\n\nexport function hydrateInstance(\n  instance: Instance,\n  type: string,\n  props: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n  internalInstanceHandle: Object,\n  shouldWarnDev: boolean,\n): null | Array<mixed> {\n  precacheFiberNode(internalInstanceHandle, instance);\n  // TODO: Possibly defer this until the commit phase where all the events\n  // get attached.\n  updateFiberProps(instance, props);\n  let parentNamespace: string;\n  if (__DEV__) {\n    const hostContextDev = ((hostContext: any): HostContextDev);\n    parentNamespace = hostContextDev.namespace;\n  } else {\n    parentNamespace = ((hostContext: any): HostContextProd);\n  }\n\n  // TODO: Temporary hack to check if we're in a concurrent root. We can delete\n  // when the legacy root API is removed.\n  const isConcurrentMode =\n    ((internalInstanceHandle: Fiber).mode & ConcurrentMode) !== NoMode;\n\n  return diffHydratedProperties(\n    instance,\n    type,\n    props,\n    parentNamespace,\n    rootContainerInstance,\n    isConcurrentMode,\n    shouldWarnDev,\n  );\n}\n\nexport function hydrateTextInstance(\n  textInstance: TextInstance,\n  text: string,\n  internalInstanceHandle: Object,\n  shouldWarnDev: boolean,\n): boolean {\n  precacheFiberNode(internalInstanceHandle, textInstance);\n\n  // TODO: Temporary hack to check if we're in a concurrent root. We can delete\n  // when the legacy root API is removed.\n  const isConcurrentMode =\n    ((internalInstanceHandle: Fiber).mode & ConcurrentMode) !== NoMode;\n\n  return diffHydratedText(textInstance, text, isConcurrentMode);\n}\n\nexport function hydrateSuspenseInstance(\n  suspenseInstance: SuspenseInstance,\n  internalInstanceHandle: Object,\n) {\n  precacheFiberNode(internalInstanceHandle, suspenseInstance);\n}\n\nexport function getNextHydratableInstanceAfterSuspenseInstance(\n  suspenseInstance: SuspenseInstance,\n): null | HydratableInstance {\n  let node = suspenseInstance.nextSibling;\n  // Skip past all nodes within this suspense boundary.\n  // There might be nested nodes so we need to keep track of how\n  // deep we are and only break out when we're back on top.\n  let depth = 0;\n  while (node) {\n    if (node.nodeType === COMMENT_NODE) {\n      const data = ((node: any).data: string);\n      if (data === SUSPENSE_END_DATA) {\n        if (depth === 0) {\n          return getNextHydratableSibling((node: any));\n        } else {\n          depth--;\n        }\n      } else if (\n        data === SUSPENSE_START_DATA ||\n        data === SUSPENSE_FALLBACK_START_DATA ||\n        data === SUSPENSE_PENDING_START_DATA\n      ) {\n        depth++;\n      }\n    }\n    node = node.nextSibling;\n  }\n  // TODO: Warn, we didn't find the end comment boundary.\n  return null;\n}\n\n// Returns the SuspenseInstance if this node is a direct child of a\n// SuspenseInstance. I.e. if its previous sibling is a Comment with\n// SUSPENSE_x_START_DATA. Otherwise, null.\nexport function getParentSuspenseInstance(\n  targetInstance: Node,\n): null | SuspenseInstance {\n  let node = targetInstance.previousSibling;\n  // Skip past all nodes within this suspense boundary.\n  // There might be nested nodes so we need to keep track of how\n  // deep we are and only break out when we're back on top.\n  let depth = 0;\n  while (node) {\n    if (node.nodeType === COMMENT_NODE) {\n      const data = ((node: any).data: string);\n      if (\n        data === SUSPENSE_START_DATA ||\n        data === SUSPENSE_FALLBACK_START_DATA ||\n        data === SUSPENSE_PENDING_START_DATA\n      ) {\n        if (depth === 0) {\n          return ((node: any): SuspenseInstance);\n        } else {\n          depth--;\n        }\n      } else if (data === SUSPENSE_END_DATA) {\n        depth++;\n      }\n    }\n    node = node.previousSibling;\n  }\n  return null;\n}\n\nexport function commitHydratedContainer(container: Container): void {\n  // Retry if any event replaying was blocked on this.\n  retryIfBlockedOn(container);\n}\n\nexport function commitHydratedSuspenseInstance(\n  suspenseInstance: SuspenseInstance,\n): void {\n  // Retry if any event replaying was blocked on this.\n  retryIfBlockedOn(suspenseInstance);\n}\n\nexport function shouldDeleteUnhydratedTailInstances(\n  parentType: string,\n): boolean {\n  return parentType !== 'head' && parentType !== 'body';\n}\n\nexport function didNotMatchHydratedContainerTextInstance(\n  parentContainer: Container,\n  textInstance: TextInstance,\n  text: string,\n  isConcurrentMode: boolean,\n) {\n  const shouldWarnDev = true;\n  checkForUnmatchedText(\n    textInstance.nodeValue,\n    text,\n    isConcurrentMode,\n    shouldWarnDev,\n  );\n}\n\nexport function didNotMatchHydratedTextInstance(\n  parentType: string,\n  parentProps: Props,\n  parentInstance: Instance,\n  textInstance: TextInstance,\n  text: string,\n  isConcurrentMode: boolean,\n) {\n  if (parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n    const shouldWarnDev = true;\n    checkForUnmatchedText(\n      textInstance.nodeValue,\n      text,\n      isConcurrentMode,\n      shouldWarnDev,\n    );\n  }\n}\n\nexport function didNotHydrateInstanceWithinContainer(\n  parentContainer: Container,\n  instance: HydratableInstance,\n) {\n  if (__DEV__) {\n    if (instance.nodeType === ELEMENT_NODE) {\n      warnForDeletedHydratableElement(parentContainer, (instance: any));\n    } else if (instance.nodeType === COMMENT_NODE) {\n      // TODO: warnForDeletedHydratableSuspenseBoundary\n    } else {\n      warnForDeletedHydratableText(parentContainer, (instance: any));\n    }\n  }\n}\n\nexport function didNotHydrateInstanceWithinSuspenseInstance(\n  parentInstance: SuspenseInstance,\n  instance: HydratableInstance,\n) {\n  if (__DEV__) {\n    // $FlowFixMe: Only Element or Document can be parent nodes.\n    const parentNode: Element | Document | null = parentInstance.parentNode;\n    if (parentNode !== null) {\n      if (instance.nodeType === ELEMENT_NODE) {\n        warnForDeletedHydratableElement(parentNode, (instance: any));\n      } else if (instance.nodeType === COMMENT_NODE) {\n        // TODO: warnForDeletedHydratableSuspenseBoundary\n      } else {\n        warnForDeletedHydratableText(parentNode, (instance: any));\n      }\n    }\n  }\n}\n\nexport function didNotHydrateInstance(\n  parentType: string,\n  parentProps: Props,\n  parentInstance: Instance,\n  instance: HydratableInstance,\n  isConcurrentMode: boolean,\n) {\n  if (__DEV__) {\n    if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n      if (instance.nodeType === ELEMENT_NODE) {\n        warnForDeletedHydratableElement(parentInstance, (instance: any));\n      } else if (instance.nodeType === COMMENT_NODE) {\n        // TODO: warnForDeletedHydratableSuspenseBoundary\n      } else {\n        warnForDeletedHydratableText(parentInstance, (instance: any));\n      }\n    }\n  }\n}\n\nexport function didNotFindHydratableInstanceWithinContainer(\n  parentContainer: Container,\n  type: string,\n  props: Props,\n) {\n  if (__DEV__) {\n    warnForInsertedHydratedElement(parentContainer, type, props);\n  }\n}\n\nexport function didNotFindHydratableTextInstanceWithinContainer(\n  parentContainer: Container,\n  text: string,\n) {\n  if (__DEV__) {\n    warnForInsertedHydratedText(parentContainer, text);\n  }\n}\n\nexport function didNotFindHydratableSuspenseInstanceWithinContainer(\n  parentContainer: Container,\n) {\n  if (__DEV__) {\n    // TODO: warnForInsertedHydratedSuspense(parentContainer);\n  }\n}\n\nexport function didNotFindHydratableInstanceWithinSuspenseInstance(\n  parentInstance: SuspenseInstance,\n  type: string,\n  props: Props,\n) {\n  if (__DEV__) {\n    // $FlowFixMe: Only Element or Document can be parent nodes.\n    const parentNode: Element | Document | null = parentInstance.parentNode;\n    if (parentNode !== null)\n      warnForInsertedHydratedElement(parentNode, type, props);\n  }\n}\n\nexport function didNotFindHydratableTextInstanceWithinSuspenseInstance(\n  parentInstance: SuspenseInstance,\n  text: string,\n) {\n  if (__DEV__) {\n    // $FlowFixMe: Only Element or Document can be parent nodes.\n    const parentNode: Element | Document | null = parentInstance.parentNode;\n    if (parentNode !== null) warnForInsertedHydratedText(parentNode, text);\n  }\n}\n\nexport function didNotFindHydratableSuspenseInstanceWithinSuspenseInstance(\n  parentInstance: SuspenseInstance,\n) {\n  if (__DEV__) {\n    // const parentNode: Element | Document | null = parentInstance.parentNode;\n    // TODO: warnForInsertedHydratedSuspense(parentNode);\n  }\n}\n\nexport function didNotFindHydratableInstance(\n  parentType: string,\n  parentProps: Props,\n  parentInstance: Instance,\n  type: string,\n  props: Props,\n  isConcurrentMode: boolean,\n) {\n  if (__DEV__) {\n    if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n      warnForInsertedHydratedElement(parentInstance, type, props);\n    }\n  }\n}\n\nexport function didNotFindHydratableTextInstance(\n  parentType: string,\n  parentProps: Props,\n  parentInstance: Instance,\n  text: string,\n  isConcurrentMode: boolean,\n) {\n  if (__DEV__) {\n    if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n      warnForInsertedHydratedText(parentInstance, text);\n    }\n  }\n}\n\nexport function didNotFindHydratableSuspenseInstance(\n  parentType: string,\n  parentProps: Props,\n  parentInstance: Instance,\n) {\n  if (__DEV__) {\n    // TODO: warnForInsertedHydratedSuspense(parentInstance);\n  }\n}\n\nexport function errorHydratingContainer(parentContainer: Container): void {\n  if (__DEV__) {\n    // TODO: This gets logged by onRecoverableError, too, so we should be\n    // able to remove it.\n    console.error(\n      'An error occurred during hydration. The server HTML was replaced with client content in <%s>.',\n      parentContainer.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function getInstanceFromNode(node: HTMLElement): null | Object {\n  return getClosestInstanceFromNode(node) || null;\n}\n\nexport function preparePortalMount(portalInstance: Instance): void {\n  listenToAllSupportedEvents(portalInstance);\n}\n\nexport function prepareScopeUpdate(\n  scopeInstance: ReactScopeInstance,\n  internalInstanceHandle: Object,\n): void {\n  if (enableScopeAPI) {\n    precacheFiberNode(internalInstanceHandle, scopeInstance);\n  }\n}\n\nexport function getInstanceFromScope(\n  scopeInstance: ReactScopeInstance,\n): null | Object {\n  if (enableScopeAPI) {\n    return getFiberFromScopeInstance(scopeInstance);\n  }\n  return null;\n}\n\nexport const supportsTestSelectors = true;\n\nexport function findFiberRoot(node: Instance): null | FiberRoot {\n  const stack = [node];\n  let index = 0;\n  while (index < stack.length) {\n    const current = stack[index++];\n    if (isContainerMarkedAsRoot(current)) {\n      return ((getInstanceFromNodeDOMTree(current): any): FiberRoot);\n    }\n    stack.push(...current.children);\n  }\n  return null;\n}\n\nexport function getBoundingRect(node: Instance): BoundingRect {\n  const rect = node.getBoundingClientRect();\n  return {\n    x: rect.left,\n    y: rect.top,\n    width: rect.width,\n    height: rect.height,\n  };\n}\n\nexport function matchAccessibilityRole(node: Instance, role: string): boolean {\n  if (hasRole(node, role)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function getTextContent(fiber: Fiber): string | null {\n  switch (fiber.tag) {\n    case HostComponent:\n      let textContent = '';\n      const childNodes = fiber.stateNode.childNodes;\n      for (let i = 0; i < childNodes.length; i++) {\n        const childNode = childNodes[i];\n        if (childNode.nodeType === Node.TEXT_NODE) {\n          textContent += childNode.textContent;\n        }\n      }\n      return textContent;\n    case HostText:\n      return fiber.stateNode.textContent;\n  }\n\n  return null;\n}\n\nexport function isHiddenSubtree(fiber: Fiber): boolean {\n  return fiber.tag === HostComponent && fiber.memoizedProps.hidden === true;\n}\n\nexport function setFocusIfFocusable(node: Instance): boolean {\n  // The logic for determining if an element is focusable is kind of complex,\n  // and since we want to actually change focus anyway- we can just skip it.\n  // Instead we'll just listen for a \"focus\" event to verify that focus was set.\n  //\n  // We could compare the node to document.activeElement after focus,\n  // but this would not handle the case where application code managed focus to automatically blur.\n  let didFocus = false;\n  const handleFocus = () => {\n    didFocus = true;\n  };\n\n  const element = ((node: any): HTMLElement);\n  try {\n    element.addEventListener('focus', handleFocus);\n    (element.focus || HTMLElement.prototype.focus).call(element);\n  } finally {\n    element.removeEventListener('focus', handleFocus);\n  }\n\n  return didFocus;\n}\n\ntype RectRatio = {\n  ratio: number,\n  rect: BoundingRect,\n};\n\nexport function setupIntersectionObserver(\n  targets: Array<Instance>,\n  callback: ObserveVisibleRectsCallback,\n  options?: IntersectionObserverOptions,\n): {|\n  disconnect: () => void,\n  observe: (instance: Instance) => void,\n  unobserve: (instance: Instance) => void,\n|} {\n  const rectRatioCache: Map<Instance, RectRatio> = new Map();\n  targets.forEach(target => {\n    rectRatioCache.set(target, {\n      rect: getBoundingRect(target),\n      ratio: 0,\n    });\n  });\n\n  const handleIntersection = (entries: Array<IntersectionObserverEntry>) => {\n    entries.forEach(entry => {\n      const {boundingClientRect, intersectionRatio, target} = entry;\n      rectRatioCache.set(target, {\n        rect: {\n          x: boundingClientRect.left,\n          y: boundingClientRect.top,\n          width: boundingClientRect.width,\n          height: boundingClientRect.height,\n        },\n        ratio: intersectionRatio,\n      });\n    });\n\n    callback(Array.from(rectRatioCache.values()));\n  };\n\n  const observer = new IntersectionObserver(handleIntersection, options);\n  targets.forEach(target => {\n    observer.observe((target: any));\n  });\n\n  return {\n    disconnect: () => observer.disconnect(),\n    observe: target => {\n      rectRatioCache.set(target, {\n        rect: getBoundingRect(target),\n        ratio: 0,\n      });\n      observer.observe((target: any));\n    },\n    unobserve: target => {\n      rectRatioCache.delete(target);\n      observer.unobserve((target: any));\n    },\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\nimport type {ReactScopeInstance} from 'shared/ReactTypes';\nimport type {\n  ReactDOMEventHandle,\n  ReactDOMEventHandleListener,\n} from '../shared/ReactDOMTypes';\nimport type {\n  Container,\n  TextInstance,\n  Instance,\n  SuspenseInstance,\n  Props,\n} from './ReactDOMHostConfig';\n\nimport {\n  HostComponent,\n  HostText,\n  HostRoot,\n  SuspenseComponent,\n} from 'react-reconciler/src/ReactWorkTags';\n\nimport {getParentSuspenseInstance} from './ReactDOMHostConfig';\n\nimport {enableScopeAPI} from 'shared/ReactFeatureFlags';\n\nconst randomKey = Math.random()\n  .toString(36)\n  .slice(2);\nconst internalInstanceKey = '__reactFiber$' + randomKey;\nconst internalPropsKey = '__reactProps$' + randomKey;\nconst internalContainerInstanceKey = '__reactContainer$' + randomKey;\nconst internalEventHandlersKey = '__reactEvents$' + randomKey;\nconst internalEventHandlerListenersKey = '__reactListeners$' + randomKey;\nconst internalEventHandlesSetKey = '__reactHandles$' + randomKey;\n\nexport function detachDeletedInstance(node: Instance): void {\n  // TODO: This function is only called on host components. I don't think all of\n  // these fields are relevant.\n  delete (node: any)[internalInstanceKey];\n  delete (node: any)[internalPropsKey];\n  delete (node: any)[internalEventHandlersKey];\n  delete (node: any)[internalEventHandlerListenersKey];\n  delete (node: any)[internalEventHandlesSetKey];\n}\n\nexport function precacheFiberNode(\n  hostInst: Fiber,\n  node: Instance | TextInstance | SuspenseInstance | ReactScopeInstance,\n): void {\n  (node: any)[internalInstanceKey] = hostInst;\n}\n\nexport function markContainerAsRoot(hostRoot: Fiber, node: Container): void {\n  node[internalContainerInstanceKey] = hostRoot;\n}\n\nexport function unmarkContainerAsRoot(node: Container): void {\n  node[internalContainerInstanceKey] = null;\n}\n\nexport function isContainerMarkedAsRoot(node: Container): boolean {\n  return !!node[internalContainerInstanceKey];\n}\n\n// Given a DOM node, return the closest HostComponent or HostText fiber ancestor.\n// If the target node is part of a hydrated or not yet rendered subtree, then\n// this may also return a SuspenseComponent or HostRoot to indicate that.\n// Conceptually the HostRoot fiber is a child of the Container node. So if you\n// pass the Container node as the targetNode, you will not actually get the\n// HostRoot back. To get to the HostRoot, you need to pass a child of it.\n// The same thing applies to Suspense boundaries.\nexport function getClosestInstanceFromNode(targetNode: Node): null | Fiber {\n  let targetInst = (targetNode: any)[internalInstanceKey];\n  if (targetInst) {\n    // Don't return HostRoot or SuspenseComponent here.\n    return targetInst;\n  }\n  // If the direct event target isn't a React owned DOM node, we need to look\n  // to see if one of its parents is a React owned DOM node.\n  let parentNode = targetNode.parentNode;\n  while (parentNode) {\n    // We'll check if this is a container root that could include\n    // React nodes in the future. We need to check this first because\n    // if we're a child of a dehydrated container, we need to first\n    // find that inner container before moving on to finding the parent\n    // instance. Note that we don't check this field on  the targetNode\n    // itself because the fibers are conceptually between the container\n    // node and the first child. It isn't surrounding the container node.\n    // If it's not a container, we check if it's an instance.\n    targetInst =\n      (parentNode: any)[internalContainerInstanceKey] ||\n      (parentNode: any)[internalInstanceKey];\n    if (targetInst) {\n      // Since this wasn't the direct target of the event, we might have\n      // stepped past dehydrated DOM nodes to get here. However they could\n      // also have been non-React nodes. We need to answer which one.\n\n      // If we the instance doesn't have any children, then there can't be\n      // a nested suspense boundary within it. So we can use this as a fast\n      // bailout. Most of the time, when people add non-React children to\n      // the tree, it is using a ref to a child-less DOM node.\n      // Normally we'd only need to check one of the fibers because if it\n      // has ever gone from having children to deleting them or vice versa\n      // it would have deleted the dehydrated boundary nested inside already.\n      // However, since the HostRoot starts out with an alternate it might\n      // have one on the alternate so we need to check in case this was a\n      // root.\n      const alternate = targetInst.alternate;\n      if (\n        targetInst.child !== null ||\n        (alternate !== null && alternate.child !== null)\n      ) {\n        // Next we need to figure out if the node that skipped past is\n        // nested within a dehydrated boundary and if so, which one.\n        let suspenseInstance = getParentSuspenseInstance(targetNode);\n        while (suspenseInstance !== null) {\n          // We found a suspense instance. That means that we haven't\n          // hydrated it yet. Even though we leave the comments in the\n          // DOM after hydrating, and there are boundaries in the DOM\n          // that could already be hydrated, we wouldn't have found them\n          // through this pass since if the target is hydrated it would\n          // have had an internalInstanceKey on it.\n          // Let's get the fiber associated with the SuspenseComponent\n          // as the deepest instance.\n          const targetSuspenseInst = suspenseInstance[internalInstanceKey];\n          if (targetSuspenseInst) {\n            return targetSuspenseInst;\n          }\n          // If we don't find a Fiber on the comment, it might be because\n          // we haven't gotten to hydrate it yet. There might still be a\n          // parent boundary that hasn't above this one so we need to find\n          // the outer most that is known.\n          suspenseInstance = getParentSuspenseInstance(suspenseInstance);\n          // If we don't find one, then that should mean that the parent\n          // host component also hasn't hydrated yet. We can return it\n          // below since it will bail out on the isMounted check later.\n        }\n      }\n      return targetInst;\n    }\n    targetNode = parentNode;\n    parentNode = targetNode.parentNode;\n  }\n  return null;\n}\n\n/**\n * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n * instance, or null if the node was not rendered by this React.\n */\nexport function getInstanceFromNode(node: Node): Fiber | null {\n  const inst =\n    (node: any)[internalInstanceKey] ||\n    (node: any)[internalContainerInstanceKey];\n  if (inst) {\n    if (\n      inst.tag === HostComponent ||\n      inst.tag === HostText ||\n      inst.tag === SuspenseComponent ||\n      inst.tag === HostRoot\n    ) {\n      return inst;\n    } else {\n      return null;\n    }\n  }\n  return null;\n}\n\n/**\n * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n * DOM node.\n */\nexport function getNodeFromInstance(inst: Fiber): Instance | TextInstance {\n  if (inst.tag === HostComponent || inst.tag === HostText) {\n    // In Fiber this, is just the state node right now. We assume it will be\n    // a host component or host text.\n    return inst.stateNode;\n  }\n\n  // Without this first invariant, passing a non-DOM-component triggers the next\n  // invariant for a missing parent, which is super confusing.\n  throw new Error('getNodeFromInstance: Invalid argument.');\n}\n\nexport function getFiberCurrentPropsFromNode(\n  node: Instance | TextInstance | SuspenseInstance,\n): Props {\n  return (node: any)[internalPropsKey] || null;\n}\n\nexport function updateFiberProps(\n  node: Instance | TextInstance | SuspenseInstance,\n  props: Props,\n): void {\n  (node: any)[internalPropsKey] = props;\n}\n\nexport function getEventListenerSet(node: EventTarget): Set<string> {\n  let elementListenerSet = (node: any)[internalEventHandlersKey];\n  if (elementListenerSet === undefined) {\n    elementListenerSet = (node: any)[internalEventHandlersKey] = new Set();\n  }\n  return elementListenerSet;\n}\n\nexport function getFiberFromScopeInstance(\n  scope: ReactScopeInstance,\n): null | Fiber {\n  if (enableScopeAPI) {\n    return (scope: any)[internalInstanceKey] || null;\n  }\n  return null;\n}\n\nexport function setEventHandlerListeners(\n  scope: EventTarget | ReactScopeInstance,\n  listeners: Set<ReactDOMEventHandleListener>,\n): void {\n  (scope: any)[internalEventHandlerListenersKey] = listeners;\n}\n\nexport function getEventHandlerListeners(\n  scope: EventTarget | ReactScopeInstance,\n): null | Set<ReactDOMEventHandleListener> {\n  return (scope: any)[internalEventHandlerListenersKey] || null;\n}\n\nexport function addEventHandleToTarget(\n  target: EventTarget | ReactScopeInstance,\n  eventHandle: ReactDOMEventHandle,\n): void {\n  let eventHandles = (target: any)[internalEventHandlesSetKey];\n  if (eventHandles === undefined) {\n    eventHandles = (target: any)[internalEventHandlesSetKey] = new Set();\n  }\n  eventHandles.add(eventHandle);\n}\n\nexport function doesTargetHaveEventHandle(\n  target: EventTarget | ReactScopeInstance,\n  eventHandle: ReactDOMEventHandle,\n): boolean {\n  const eventHandles = (target: any)[internalEventHandlesSetKey];\n  if (eventHandles === undefined) {\n    return false;\n  }\n  return eventHandles.has(eventHandle);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst loggedTypeFailures = {};\n\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport hasOwnProperty from 'shared/hasOwnProperty';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  if (__DEV__) {\n    if (element) {\n      const owner = element._owner;\n      const stack = describeUnknownElementTypeFrameInDEV(\n        element.type,\n        element._source,\n        owner ? owner.type : null,\n      );\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nexport default function checkPropTypes(\n  typeSpecs: Object,\n  values: Object,\n  location: string,\n  componentName: ?string,\n  element?: any,\n): void {\n  if (__DEV__) {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    const has = Function.call.bind(hasOwnProperty);\n    for (const typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        let error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            const err = Error(\n              (componentName || 'React class') +\n                ': ' +\n                location +\n                ' type `' +\n                typeSpecName +\n                '` is invalid; ' +\n                'it must be a function, usually from the `prop-types` package, but received `' +\n                typeof typeSpecs[typeSpecName] +\n                '`.' +\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](\n            values,\n            typeSpecName,\n            componentName,\n            location,\n            null,\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\n          );\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n          console.error(\n            '%s: type specification of %s' +\n              ' `%s` is invalid; the type checker ' +\n              'function must return `null` or an `Error` but returned a %s. ' +\n              'You may have forgotten to pass an argument to the type checker ' +\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n              'shape all require an argument).',\n            componentName || 'React class',\n            location,\n            typeSpecName,\n            typeof error,\n          );\n          setCurrentlyValidatingElement(null);\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n          setCurrentlyValidatingElement(element);\n          console.error('Failed %s type: %s', location, error.message);\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nexport type StackCursor<T> = {|current: T|};\n\nconst valueStack: Array<any> = [];\n\nlet fiberStack: Array<Fiber | null>;\n\nif (__DEV__) {\n  fiberStack = [];\n}\n\nlet index = -1;\n\nfunction createCursor<T>(defaultValue: T): StackCursor<T> {\n  return {\n    current: defaultValue,\n  };\n}\n\nfunction isEmpty(): boolean {\n  return index === -1;\n}\n\nfunction pop<T>(cursor: StackCursor<T>, fiber: Fiber): void {\n  if (index < 0) {\n    if (__DEV__) {\n      console.error('Unexpected pop.');\n    }\n    return;\n  }\n\n  if (__DEV__) {\n    if (fiber !== fiberStack[index]) {\n      console.error('Unexpected Fiber popped.');\n    }\n  }\n\n  cursor.current = valueStack[index];\n\n  valueStack[index] = null;\n\n  if (__DEV__) {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push<T>(cursor: StackCursor<T>, value: T, fiber: Fiber): void {\n  index++;\n\n  valueStack[index] = cursor.current;\n\n  if (__DEV__) {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nfunction checkThatStackIsEmpty() {\n  if (__DEV__) {\n    if (index !== -1) {\n      console.error(\n        'Expected an empty stack. Something was not reset properly.',\n      );\n    }\n  }\n}\n\nfunction resetStackAfterFatalErrorInDev() {\n  if (__DEV__) {\n    index = -1;\n    valueStack.length = 0;\n    fiberStack.length = 0;\n  }\n}\n\nexport {\n  createCursor,\n  isEmpty,\n  pop,\n  push,\n  // DEV only:\n  checkThatStackIsEmpty,\n  resetStackAfterFatalErrorInDev,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {isFiberMounted} from './ReactFiberTreeReflection';\nimport {disableLegacyContext} from 'shared/ReactFeatureFlags';\nimport {ClassComponent, HostRoot} from './ReactWorkTags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport checkPropTypes from 'shared/checkPropTypes';\n\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\nlet warnedAboutMissingGetChildContext;\n\nif (__DEV__) {\n  warnedAboutMissingGetChildContext = {};\n}\n\nexport const emptyContextObject = {};\nif (__DEV__) {\n  Object.freeze(emptyContextObject);\n}\n\n// A cursor to the current merged context object on the stack.\nconst contextStackCursor: StackCursor<Object> = createCursor(\n  emptyContextObject,\n);\n// A cursor to a boolean indicating whether the context has changed.\nconst didPerformWorkStackCursor: StackCursor<boolean> = createCursor(false);\n// Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\nlet previousContext: Object = emptyContextObject;\n\nfunction getUnmaskedContext(\n  workInProgress: Fiber,\n  Component: Function,\n  didPushOwnContextIfProvider: boolean,\n): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n      // If the fiber is a context provider itself, when we read its context\n      // we may have already pushed its own child context on the stack. A context\n      // provider should not \"see\" its own child context. Therefore we read the\n      // previous (parent) context instead for a context provider.\n      return previousContext;\n    }\n    return contextStackCursor.current;\n  }\n}\n\nfunction cacheContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n  maskedContext: Object,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    const instance = workInProgress.stateNode;\n    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n  }\n}\n\nfunction getMaskedContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    const type = workInProgress.type;\n    const contextTypes = type.contextTypes;\n    if (!contextTypes) {\n      return emptyContextObject;\n    }\n\n    // Avoid recreating masked context unless unmasked context has changed.\n    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n    // This may trigger infinite loops if componentWillReceiveProps calls setState.\n    const instance = workInProgress.stateNode;\n    if (\n      instance &&\n      instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext\n    ) {\n      return instance.__reactInternalMemoizedMaskedChildContext;\n    }\n\n    const context = {};\n    for (const key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n\n    if (__DEV__) {\n      const name = getComponentNameFromFiber(workInProgress) || 'Unknown';\n      checkPropTypes(contextTypes, context, 'context', name);\n    }\n\n    // Cache unmasked context so we can avoid recreating masked context unless necessary.\n    // Context is created before the class component is instantiated so check for instance.\n    if (instance) {\n      cacheContext(workInProgress, unmaskedContext, context);\n    }\n\n    return context;\n  }\n}\n\nfunction hasContextChanged(): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    return didPerformWorkStackCursor.current;\n  }\n}\n\nfunction isContextProvider(type: Function): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    const childContextTypes = type.childContextTypes;\n    return childContextTypes !== null && childContextTypes !== undefined;\n  }\n}\n\nfunction popContext(fiber: Fiber): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction popTopLevelContextObject(fiber: Fiber): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction pushTopLevelContextObject(\n  fiber: Fiber,\n  context: Object,\n  didChange: boolean,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    if (contextStackCursor.current !== emptyContextObject) {\n      throw new Error(\n        'Unexpected context found on stack. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n    }\n\n    push(contextStackCursor, context, fiber);\n    push(didPerformWorkStackCursor, didChange, fiber);\n  }\n}\n\nfunction processChildContext(\n  fiber: Fiber,\n  type: any,\n  parentContext: Object,\n): Object {\n  if (disableLegacyContext) {\n    return parentContext;\n  } else {\n    const instance = fiber.stateNode;\n    const childContextTypes = type.childContextTypes;\n\n    // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n    if (typeof instance.getChildContext !== 'function') {\n      if (__DEV__) {\n        const componentName = getComponentNameFromFiber(fiber) || 'Unknown';\n\n        if (!warnedAboutMissingGetChildContext[componentName]) {\n          warnedAboutMissingGetChildContext[componentName] = true;\n          console.error(\n            '%s.childContextTypes is specified but there is no getChildContext() method ' +\n              'on the instance. You can either define getChildContext() on %s or remove ' +\n              'childContextTypes from it.',\n            componentName,\n            componentName,\n          );\n        }\n      }\n      return parentContext;\n    }\n\n    const childContext = instance.getChildContext();\n    for (const contextKey in childContext) {\n      if (!(contextKey in childContextTypes)) {\n        throw new Error(\n          `${getComponentNameFromFiber(fiber) ||\n            'Unknown'}.getChildContext(): key \"${contextKey}\" is not defined in childContextTypes.`,\n        );\n      }\n    }\n    if (__DEV__) {\n      const name = getComponentNameFromFiber(fiber) || 'Unknown';\n      checkPropTypes(childContextTypes, childContext, 'child context', name);\n    }\n\n    return {...parentContext, ...childContext};\n  }\n}\n\nfunction pushContextProvider(workInProgress: Fiber): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    const instance = workInProgress.stateNode;\n    // We push the context as early as possible to ensure stack integrity.\n    // If the instance does not exist yet, we will push null at first,\n    // and replace it on the stack later when invalidating the context.\n    const memoizedMergedChildContext =\n      (instance && instance.__reactInternalMemoizedMergedChildContext) ||\n      emptyContextObject;\n\n    // Remember the parent context so we can merge with it later.\n    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n    previousContext = contextStackCursor.current;\n    push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n    push(\n      didPerformWorkStackCursor,\n      didPerformWorkStackCursor.current,\n      workInProgress,\n    );\n\n    return true;\n  }\n}\n\nfunction invalidateContextProvider(\n  workInProgress: Fiber,\n  type: any,\n  didChange: boolean,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    const instance = workInProgress.stateNode;\n\n    if (!instance) {\n      throw new Error(\n        'Expected to have an instance by this point. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n    }\n\n    if (didChange) {\n      // Merge parent and own context.\n      // Skip this if we're not updating due to sCU.\n      // This avoids unnecessarily recomputing memoized values.\n      const mergedContext = processChildContext(\n        workInProgress,\n        type,\n        previousContext,\n      );\n      instance.__reactInternalMemoizedMergedChildContext = mergedContext;\n\n      // Replace the old (or empty) context with the new one.\n      // It is important to unwind the context in the reverse order.\n      pop(didPerformWorkStackCursor, workInProgress);\n      pop(contextStackCursor, workInProgress);\n      // Now push the new context and mark that it has changed.\n      push(contextStackCursor, mergedContext, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    } else {\n      pop(didPerformWorkStackCursor, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    }\n  }\n}\n\nfunction findCurrentUnmaskedContext(fiber: Fiber): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n    // makes sense elsewhere\n    if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {\n      throw new Error(\n        'Expected subtree parent to be a mounted class component. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n    }\n\n    let node = fiber;\n    do {\n      switch (node.tag) {\n        case HostRoot:\n          return node.stateNode.context;\n        case ClassComponent: {\n          const Component = node.type;\n          if (isContextProvider(Component)) {\n            return node.stateNode.__reactInternalMemoizedMergedChildContext;\n          }\n          break;\n        }\n      }\n      node = node.return;\n    } while (node !== null);\n\n    throw new Error(\n      'Found unexpected detached subtree parent. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n}\n\nexport {\n  getUnmaskedContext,\n  cacheContext,\n  getMaskedContext,\n  hasContextChanged,\n  popContext,\n  popTopLevelContextObject,\n  pushTopLevelContextObject,\n  processChildContext,\n  isContextProvider,\n  pushContextProvider,\n  invalidateContextProvider,\n  findCurrentUnmaskedContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type RootTag = 0 | 1;\n\nexport const LegacyRoot = 0;\nexport const ConcurrentRoot = 1;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {SchedulerCallback} from './Scheduler';\n\nimport {\n  DiscreteEventPriority,\n  getCurrentUpdatePriority,\n  setCurrentUpdatePriority,\n} from './ReactEventPriorities.old';\nimport {ImmediatePriority, scheduleCallback} from './Scheduler';\n\nlet syncQueue: Array<SchedulerCallback> | null = null;\nlet includesLegacySyncCallbacks: boolean = false;\nlet isFlushingSyncQueue: boolean = false;\n\nexport function scheduleSyncCallback(callback: SchedulerCallback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback];\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n}\n\nexport function scheduleLegacySyncCallback(callback: SchedulerCallback) {\n  includesLegacySyncCallbacks = true;\n  scheduleSyncCallback(callback);\n}\n\nexport function flushSyncCallbacksOnlyInLegacyMode() {\n  // Only flushes the queue if there's a legacy sync callback scheduled.\n  // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So\n  // it might make more sense for the queue to be a list of roots instead of a\n  // list of generic callbacks. Then we can have two: one for legacy roots, one\n  // for concurrent roots. And this method would only flush the legacy ones.\n  if (includesLegacySyncCallbacks) {\n    flushSyncCallbacks();\n  }\n}\n\nexport function flushSyncCallbacks() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrance.\n    isFlushingSyncQueue = true;\n    let i = 0;\n    const previousUpdatePriority = getCurrentUpdatePriority();\n    try {\n      const isSync = true;\n      const queue = syncQueue;\n      // TODO: Is this necessary anymore? The only user code that runs in this\n      // queue is in the render or commit phases.\n      setCurrentUpdatePriority(DiscreteEventPriority);\n      for (; i < queue.length; i++) {\n        let callback = queue[i];\n        do {\n          callback = callback(isSync);\n        } while (callback !== null);\n      }\n      syncQueue = null;\n      includesLegacySyncCallbacks = false;\n    } catch (error) {\n      // If something throws, leave the remaining callbacks on the queue.\n      if (syncQueue !== null) {\n        syncQueue = syncQueue.slice(i + 1);\n      }\n      // Resume flushing in the next tick\n      scheduleCallback(ImmediatePriority, flushSyncCallbacks);\n      throw error;\n    } finally {\n      setCurrentUpdatePriority(previousUpdatePriority);\n      isFlushingSyncQueue = false;\n    }\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Ids are base 32 strings whose binary representation corresponds to the\n// position of a node in a tree.\n\n// Every time the tree forks into multiple children, we add additional bits to\n// the left of the sequence that represent the position of the child within the\n// current level of children.\n//\n//      00101       00010001011010101\n//      ╰─┬─╯       ╰───────┬───────╯\n//   Fork 5 of 20       Parent id\n//\n// The leading 0s are important. In the above example, you only need 3 bits to\n// represent slot 5. However, you need 5 bits to represent all the forks at\n// the current level, so we must account for the empty bits at the end.\n//\n// For this same reason, slots are 1-indexed instead of 0-indexed. Otherwise,\n// the zeroth id at a level would be indistinguishable from its parent.\n//\n// If a node has only one child, and does not materialize an id (i.e. does not\n// contain a useId hook), then we don't need to allocate any space in the\n// sequence. It's treated as a transparent indirection. For example, these two\n// trees produce the same ids:\n//\n// <>                          <>\n//   <Indirection>               <A />\n//     <A />                     <B />\n//   </Indirection>            </>\n//   <B />\n// </>\n//\n// However, we cannot skip any node that materializes an id. Otherwise, a parent\n// id that does not fork would be indistinguishable from its child id. For\n// example, this tree does not fork, but the parent and child must have\n// different ids.\n//\n// <Parent>\n//   <Child />\n// </Parent>\n//\n// To handle this scenario, every time we materialize an id, we allocate a\n// new level with a single slot. You can think of this as a fork with only one\n// prong, or an array of children with length 1.\n//\n// It's possible for the size of the sequence to exceed 32 bits, the max\n// size for bitwise operations. When this happens, we make more room by\n// converting the right part of the id to a string and storing it in an overflow\n// variable. We use a base 32 string representation, because 32 is the largest\n// power of 2 that is supported by toString(). We want the base to be large so\n// that the resulting ids are compact, and we want the base to be a power of 2\n// because every log2(base) bits corresponds to a single character, i.e. every\n// log2(32) = 5 bits. That means we can lop bits off the end 5 at a time without\n// affecting the final result.\n\nimport {getIsHydrating} from './ReactFiberHydrationContext.old';\nimport {clz32} from './clz32';\nimport {Forked, NoFlags} from './ReactFiberFlags';\n\nexport type TreeContext = {\n  id: number,\n  overflow: string,\n};\n\n// TODO: Use the unified fiber stack module instead of this local one?\n// Intentionally not using it yet to derisk the initial implementation, because\n// the way we push/pop these values is a bit unusual. If there's a mistake, I'd\n// rather the ids be wrong than crash the whole reconciler.\nconst forkStack: Array<any> = [];\nlet forkStackIndex: number = 0;\nlet treeForkProvider: Fiber | null = null;\nlet treeForkCount: number = 0;\n\nconst idStack: Array<any> = [];\nlet idStackIndex: number = 0;\nlet treeContextProvider: Fiber | null = null;\nlet treeContextId: number = 1;\nlet treeContextOverflow: string = '';\n\nexport function isForkedChild(workInProgress: Fiber): boolean {\n  warnIfNotHydrating();\n  return (workInProgress.flags & Forked) !== NoFlags;\n}\n\nexport function getForksAtLevel(workInProgress: Fiber): number {\n  warnIfNotHydrating();\n  return treeForkCount;\n}\n\nexport function getTreeId(): string {\n  const overflow = treeContextOverflow;\n  const idWithLeadingBit = treeContextId;\n  const id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);\n  return id.toString(32) + overflow;\n}\n\nexport function pushTreeFork(\n  workInProgress: Fiber,\n  totalChildren: number,\n): void {\n  // This is called right after we reconcile an array (or iterator) of child\n  // fibers, because that's the only place where we know how many children in\n  // the whole set without doing extra work later, or storing addtional\n  // information on the fiber.\n  //\n  // That's why this function is separate from pushTreeId — it's called during\n  // the render phase of the fork parent, not the child, which is where we push\n  // the other context values.\n  //\n  // In the Fizz implementation this is much simpler because the child is\n  // rendered in the same callstack as the parent.\n  //\n  // It might be better to just add a `forks` field to the Fiber type. It would\n  // make this module simpler.\n\n  warnIfNotHydrating();\n\n  forkStack[forkStackIndex++] = treeForkCount;\n  forkStack[forkStackIndex++] = treeForkProvider;\n\n  treeForkProvider = workInProgress;\n  treeForkCount = totalChildren;\n}\n\nexport function pushTreeId(\n  workInProgress: Fiber,\n  totalChildren: number,\n  index: number,\n) {\n  warnIfNotHydrating();\n\n  idStack[idStackIndex++] = treeContextId;\n  idStack[idStackIndex++] = treeContextOverflow;\n  idStack[idStackIndex++] = treeContextProvider;\n\n  treeContextProvider = workInProgress;\n\n  const baseIdWithLeadingBit = treeContextId;\n  const baseOverflow = treeContextOverflow;\n\n  // The leftmost 1 marks the end of the sequence, non-inclusive. It's not part\n  // of the id; we use it to account for leading 0s.\n  const baseLength = getBitLength(baseIdWithLeadingBit) - 1;\n  const baseId = baseIdWithLeadingBit & ~(1 << baseLength);\n\n  const slot = index + 1;\n  const length = getBitLength(totalChildren) + baseLength;\n\n  // 30 is the max length we can store without overflowing, taking into\n  // consideration the leading 1 we use to mark the end of the sequence.\n  if (length > 30) {\n    // We overflowed the bitwise-safe range. Fall back to slower algorithm.\n    // This branch assumes the length of the base id is greater than 5; it won't\n    // work for smaller ids, because you need 5 bits per character.\n    //\n    // We encode the id in multiple steps: first the base id, then the\n    // remaining digits.\n    //\n    // Each 5 bit sequence corresponds to a single base 32 character. So for\n    // example, if the current id is 23 bits long, we can convert 20 of those\n    // bits into a string of 4 characters, with 3 bits left over.\n    //\n    // First calculate how many bits in the base id represent a complete\n    // sequence of characters.\n    const numberOfOverflowBits = baseLength - (baseLength % 5);\n\n    // Then create a bitmask that selects only those bits.\n    const newOverflowBits = (1 << numberOfOverflowBits) - 1;\n\n    // Select the bits, and convert them to a base 32 string.\n    const newOverflow = (baseId & newOverflowBits).toString(32);\n\n    // Now we can remove those bits from the base id.\n    const restOfBaseId = baseId >> numberOfOverflowBits;\n    const restOfBaseLength = baseLength - numberOfOverflowBits;\n\n    // Finally, encode the rest of the bits using the normal algorithm. Because\n    // we made more room, this time it won't overflow.\n    const restOfLength = getBitLength(totalChildren) + restOfBaseLength;\n    const restOfNewBits = slot << restOfBaseLength;\n    const id = restOfNewBits | restOfBaseId;\n    const overflow = newOverflow + baseOverflow;\n\n    treeContextId = (1 << restOfLength) | id;\n    treeContextOverflow = overflow;\n  } else {\n    // Normal path\n    const newBits = slot << baseLength;\n    const id = newBits | baseId;\n    const overflow = baseOverflow;\n\n    treeContextId = (1 << length) | id;\n    treeContextOverflow = overflow;\n  }\n}\n\nexport function pushMaterializedTreeId(workInProgress: Fiber) {\n  warnIfNotHydrating();\n\n  // This component materialized an id. This will affect any ids that appear\n  // in its children.\n  const returnFiber = workInProgress.return;\n  if (returnFiber !== null) {\n    const numberOfForks = 1;\n    const slotIndex = 0;\n    pushTreeFork(workInProgress, numberOfForks);\n    pushTreeId(workInProgress, numberOfForks, slotIndex);\n  }\n}\n\nfunction getBitLength(number: number): number {\n  return 32 - clz32(number);\n}\n\nfunction getLeadingBit(id: number) {\n  return 1 << (getBitLength(id) - 1);\n}\n\nexport function popTreeContext(workInProgress: Fiber) {\n  // Restore the previous values.\n\n  // This is a bit more complicated than other context-like modules in Fiber\n  // because the same Fiber may appear on the stack multiple times and for\n  // different reasons. We have to keep popping until the work-in-progress is\n  // no longer at the top of the stack.\n\n  while (workInProgress === treeForkProvider) {\n    treeForkProvider = forkStack[--forkStackIndex];\n    forkStack[forkStackIndex] = null;\n    treeForkCount = forkStack[--forkStackIndex];\n    forkStack[forkStackIndex] = null;\n  }\n\n  while (workInProgress === treeContextProvider) {\n    treeContextProvider = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n    treeContextOverflow = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n    treeContextId = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n  }\n}\n\nexport function getSuspendedTreeContext(): TreeContext | null {\n  warnIfNotHydrating();\n  if (treeContextProvider !== null) {\n    return {\n      id: treeContextId,\n      overflow: treeContextOverflow,\n    };\n  } else {\n    return null;\n  }\n}\n\nexport function restoreSuspendedTreeContext(\n  workInProgress: Fiber,\n  suspendedContext: TreeContext,\n) {\n  warnIfNotHydrating();\n\n  idStack[idStackIndex++] = treeContextId;\n  idStack[idStackIndex++] = treeContextOverflow;\n  idStack[idStackIndex++] = treeContextProvider;\n\n  treeContextId = suspendedContext.id;\n  treeContextOverflow = suspendedContext.overflow;\n  treeContextProvider = workInProgress;\n}\n\nfunction warnIfNotHydrating() {\n  if (__DEV__) {\n    if (!getIsHydrating()) {\n      console.error(\n        'Expected to be hydrating. This is a bug in React. Please file ' +\n          'an issue.',\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport {NoMode, ConcurrentMode} from './ReactTypeOfMode';\nimport type {\n  Instance,\n  TextInstance,\n  HydratableInstance,\n  SuspenseInstance,\n  Container,\n  HostContext,\n} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {TreeContext} from './ReactFiberTreeContext.old';\nimport type {CapturedValue} from './ReactCapturedValue';\n\nimport {\n  HostComponent,\n  HostText,\n  HostRoot,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport {\n  ChildDeletion,\n  Placement,\n  Hydrating,\n  NoFlags,\n  DidCapture,\n} from './ReactFiberFlags';\n\nimport {\n  createFiberFromHostInstanceForDeletion,\n  createFiberFromDehydratedFragment,\n} from './ReactFiber.old';\nimport {\n  shouldSetTextContent,\n  supportsHydration,\n  canHydrateInstance,\n  canHydrateTextInstance,\n  canHydrateSuspenseInstance,\n  getNextHydratableSibling,\n  getFirstHydratableChild,\n  getFirstHydratableChildWithinContainer,\n  getFirstHydratableChildWithinSuspenseInstance,\n  hydrateInstance,\n  hydrateTextInstance,\n  hydrateSuspenseInstance,\n  getNextHydratableInstanceAfterSuspenseInstance,\n  shouldDeleteUnhydratedTailInstances,\n  didNotMatchHydratedContainerTextInstance,\n  didNotMatchHydratedTextInstance,\n  didNotHydrateInstanceWithinContainer,\n  didNotHydrateInstanceWithinSuspenseInstance,\n  didNotHydrateInstance,\n  didNotFindHydratableInstanceWithinContainer,\n  didNotFindHydratableTextInstanceWithinContainer,\n  didNotFindHydratableSuspenseInstanceWithinContainer,\n  didNotFindHydratableInstanceWithinSuspenseInstance,\n  didNotFindHydratableTextInstanceWithinSuspenseInstance,\n  didNotFindHydratableSuspenseInstanceWithinSuspenseInstance,\n  didNotFindHydratableInstance,\n  didNotFindHydratableTextInstance,\n  didNotFindHydratableSuspenseInstance,\n} from './ReactFiberHostConfig';\nimport {OffscreenLane} from './ReactFiberLane.old';\nimport {\n  getSuspendedTreeContext,\n  restoreSuspendedTreeContext,\n} from './ReactFiberTreeContext.old';\nimport {queueRecoverableErrors} from './ReactFiberWorkLoop.old';\n\n// The deepest Fiber on the stack involved in a hydration context.\n// This may have been an insertion or a hydration.\nlet hydrationParentFiber: null | Fiber = null;\nlet nextHydratableInstance: null | HydratableInstance = null;\nlet isHydrating: boolean = false;\n\n// This flag allows for warning supression when we expect there to be mismatches\n// due to earlier mismatches or a suspended fiber.\nlet didSuspendOrErrorDEV: boolean = false;\n\n// Hydration errors that were thrown inside this boundary\nlet hydrationErrors: Array<CapturedValue<mixed>> | null = null;\n\nfunction warnIfHydrating() {\n  if (__DEV__) {\n    if (isHydrating) {\n      console.error(\n        'We should not be hydrating here. This is a bug in React. Please file a bug.',\n      );\n    }\n  }\n}\n\nexport function markDidThrowWhileHydratingDEV() {\n  if (__DEV__) {\n    didSuspendOrErrorDEV = true;\n  }\n}\n\nexport function didSuspendOrErrorWhileHydratingDEV() {\n  if (__DEV__) {\n    return didSuspendOrErrorDEV;\n  }\n  return false;\n}\n\nfunction enterHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n\n  const parentInstance: Container = fiber.stateNode.containerInfo;\n  nextHydratableInstance = getFirstHydratableChildWithinContainer(\n    parentInstance,\n  );\n  hydrationParentFiber = fiber;\n  isHydrating = true;\n  hydrationErrors = null;\n  didSuspendOrErrorDEV = false;\n  return true;\n}\n\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(\n  fiber: Fiber,\n  suspenseInstance: SuspenseInstance,\n  treeContext: TreeContext | null,\n): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n  nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(\n    suspenseInstance,\n  );\n  hydrationParentFiber = fiber;\n  isHydrating = true;\n  hydrationErrors = null;\n  didSuspendOrErrorDEV = false;\n  if (treeContext !== null) {\n    restoreSuspendedTreeContext(fiber, treeContext);\n  }\n  return true;\n}\n\nfunction warnUnhydratedInstance(\n  returnFiber: Fiber,\n  instance: HydratableInstance,\n) {\n  if (__DEV__) {\n    switch (returnFiber.tag) {\n      case HostRoot: {\n        didNotHydrateInstanceWithinContainer(\n          returnFiber.stateNode.containerInfo,\n          instance,\n        );\n        break;\n      }\n      case HostComponent: {\n        const isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;\n        didNotHydrateInstance(\n          returnFiber.type,\n          returnFiber.memoizedProps,\n          returnFiber.stateNode,\n          instance,\n          // TODO: Delete this argument when we remove the legacy root API.\n          isConcurrentMode,\n        );\n        break;\n      }\n      case SuspenseComponent: {\n        const suspenseState: SuspenseState = returnFiber.memoizedState;\n        if (suspenseState.dehydrated !== null)\n          didNotHydrateInstanceWithinSuspenseInstance(\n            suspenseState.dehydrated,\n            instance,\n          );\n        break;\n      }\n    }\n  }\n}\n\nfunction deleteHydratableInstance(\n  returnFiber: Fiber,\n  instance: HydratableInstance,\n) {\n  warnUnhydratedInstance(returnFiber, instance);\n  const childToDelete = createFiberFromHostInstanceForDeletion();\n  childToDelete.stateNode = instance;\n  childToDelete.return = returnFiber;\n\n  const deletions = returnFiber.deletions;\n  if (deletions === null) {\n    returnFiber.deletions = [childToDelete];\n    returnFiber.flags |= ChildDeletion;\n  } else {\n    deletions.push(childToDelete);\n  }\n}\n\nfunction warnNonhydratedInstance(returnFiber: Fiber, fiber: Fiber) {\n  if (__DEV__) {\n    if (didSuspendOrErrorDEV) {\n      // Inside a boundary that already suspended. We're currently rendering the\n      // siblings of a suspended node. The mismatch may be due to the missing\n      // data, so it's probably a false positive.\n      return;\n    }\n\n    switch (returnFiber.tag) {\n      case HostRoot: {\n        const parentContainer = returnFiber.stateNode.containerInfo;\n        switch (fiber.tag) {\n          case HostComponent:\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            didNotFindHydratableInstanceWithinContainer(\n              parentContainer,\n              type,\n              props,\n            );\n            break;\n          case HostText:\n            const text = fiber.pendingProps;\n            didNotFindHydratableTextInstanceWithinContainer(\n              parentContainer,\n              text,\n            );\n            break;\n          case SuspenseComponent:\n            didNotFindHydratableSuspenseInstanceWithinContainer(\n              parentContainer,\n            );\n            break;\n        }\n        break;\n      }\n      case HostComponent: {\n        const parentType = returnFiber.type;\n        const parentProps = returnFiber.memoizedProps;\n        const parentInstance = returnFiber.stateNode;\n        switch (fiber.tag) {\n          case HostComponent: {\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            const isConcurrentMode =\n              (returnFiber.mode & ConcurrentMode) !== NoMode;\n            didNotFindHydratableInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              type,\n              props,\n              // TODO: Delete this argument when we remove the legacy root API.\n              isConcurrentMode,\n            );\n            break;\n          }\n          case HostText: {\n            const text = fiber.pendingProps;\n            const isConcurrentMode =\n              (returnFiber.mode & ConcurrentMode) !== NoMode;\n            didNotFindHydratableTextInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              text,\n              // TODO: Delete this argument when we remove the legacy root API.\n              isConcurrentMode,\n            );\n            break;\n          }\n          case SuspenseComponent: {\n            didNotFindHydratableSuspenseInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n            );\n            break;\n          }\n        }\n        break;\n      }\n      case SuspenseComponent: {\n        const suspenseState: SuspenseState = returnFiber.memoizedState;\n        const parentInstance = suspenseState.dehydrated;\n        if (parentInstance !== null)\n          switch (fiber.tag) {\n            case HostComponent:\n              const type = fiber.type;\n              const props = fiber.pendingProps;\n              didNotFindHydratableInstanceWithinSuspenseInstance(\n                parentInstance,\n                type,\n                props,\n              );\n              break;\n            case HostText:\n              const text = fiber.pendingProps;\n              didNotFindHydratableTextInstanceWithinSuspenseInstance(\n                parentInstance,\n                text,\n              );\n              break;\n            case SuspenseComponent:\n              didNotFindHydratableSuspenseInstanceWithinSuspenseInstance(\n                parentInstance,\n              );\n              break;\n          }\n        break;\n      }\n      default:\n        return;\n    }\n  }\n}\nfunction insertNonHydratedInstance(returnFiber: Fiber, fiber: Fiber) {\n  fiber.flags = (fiber.flags & ~Hydrating) | Placement;\n  warnNonhydratedInstance(returnFiber, fiber);\n}\n\nfunction tryHydrate(fiber, nextInstance) {\n  switch (fiber.tag) {\n    case HostComponent: {\n      const type = fiber.type;\n      const props = fiber.pendingProps;\n      const instance = canHydrateInstance(nextInstance, type, props);\n      if (instance !== null) {\n        fiber.stateNode = (instance: Instance);\n        hydrationParentFiber = fiber;\n        nextHydratableInstance = getFirstHydratableChild(instance);\n        return true;\n      }\n      return false;\n    }\n    case HostText: {\n      const text = fiber.pendingProps;\n      const textInstance = canHydrateTextInstance(nextInstance, text);\n      if (textInstance !== null) {\n        fiber.stateNode = (textInstance: TextInstance);\n        hydrationParentFiber = fiber;\n        // Text Instances don't have children so there's nothing to hydrate.\n        nextHydratableInstance = null;\n        return true;\n      }\n      return false;\n    }\n    case SuspenseComponent: {\n      const suspenseInstance: null | SuspenseInstance = canHydrateSuspenseInstance(\n        nextInstance,\n      );\n      if (suspenseInstance !== null) {\n        const suspenseState: SuspenseState = {\n          dehydrated: suspenseInstance,\n          treeContext: getSuspendedTreeContext(),\n          retryLane: OffscreenLane,\n        };\n        fiber.memoizedState = suspenseState;\n        // Store the dehydrated fragment as a child fiber.\n        // This simplifies the code for getHostSibling and deleting nodes,\n        // since it doesn't have to consider all Suspense boundaries and\n        // check if they're dehydrated ones or not.\n        const dehydratedFragment = createFiberFromDehydratedFragment(\n          suspenseInstance,\n        );\n        dehydratedFragment.return = fiber;\n        fiber.child = dehydratedFragment;\n        hydrationParentFiber = fiber;\n        // While a Suspense Instance does have children, we won't step into\n        // it during the first pass. Instead, we'll reenter it later.\n        nextHydratableInstance = null;\n        return true;\n      }\n      return false;\n    }\n    default:\n      return false;\n  }\n}\n\nfunction shouldClientRenderOnMismatch(fiber: Fiber) {\n  return (\n    (fiber.mode & ConcurrentMode) !== NoMode &&\n    (fiber.flags & DidCapture) === NoFlags\n  );\n}\n\nfunction throwOnHydrationMismatch(fiber: Fiber) {\n  throw new Error(\n    'Hydration failed because the initial UI does not match what was ' +\n      'rendered on the server.',\n  );\n}\n\nfunction tryToClaimNextHydratableInstance(fiber: Fiber): void {\n  if (!isHydrating) {\n    return;\n  }\n  let nextInstance = nextHydratableInstance;\n  if (!nextInstance) {\n    if (shouldClientRenderOnMismatch(fiber)) {\n      warnNonhydratedInstance((hydrationParentFiber: any), fiber);\n      throwOnHydrationMismatch(fiber);\n    }\n    // Nothing to hydrate. Make it an insertion.\n    insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n    isHydrating = false;\n    hydrationParentFiber = fiber;\n    return;\n  }\n  const firstAttemptedInstance = nextInstance;\n  if (!tryHydrate(fiber, nextInstance)) {\n    if (shouldClientRenderOnMismatch(fiber)) {\n      warnNonhydratedInstance((hydrationParentFiber: any), fiber);\n      throwOnHydrationMismatch(fiber);\n    }\n    // If we can't hydrate this instance let's try the next one.\n    // We use this as a heuristic. It's based on intuition and not data so it\n    // might be flawed or unnecessary.\n    nextInstance = getNextHydratableSibling(firstAttemptedInstance);\n    const prevHydrationParentFiber: Fiber = (hydrationParentFiber: any);\n    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {\n      // Nothing to hydrate. Make it an insertion.\n      insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n      isHydrating = false;\n      hydrationParentFiber = fiber;\n      return;\n    }\n    // We matched the next one, we'll now assume that the first one was\n    // superfluous and we'll delete it. Since we can't eagerly delete it\n    // we'll have to schedule a deletion. To do that, this node needs a dummy\n    // fiber associated with it.\n    deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);\n  }\n}\n\nfunction prepareToHydrateHostInstance(\n  fiber: Fiber,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): boolean {\n  if (!supportsHydration) {\n    throw new Error(\n      'Expected prepareToHydrateHostInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const instance: Instance = fiber.stateNode;\n  const shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;\n  const updatePayload = hydrateInstance(\n    instance,\n    fiber.type,\n    fiber.memoizedProps,\n    rootContainerInstance,\n    hostContext,\n    fiber,\n    shouldWarnIfMismatchDev,\n  );\n  // TODO: Type this specific to this type of component.\n  fiber.updateQueue = (updatePayload: any);\n  // If the update payload indicates that there is a change or if there\n  // is a new ref we mark this as an update.\n  if (updatePayload !== null) {\n    return true;\n  }\n  return false;\n}\n\nfunction prepareToHydrateHostTextInstance(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    throw new Error(\n      'Expected prepareToHydrateHostTextInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const textInstance: TextInstance = fiber.stateNode;\n  const textContent: string = fiber.memoizedProps;\n  const shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;\n  const shouldUpdate = hydrateTextInstance(\n    textInstance,\n    textContent,\n    fiber,\n    shouldWarnIfMismatchDev,\n  );\n  if (shouldUpdate) {\n    // We assume that prepareToHydrateHostTextInstance is called in a context where the\n    // hydration parent is the parent host component of this host text.\n    const returnFiber = hydrationParentFiber;\n    if (returnFiber !== null) {\n      switch (returnFiber.tag) {\n        case HostRoot: {\n          const parentContainer = returnFiber.stateNode.containerInfo;\n          const isConcurrentMode =\n            (returnFiber.mode & ConcurrentMode) !== NoMode;\n          didNotMatchHydratedContainerTextInstance(\n            parentContainer,\n            textInstance,\n            textContent,\n            // TODO: Delete this argument when we remove the legacy root API.\n            isConcurrentMode,\n          );\n          break;\n        }\n        case HostComponent: {\n          const parentType = returnFiber.type;\n          const parentProps = returnFiber.memoizedProps;\n          const parentInstance = returnFiber.stateNode;\n          const isConcurrentMode =\n            (returnFiber.mode & ConcurrentMode) !== NoMode;\n          didNotMatchHydratedTextInstance(\n            parentType,\n            parentProps,\n            parentInstance,\n            textInstance,\n            textContent,\n            // TODO: Delete this argument when we remove the legacy root API.\n            isConcurrentMode,\n          );\n          break;\n        }\n      }\n    }\n  }\n  return shouldUpdate;\n}\n\nfunction prepareToHydrateHostSuspenseInstance(fiber: Fiber): void {\n  if (!supportsHydration) {\n    throw new Error(\n      'Expected prepareToHydrateHostSuspenseInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  const suspenseInstance: null | SuspenseInstance =\n    suspenseState !== null ? suspenseState.dehydrated : null;\n\n  if (!suspenseInstance) {\n    throw new Error(\n      'Expected to have a hydrated suspense instance. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  hydrateSuspenseInstance(suspenseInstance, fiber);\n}\n\nfunction skipPastDehydratedSuspenseInstance(\n  fiber: Fiber,\n): null | HydratableInstance {\n  if (!supportsHydration) {\n    throw new Error(\n      'Expected skipPastDehydratedSuspenseInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  const suspenseInstance: null | SuspenseInstance =\n    suspenseState !== null ? suspenseState.dehydrated : null;\n\n  if (!suspenseInstance) {\n    throw new Error(\n      'Expected to have a hydrated suspense instance. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);\n}\n\nfunction popToNextHostParent(fiber: Fiber): void {\n  let parent = fiber.return;\n  while (\n    parent !== null &&\n    parent.tag !== HostComponent &&\n    parent.tag !== HostRoot &&\n    parent.tag !== SuspenseComponent\n  ) {\n    parent = parent.return;\n  }\n  hydrationParentFiber = parent;\n}\n\nfunction popHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n  if (fiber !== hydrationParentFiber) {\n    // We're deeper than the current hydration context, inside an inserted\n    // tree.\n    return false;\n  }\n  if (!isHydrating) {\n    // If we're not currently hydrating but we're in a hydration context, then\n    // we were an insertion and now need to pop up reenter hydration of our\n    // siblings.\n    popToNextHostParent(fiber);\n    isHydrating = true;\n    return false;\n  }\n\n  // If we have any remaining hydratable nodes, we need to delete them now.\n  // We only do this deeper than head and body since they tend to have random\n  // other nodes in them. We also ignore components with pure text content in\n  // side of them. We also don't delete anything inside the root container.\n  if (\n    fiber.tag !== HostRoot &&\n    (fiber.tag !== HostComponent ||\n      (shouldDeleteUnhydratedTailInstances(fiber.type) &&\n        !shouldSetTextContent(fiber.type, fiber.memoizedProps)))\n  ) {\n    let nextInstance = nextHydratableInstance;\n    if (nextInstance) {\n      if (shouldClientRenderOnMismatch(fiber)) {\n        warnIfUnhydratedTailNodes(fiber);\n        throwOnHydrationMismatch(fiber);\n      } else {\n        while (nextInstance) {\n          deleteHydratableInstance(fiber, nextInstance);\n          nextInstance = getNextHydratableSibling(nextInstance);\n        }\n      }\n    }\n  }\n  popToNextHostParent(fiber);\n  if (fiber.tag === SuspenseComponent) {\n    nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);\n  } else {\n    nextHydratableInstance = hydrationParentFiber\n      ? getNextHydratableSibling(fiber.stateNode)\n      : null;\n  }\n  return true;\n}\n\nfunction hasUnhydratedTailNodes() {\n  return isHydrating && nextHydratableInstance !== null;\n}\n\nfunction warnIfUnhydratedTailNodes(fiber: Fiber) {\n  let nextInstance = nextHydratableInstance;\n  while (nextInstance) {\n    warnUnhydratedInstance(fiber, nextInstance);\n    nextInstance = getNextHydratableSibling(nextInstance);\n  }\n}\n\nfunction resetHydrationState(): void {\n  if (!supportsHydration) {\n    return;\n  }\n\n  hydrationParentFiber = null;\n  nextHydratableInstance = null;\n  isHydrating = false;\n  didSuspendOrErrorDEV = false;\n}\n\nexport function upgradeHydrationErrorsToRecoverable(): void {\n  if (hydrationErrors !== null) {\n    // Successfully completed a forced client render. The errors that occurred\n    // during the hydration attempt are now recovered. We will log them in\n    // commit phase, once the entire tree has finished.\n    queueRecoverableErrors(hydrationErrors);\n    hydrationErrors = null;\n  }\n}\n\nfunction getIsHydrating(): boolean {\n  return isHydrating;\n}\n\nexport function queueHydrationError(error: CapturedValue<mixed>): void {\n  if (hydrationErrors === null) {\n    hydrationErrors = [error];\n  } else {\n    hydrationErrors.push(error);\n  }\n}\n\nexport {\n  warnIfHydrating,\n  enterHydrationState,\n  getIsHydrating,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  prepareToHydrateHostSuspenseInstance,\n  popHydrationState,\n  hasUnhydratedTailNodes,\n  warnIfUnhydratedTailNodes,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport type {Transition} from './ReactFiberTracingMarkerComponent.new';\n\nconst {ReactCurrentBatchConfig} = ReactSharedInternals;\n\nexport const NoTransition = null;\n\nexport function requestCurrentTransition(): Transition | null {\n  return ReactCurrentBatchConfig.transition;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {ReactPortal} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\n\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {Placement, ChildDeletion, Forked} from './ReactFiberFlags';\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\nimport {ClassComponent, HostText, HostPortal, Fragment} from './ReactWorkTags';\nimport isArray from 'shared/isArray';\nimport {warnAboutStringRefs} from 'shared/ReactFeatureFlags';\nimport {checkPropStringCoercion} from 'shared/CheckStringCoercion';\n\nimport {\n  createWorkInProgress,\n  resetWorkInProgress,\n  createFiberFromElement,\n  createFiberFromFragment,\n  createFiberFromText,\n  createFiberFromPortal,\n} from './ReactFiber.old';\nimport {isCompatibleFamilyForHotReloading} from './ReactFiberHotReloading.old';\nimport {StrictLegacyMode} from './ReactTypeOfMode';\nimport {getIsHydrating} from './ReactFiberHydrationContext.old';\nimport {pushTreeFork} from './ReactFiberTreeContext.old';\n\nlet didWarnAboutMaps;\nlet didWarnAboutGenerators;\nlet didWarnAboutStringRefs;\nlet ownerHasKeyUseWarning;\nlet ownerHasFunctionTypeWarning;\nlet warnForMissingKey = (child: mixed, returnFiber: Fiber) => {};\n\nif (__DEV__) {\n  didWarnAboutMaps = false;\n  didWarnAboutGenerators = false;\n  didWarnAboutStringRefs = {};\n\n  /**\n   * Warn if there's no key explicitly set on dynamic arrays of children or\n   * object keys are not valid. This allows us to keep track of children between\n   * updates.\n   */\n  ownerHasKeyUseWarning = {};\n  ownerHasFunctionTypeWarning = {};\n\n  warnForMissingKey = (child: mixed, returnFiber: Fiber) => {\n    if (child === null || typeof child !== 'object') {\n      return;\n    }\n    if (!child._store || child._store.validated || child.key != null) {\n      return;\n    }\n\n    if (typeof child._store !== 'object') {\n      throw new Error(\n        'React Component in warnForMissingKey should have a _store. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n    }\n\n    child._store.validated = true;\n\n    const componentName = getComponentNameFromFiber(returnFiber) || 'Component';\n\n    if (ownerHasKeyUseWarning[componentName]) {\n      return;\n    }\n    ownerHasKeyUseWarning[componentName] = true;\n\n    console.error(\n      'Each child in a list should have a unique ' +\n        '\"key\" prop. See https://reactjs.org/link/warning-keys for ' +\n        'more information.',\n    );\n  };\n}\n\nfunction isReactClass(type) {\n  return type.prototype && type.prototype.isReactComponent;\n}\n\nfunction coerceRef(\n  returnFiber: Fiber,\n  current: Fiber | null,\n  element: ReactElement,\n) {\n  const mixedRef = element.ref;\n  if (\n    mixedRef !== null &&\n    typeof mixedRef !== 'function' &&\n    typeof mixedRef !== 'object'\n  ) {\n    if (__DEV__) {\n      // TODO: Clean this up once we turn on the string ref warning for\n      // everyone, because the strict mode case will no longer be relevant\n      if (\n        (returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) &&\n        // We warn in ReactElement.js if owner and self are equal for string refs\n        // because these cannot be automatically converted to an arrow function\n        // using a codemod. Therefore, we don't have to warn about string refs again.\n        !(\n          element._owner &&\n          element._self &&\n          element._owner.stateNode !== element._self\n        ) &&\n        // Will already throw with \"Function components cannot have string refs\"\n        !(\n          element._owner &&\n          ((element._owner: any): Fiber).tag !== ClassComponent\n        ) &&\n        // Will already warn with \"Function components cannot be given refs\"\n        !(typeof element.type === 'function' && !isReactClass(element.type)) &&\n        // Will already throw with \"Element ref was specified as a string (someStringRef) but no owner was set\"\n        element._owner\n      ) {\n        const componentName =\n          getComponentNameFromFiber(returnFiber) || 'Component';\n        if (!didWarnAboutStringRefs[componentName]) {\n          if (warnAboutStringRefs) {\n            console.error(\n              'Component \"%s\" contains the string ref \"%s\". Support for string refs ' +\n                'will be removed in a future major release. We recommend using ' +\n                'useRef() or createRef() instead. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-string-ref',\n              componentName,\n              mixedRef,\n            );\n          } else {\n            console.error(\n              'A string ref, \"%s\", has been found within a strict mode tree. ' +\n                'String refs are a source of potential bugs and should be avoided. ' +\n                'We recommend using useRef() or createRef() instead. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-string-ref',\n              mixedRef,\n            );\n          }\n          didWarnAboutStringRefs[componentName] = true;\n        }\n      }\n    }\n\n    if (element._owner) {\n      const owner: ?Fiber = (element._owner: any);\n      let inst;\n      if (owner) {\n        const ownerFiber = ((owner: any): Fiber);\n\n        if (ownerFiber.tag !== ClassComponent) {\n          throw new Error(\n            'Function components cannot have string refs. ' +\n              'We recommend using useRef() instead. ' +\n              'Learn more about using refs safely here: ' +\n              'https://reactjs.org/link/strict-mode-string-ref',\n          );\n        }\n\n        inst = ownerFiber.stateNode;\n      }\n\n      if (!inst) {\n        throw new Error(\n          `Missing owner for string ref ${mixedRef}. This error is likely caused by a ` +\n            'bug in React. Please file an issue.',\n        );\n      }\n      // Assigning this to a const so Flow knows it won't change in the closure\n      const resolvedInst = inst;\n\n      if (__DEV__) {\n        checkPropStringCoercion(mixedRef, 'ref');\n      }\n      const stringRef = '' + mixedRef;\n      // Check if previous string ref matches new string ref\n      if (\n        current !== null &&\n        current.ref !== null &&\n        typeof current.ref === 'function' &&\n        current.ref._stringRef === stringRef\n      ) {\n        return current.ref;\n      }\n      const ref = function(value) {\n        const refs = resolvedInst.refs;\n        if (value === null) {\n          delete refs[stringRef];\n        } else {\n          refs[stringRef] = value;\n        }\n      };\n      ref._stringRef = stringRef;\n      return ref;\n    } else {\n      if (typeof mixedRef !== 'string') {\n        throw new Error(\n          'Expected ref to be a function, a string, an object returned by React.createRef(), or null.',\n        );\n      }\n\n      if (!element._owner) {\n        throw new Error(\n          `Element ref was specified as a string (${mixedRef}) but no owner was set. This could happen for one of` +\n            ' the following reasons:\\n' +\n            '1. You may be adding a ref to a function component\\n' +\n            \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" +\n            '3. You have multiple copies of React loaded\\n' +\n            'See https://reactjs.org/link/refs-must-have-owner for more information.',\n        );\n      }\n    }\n  }\n  return mixedRef;\n}\n\nfunction throwOnInvalidObjectType(returnFiber: Fiber, newChild: Object) {\n  const childString = Object.prototype.toString.call(newChild);\n\n  throw new Error(\n    `Objects are not valid as a React child (found: ${\n      childString === '[object Object]'\n        ? 'object with keys {' + Object.keys(newChild).join(', ') + '}'\n        : childString\n    }). ` +\n      'If you meant to render a collection of children, use an array ' +\n      'instead.',\n  );\n}\n\nfunction warnOnFunctionType(returnFiber: Fiber) {\n  if (__DEV__) {\n    const componentName = getComponentNameFromFiber(returnFiber) || 'Component';\n\n    if (ownerHasFunctionTypeWarning[componentName]) {\n      return;\n    }\n    ownerHasFunctionTypeWarning[componentName] = true;\n\n    console.error(\n      'Functions are not valid as a React child. This may happen if ' +\n        'you return a Component instead of <Component /> from render. ' +\n        'Or maybe you meant to call this function rather than return it.',\n    );\n  }\n}\n\nfunction resolveLazy(lazyType) {\n  const payload = lazyType._payload;\n  const init = lazyType._init;\n  return init(payload);\n}\n\n// This wrapper function exists because I expect to clone the code in each path\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\nfunction ChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber: Fiber, childToDelete: Fiber): void {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return;\n    }\n    const deletions = returnFiber.deletions;\n    if (deletions === null) {\n      returnFiber.deletions = [childToDelete];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(childToDelete);\n    }\n  }\n\n  function deleteRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n  ): null {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return null;\n    }\n\n    // TODO: For the shouldClone case, this could be micro-optimized a bit by\n    // assuming that after the first child we've already added everything.\n    let childToDelete = currentFirstChild;\n    while (childToDelete !== null) {\n      deleteChild(returnFiber, childToDelete);\n      childToDelete = childToDelete.sibling;\n    }\n    return null;\n  }\n\n  function mapRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber,\n  ): Map<string | number, Fiber> {\n    // Add the remaining children to a temporary map so that we can find them by\n    // keys quickly. Implicit (null) keys get added to this set with their index\n    // instead.\n    const existingChildren: Map<string | number, Fiber> = new Map();\n\n    let existingChild = currentFirstChild;\n    while (existingChild !== null) {\n      if (existingChild.key !== null) {\n        existingChildren.set(existingChild.key, existingChild);\n      } else {\n        existingChildren.set(existingChild.index, existingChild);\n      }\n      existingChild = existingChild.sibling;\n    }\n    return existingChildren;\n  }\n\n  function useFiber(fiber: Fiber, pendingProps: mixed): Fiber {\n    // We currently set sibling to null and index to 0 here because it is easy\n    // to forget to do before returning it. E.g. for the single child case.\n    const clone = createWorkInProgress(fiber, pendingProps);\n    clone.index = 0;\n    clone.sibling = null;\n    return clone;\n  }\n\n  function placeChild(\n    newFiber: Fiber,\n    lastPlacedIndex: number,\n    newIndex: number,\n  ): number {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects) {\n      // During hydration, the useId algorithm needs to know which fibers are\n      // part of a list of children (arrays, iterators).\n      newFiber.flags |= Forked;\n      return lastPlacedIndex;\n    }\n    const current = newFiber.alternate;\n    if (current !== null) {\n      const oldIndex = current.index;\n      if (oldIndex < lastPlacedIndex) {\n        // This is a move.\n        newFiber.flags |= Placement;\n        return lastPlacedIndex;\n      } else {\n        // This item can stay in place.\n        return oldIndex;\n      }\n    } else {\n      // This is an insertion.\n      newFiber.flags |= Placement;\n      return lastPlacedIndex;\n    }\n  }\n\n  function placeSingleChild(newFiber: Fiber): Fiber {\n    // This is simpler for the single child case. We only need to do a\n    // placement for inserting new children.\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\n      newFiber.flags |= Placement;\n    }\n    return newFiber;\n  }\n\n  function updateTextNode(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    textContent: string,\n    lanes: Lanes,\n  ) {\n    if (current === null || current.tag !== HostText) {\n      // Insert\n      const created = createFiberFromText(textContent, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateElement(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    element: ReactElement,\n    lanes: Lanes,\n  ): Fiber {\n    const elementType = element.type;\n    if (elementType === REACT_FRAGMENT_TYPE) {\n      return updateFragment(\n        returnFiber,\n        current,\n        element.props.children,\n        lanes,\n        element.key,\n      );\n    }\n    if (current !== null) {\n      if (\n        current.elementType === elementType ||\n        // Keep this check inline so it only runs on the false path:\n        (__DEV__\n          ? isCompatibleFamilyForHotReloading(current, element)\n          : false) ||\n        // Lazy types should reconcile their resolved type.\n        // We need to do this after the Hot Reloading check above,\n        // because hot reloading has different semantics than prod because\n        // it doesn't resuspend. So we can't let the call below suspend.\n        (typeof elementType === 'object' &&\n          elementType !== null &&\n          elementType.$$typeof === REACT_LAZY_TYPE &&\n          resolveLazy(elementType) === current.type)\n      ) {\n        // Move based on index\n        const existing = useFiber(current, element.props);\n        existing.ref = coerceRef(returnFiber, current, element);\n        existing.return = returnFiber;\n        if (__DEV__) {\n          existing._debugSource = element._source;\n          existing._debugOwner = element._owner;\n        }\n        return existing;\n      }\n    }\n    // Insert\n    const created = createFiberFromElement(element, returnFiber.mode, lanes);\n    created.ref = coerceRef(returnFiber, current, element);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function updatePortal(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    portal: ReactPortal,\n    lanes: Lanes,\n  ): Fiber {\n    if (\n      current === null ||\n      current.tag !== HostPortal ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    ) {\n      // Insert\n      const created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, portal.children || []);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateFragment(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    fragment: Iterable<*>,\n    lanes: Lanes,\n    key: null | string,\n  ): Fiber {\n    if (current === null || current.tag !== Fragment) {\n      // Insert\n      const created = createFiberFromFragment(\n        fragment,\n        returnFiber.mode,\n        lanes,\n        key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, fragment);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function createChild(\n    returnFiber: Fiber,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    if (\n      (typeof newChild === 'string' && newChild !== '') ||\n      typeof newChild === 'number'\n    ) {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      const created = createFiberFromText(\n        '' + newChild,\n        returnFiber.mode,\n        lanes,\n      );\n      created.return = returnFiber;\n      return created;\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const created = createFiberFromElement(\n            newChild,\n            returnFiber.mode,\n            lanes,\n          );\n          created.ref = coerceRef(returnFiber, null, newChild);\n          created.return = returnFiber;\n          return created;\n        }\n        case REACT_PORTAL_TYPE: {\n          const created = createFiberFromPortal(\n            newChild,\n            returnFiber.mode,\n            lanes,\n          );\n          created.return = returnFiber;\n          return created;\n        }\n        case REACT_LAZY_TYPE: {\n          const payload = newChild._payload;\n          const init = newChild._init;\n          return createChild(returnFiber, init(payload), lanes);\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const created = createFiberFromFragment(\n          newChild,\n          returnFiber.mode,\n          lanes,\n          null,\n        );\n        created.return = returnFiber;\n        return created;\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateSlot(\n    returnFiber: Fiber,\n    oldFiber: Fiber | null,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    // Update the fiber if the keys match, otherwise return null.\n\n    const key = oldFiber !== null ? oldFiber.key : null;\n\n    if (\n      (typeof newChild === 'string' && newChild !== '') ||\n      typeof newChild === 'number'\n    ) {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      if (key !== null) {\n        return null;\n      }\n      return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          if (newChild.key === key) {\n            return updateElement(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n        case REACT_PORTAL_TYPE: {\n          if (newChild.key === key) {\n            return updatePortal(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n        case REACT_LAZY_TYPE: {\n          const payload = newChild._payload;\n          const init = newChild._init;\n          return updateSlot(returnFiber, oldFiber, init(payload), lanes);\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        if (key !== null) {\n          return null;\n        }\n\n        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateFromMap(\n    existingChildren: Map<string | number, Fiber>,\n    returnFiber: Fiber,\n    newIdx: number,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    if (\n      (typeof newChild === 'string' && newChild !== '') ||\n      typeof newChild === 'number'\n    ) {\n      // Text nodes don't have keys, so we neither have to check the old nor\n      // new node for the key. If both are text nodes, they match.\n      const matchedFiber = existingChildren.get(newIdx) || null;\n      return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          return updateElement(returnFiber, matchedFiber, newChild, lanes);\n        }\n        case REACT_PORTAL_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          return updatePortal(returnFiber, matchedFiber, newChild, lanes);\n        }\n        case REACT_LAZY_TYPE:\n          const payload = newChild._payload;\n          const init = newChild._init;\n          return updateFromMap(\n            existingChildren,\n            returnFiber,\n            newIdx,\n            init(payload),\n            lanes,\n          );\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const matchedFiber = existingChildren.get(newIdx) || null;\n        return updateFragment(returnFiber, matchedFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Warns if there is a duplicate or missing key\n   */\n  function warnOnInvalidKey(\n    child: mixed,\n    knownKeys: Set<string> | null,\n    returnFiber: Fiber,\n  ): Set<string> | null {\n    if (__DEV__) {\n      if (typeof child !== 'object' || child === null) {\n        return knownKeys;\n      }\n      switch (child.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n        case REACT_PORTAL_TYPE:\n          warnForMissingKey(child, returnFiber);\n          const key = child.key;\n          if (typeof key !== 'string') {\n            break;\n          }\n          if (knownKeys === null) {\n            knownKeys = new Set();\n            knownKeys.add(key);\n            break;\n          }\n          if (!knownKeys.has(key)) {\n            knownKeys.add(key);\n            break;\n          }\n          console.error(\n            'Encountered two children with the same key, `%s`. ' +\n              'Keys should be unique so that components maintain their identity ' +\n              'across updates. Non-unique keys may cause children to be ' +\n              'duplicated and/or omitted — the behavior is unsupported and ' +\n              'could change in a future version.',\n            key,\n          );\n          break;\n        case REACT_LAZY_TYPE:\n          const payload = child._payload;\n          const init = (child._init: any);\n          warnOnInvalidKey(init(payload), knownKeys, returnFiber);\n          break;\n        default:\n          break;\n      }\n    }\n    return knownKeys;\n  }\n\n  function reconcileChildrenArray(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChildren: Array<*>,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This algorithm can't optimize by searching from both ends since we\n    // don't have backpointers on fibers. I'm trying to see how far we can get\n    // with that model. If it ends up not being worth the tradeoffs, we can\n    // add it later.\n\n    // Even with a two ended optimization, we'd want to optimize for the case\n    // where there are few changes and brute force the comparison instead of\n    // going for the Map. It'd like to explore hitting that path first in\n    // forward-only mode and only go for the Map once we notice that we need\n    // lots of look ahead. This doesn't handle reversal as well as two ended\n    // search but that's unusual. Besides, for the two ended optimization to\n    // work on Iterables, we'd need to copy the whole set.\n\n    // In this first iteration, we'll just live with hitting the bad case\n    // (adding everything to a Map) in for every insert/move.\n\n    // If you change this code, also update reconcileChildrenIterator() which\n    // uses the same algorithm.\n\n    if (__DEV__) {\n      // First, validate keys.\n      let knownKeys = null;\n      for (let i = 0; i < newChildren.length; i++) {\n        const child = newChildren[i];\n        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n      }\n    }\n\n    let resultingFirstChild: Fiber | null = null;\n    let previousNewFiber: Fiber | null = null;\n\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes,\n      );\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (newIdx === newChildren.length) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      if (getIsHydrating()) {\n        const numberOfForks = newIdx;\n        pushTreeFork(returnFiber, numberOfForks);\n      }\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; newIdx < newChildren.length; newIdx++) {\n        const newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n        if (newFiber === null) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n      if (getIsHydrating()) {\n        const numberOfForks = newIdx;\n        pushTreeFork(returnFiber, numberOfForks);\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; newIdx < newChildren.length; newIdx++) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes,\n      );\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    if (getIsHydrating()) {\n      const numberOfForks = newIdx;\n      pushTreeFork(returnFiber, numberOfForks);\n    }\n    return resultingFirstChild;\n  }\n\n  function reconcileChildrenIterator(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChildrenIterable: Iterable<*>,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This is the same implementation as reconcileChildrenArray(),\n    // but using the iterator instead.\n\n    const iteratorFn = getIteratorFn(newChildrenIterable);\n\n    if (typeof iteratorFn !== 'function') {\n      throw new Error(\n        'An object is not an iterable. This error is likely caused by a bug in ' +\n          'React. Please file an issue.',\n      );\n    }\n\n    if (__DEV__) {\n      // We don't support rendering Generators because it's a mutation.\n      // See https://github.com/facebook/react/issues/12995\n      if (\n        typeof Symbol === 'function' &&\n        // $FlowFixMe Flow doesn't know about toStringTag\n        newChildrenIterable[Symbol.toStringTag] === 'Generator'\n      ) {\n        if (!didWarnAboutGenerators) {\n          console.error(\n            'Using Generators as children is unsupported and will likely yield ' +\n              'unexpected results because enumerating a generator mutates it. ' +\n              'You may convert it to an array with `Array.from()` or the ' +\n              '`[...spread]` operator before rendering. Keep in mind ' +\n              'you might need to polyfill these features for older browsers.',\n          );\n        }\n        didWarnAboutGenerators = true;\n      }\n\n      // Warn about using Maps as children\n      if ((newChildrenIterable: any).entries === iteratorFn) {\n        if (!didWarnAboutMaps) {\n          console.error(\n            'Using Maps as children is not supported. ' +\n              'Use an array of keyed ReactElements instead.',\n          );\n        }\n        didWarnAboutMaps = true;\n      }\n\n      // First, validate keys.\n      // We'll get a different iterator later for the main pass.\n      const newChildren = iteratorFn.call(newChildrenIterable);\n      if (newChildren) {\n        let knownKeys = null;\n        let step = newChildren.next();\n        for (; !step.done; step = newChildren.next()) {\n          const child = step.value;\n          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n        }\n      }\n    }\n\n    const newChildren = iteratorFn.call(newChildrenIterable);\n\n    if (newChildren == null) {\n      throw new Error('An iterable object provided no iterator.');\n    }\n\n    let resultingFirstChild: Fiber | null = null;\n    let previousNewFiber: Fiber | null = null;\n\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n\n    let step = newChildren.next();\n    for (\n      ;\n      oldFiber !== null && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (step.done) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      if (getIsHydrating()) {\n        const numberOfForks = newIdx;\n        pushTreeFork(returnFiber, numberOfForks);\n      }\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; !step.done; newIdx++, step = newChildren.next()) {\n        const newFiber = createChild(returnFiber, step.value, lanes);\n        if (newFiber === null) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n      if (getIsHydrating()) {\n        const numberOfForks = newIdx;\n        pushTreeFork(returnFiber, numberOfForks);\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; !step.done; newIdx++, step = newChildren.next()) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        step.value,\n        lanes,\n      );\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    if (getIsHydrating()) {\n      const numberOfForks = newIdx;\n      pushTreeFork(returnFiber, numberOfForks);\n    }\n    return resultingFirstChild;\n  }\n\n  function reconcileSingleTextNode(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    textContent: string,\n    lanes: Lanes,\n  ): Fiber {\n    // There's no need to check for keys on text nodes since we don't have a\n    // way to define them.\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n      // We already have an existing node so let's just update it and delete\n      // the rest.\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n      const existing = useFiber(currentFirstChild, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n    // The existing first child is not a text node so we need to create one\n    // and delete the existing ones.\n    deleteRemainingChildren(returnFiber, currentFirstChild);\n    const created = createFiberFromText(textContent, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function reconcileSingleElement(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    element: ReactElement,\n    lanes: Lanes,\n  ): Fiber {\n    const key = element.key;\n    let child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        const elementType = element.type;\n        if (elementType === REACT_FRAGMENT_TYPE) {\n          if (child.tag === Fragment) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n            const existing = useFiber(child, element.props.children);\n            existing.return = returnFiber;\n            if (__DEV__) {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n            return existing;\n          }\n        } else {\n          if (\n            child.elementType === elementType ||\n            // Keep this check inline so it only runs on the false path:\n            (__DEV__\n              ? isCompatibleFamilyForHotReloading(child, element)\n              : false) ||\n            // Lazy types should reconcile their resolved type.\n            // We need to do this after the Hot Reloading check above,\n            // because hot reloading has different semantics than prod because\n            // it doesn't resuspend. So we can't let the call below suspend.\n            (typeof elementType === 'object' &&\n              elementType !== null &&\n              elementType.$$typeof === REACT_LAZY_TYPE &&\n              resolveLazy(elementType) === child.type)\n          ) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n            const existing = useFiber(child, element.props);\n            existing.ref = coerceRef(returnFiber, child, element);\n            existing.return = returnFiber;\n            if (__DEV__) {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n            return existing;\n          }\n        }\n        // Didn't match.\n        deleteRemainingChildren(returnFiber, child);\n        break;\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    if (element.type === REACT_FRAGMENT_TYPE) {\n      const created = createFiberFromFragment(\n        element.props.children,\n        returnFiber.mode,\n        lanes,\n        element.key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      const created = createFiberFromElement(element, returnFiber.mode, lanes);\n      created.ref = coerceRef(returnFiber, currentFirstChild, element);\n      created.return = returnFiber;\n      return created;\n    }\n  }\n\n  function reconcileSinglePortal(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    portal: ReactPortal,\n    lanes: Lanes,\n  ): Fiber {\n    const key = portal.key;\n    let child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (\n          child.tag === HostPortal &&\n          child.stateNode.containerInfo === portal.containerInfo &&\n          child.stateNode.implementation === portal.implementation\n        ) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          const existing = useFiber(child, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    const created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  // This API will tag the children with the side-effect of the reconciliation\n  // itself. They will be added to the side-effect list as we pass through the\n  // children and the parent.\n  function reconcileChildFibers(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n\n    // Handle top level unkeyed fragments as if they were arrays.\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n    // We treat the ambiguous cases above the same.\n    const isUnkeyedTopLevelFragment =\n      typeof newChild === 'object' &&\n      newChild !== null &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      newChild.key === null;\n    if (isUnkeyedTopLevelFragment) {\n      newChild = newChild.props.children;\n    }\n\n    // Handle object types\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(\n            reconcileSingleElement(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes,\n            ),\n          );\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(\n            reconcileSinglePortal(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes,\n            ),\n          );\n        case REACT_LAZY_TYPE:\n          const payload = newChild._payload;\n          const init = newChild._init;\n          // TODO: This function is supposed to be non-recursive.\n          return reconcileChildFibers(\n            returnFiber,\n            currentFirstChild,\n            init(payload),\n            lanes,\n          );\n      }\n\n      if (isArray(newChild)) {\n        return reconcileChildrenArray(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes,\n        );\n      }\n\n      if (getIteratorFn(newChild)) {\n        return reconcileChildrenIterator(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes,\n        );\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (\n      (typeof newChild === 'string' && newChild !== '') ||\n      typeof newChild === 'number'\n    ) {\n      return placeSingleChild(\n        reconcileSingleTextNode(\n          returnFiber,\n          currentFirstChild,\n          '' + newChild,\n          lanes,\n        ),\n      );\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    // Remaining cases are all treated as empty.\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n\n  return reconcileChildFibers;\n}\n\nexport const reconcileChildFibers = ChildReconciler(true);\nexport const mountChildFibers = ChildReconciler(false);\n\nexport function cloneChildFibers(\n  current: Fiber | null,\n  workInProgress: Fiber,\n): void {\n  if (current !== null && workInProgress.child !== current.child) {\n    throw new Error('Resuming work not yet implemented.');\n  }\n\n  if (workInProgress.child === null) {\n    return;\n  }\n\n  let currentChild = workInProgress.child;\n  let newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n  workInProgress.child = newChild;\n\n  newChild.return = workInProgress;\n  while (currentChild.sibling !== null) {\n    currentChild = currentChild.sibling;\n    newChild = newChild.sibling = createWorkInProgress(\n      currentChild,\n      currentChild.pendingProps,\n    );\n    newChild.return = workInProgress;\n  }\n  newChild.sibling = null;\n}\n\n// Reset a workInProgress child set to prepare it for a second pass.\nexport function resetChildFibers(workInProgress: Fiber, lanes: Lanes): void {\n  let child = workInProgress.child;\n  while (child !== null) {\n    resetWorkInProgress(child, lanes);\n    child = child.sibling;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\nimport type {\n  Fiber,\n  ContextDependency,\n  Dependencies,\n} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {SharedQueue} from './ReactFiberClassUpdateQueue.old';\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\nimport {\n  ContextProvider,\n  ClassComponent,\n  DehydratedFragment,\n} from './ReactWorkTags';\nimport {\n  NoLanes,\n  NoTimestamp,\n  isSubsetOfLanes,\n  includesSomeLane,\n  mergeLanes,\n  pickArbitraryLane,\n} from './ReactFiberLane.old';\nimport {\n  NoFlags,\n  DidPropagateContext,\n  NeedsPropagation,\n} from './ReactFiberFlags';\n\nimport is from 'shared/objectIs';\nimport {createUpdate, ForceUpdate} from './ReactFiberClassUpdateQueue.old';\nimport {markWorkInProgressReceivedUpdate} from './ReactFiberBeginWork.old';\nimport {\n  enableLazyContextPropagation,\n  enableServerContext,\n} from 'shared/ReactFeatureFlags';\nimport {REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED} from 'shared/ReactSymbols';\n\nconst valueCursor: StackCursor<mixed> = createCursor(null);\n\nlet rendererSigil;\nif (__DEV__) {\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\nlet currentlyRenderingFiber: Fiber | null = null;\nlet lastContextDependency: ContextDependency<mixed> | null = null;\nlet lastFullyObservedContext: ReactContext<any> | null = null;\n\nlet isDisallowedContextReadInDEV: boolean = false;\n\nexport function resetContextDependencies(): void {\n  // This is called right before React yields execution, to ensure `readContext`\n  // cannot be called outside the render phase.\n  currentlyRenderingFiber = null;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function enterDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = true;\n  }\n}\n\nexport function exitDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function pushProvider<T>(\n  providerFiber: Fiber,\n  context: ReactContext<T>,\n  nextValue: T,\n): void {\n  if (isPrimaryRenderer) {\n    push(valueCursor, context._currentValue, providerFiber);\n\n    context._currentValue = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer !== undefined &&\n        context._currentRenderer !== null &&\n        context._currentRenderer !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer = rendererSigil;\n    }\n  } else {\n    push(valueCursor, context._currentValue2, providerFiber);\n\n    context._currentValue2 = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer2 !== undefined &&\n        context._currentRenderer2 !== null &&\n        context._currentRenderer2 !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n}\n\nexport function popProvider(\n  context: ReactContext<any>,\n  providerFiber: Fiber,\n): void {\n  const currentValue = valueCursor.current;\n  pop(valueCursor, providerFiber);\n  if (isPrimaryRenderer) {\n    if (\n      enableServerContext &&\n      currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\n    ) {\n      context._currentValue = context._defaultValue;\n    } else {\n      context._currentValue = currentValue;\n    }\n  } else {\n    if (\n      enableServerContext &&\n      currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\n    ) {\n      context._currentValue2 = context._defaultValue;\n    } else {\n      context._currentValue2 = currentValue;\n    }\n  }\n}\n\nexport function scheduleContextWorkOnParentPath(\n  parent: Fiber | null,\n  renderLanes: Lanes,\n  propagationRoot: Fiber,\n) {\n  // Update the child lanes of all the ancestors, including the alternates.\n  let node = parent;\n  while (node !== null) {\n    const alternate = node.alternate;\n    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n      node.childLanes = mergeLanes(node.childLanes, renderLanes);\n      if (alternate !== null) {\n        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n      }\n    } else if (\n      alternate !== null &&\n      !isSubsetOfLanes(alternate.childLanes, renderLanes)\n    ) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n    } else {\n      // Neither alternate was updated.\n      // Normally, this would mean that the rest of the\n      // ancestor path already has sufficient priority.\n      // However, this is not necessarily true inside offscreen\n      // or fallback trees because childLanes may be inconsistent\n      // with the surroundings. This is why we continue the loop.\n    }\n    if (node === propagationRoot) {\n      break;\n    }\n    node = node.return;\n  }\n  if (__DEV__) {\n    if (node !== propagationRoot) {\n      console.error(\n        'Expected to find the propagation root when scheduling context work. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n    }\n  }\n}\n\nexport function propagateContextChange<T>(\n  workInProgress: Fiber,\n  context: ReactContext<T>,\n  renderLanes: Lanes,\n): void {\n  if (enableLazyContextPropagation) {\n    // TODO: This path is only used by Cache components. Update\n    // lazilyPropagateParentContextChanges to look for Cache components so they\n    // can take advantage of lazy propagation.\n    const forcePropagateEntireTree = true;\n    propagateContextChanges(\n      workInProgress,\n      [context],\n      renderLanes,\n      forcePropagateEntireTree,\n    );\n  } else {\n    propagateContextChange_eager(workInProgress, context, renderLanes);\n  }\n}\n\nfunction propagateContextChange_eager<T>(\n  workInProgress: Fiber,\n  context: ReactContext<T>,\n  renderLanes: Lanes,\n): void {\n  // Only used by eager implementation\n  if (enableLazyContextPropagation) {\n    return;\n  }\n  let fiber = workInProgress.child;\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n  while (fiber !== null) {\n    let nextFiber;\n\n    // Visit this fiber.\n    const list = fiber.dependencies;\n    if (list !== null) {\n      nextFiber = fiber.child;\n\n      let dependency = list.firstContext;\n      while (dependency !== null) {\n        // Check if the context matches.\n        if (dependency.context === context) {\n          // Match! Schedule an update on this fiber.\n          if (fiber.tag === ClassComponent) {\n            // Schedule a force update on the work-in-progress.\n            const lane = pickArbitraryLane(renderLanes);\n            const update = createUpdate(NoTimestamp, lane);\n            update.tag = ForceUpdate;\n            // TODO: Because we don't have a work-in-progress, this will add the\n            // update to the current fiber, too, which means it will persist even if\n            // this render is thrown away. Since it's a race condition, not sure it's\n            // worth fixing.\n\n            // Inlined `enqueueUpdate` to remove interleaved update check\n            const updateQueue = fiber.updateQueue;\n            if (updateQueue === null) {\n              // Only occurs if the fiber has been unmounted.\n            } else {\n              const sharedQueue: SharedQueue<any> = (updateQueue: any).shared;\n              const pending = sharedQueue.pending;\n              if (pending === null) {\n                // This is the first update. Create a circular list.\n                update.next = update;\n              } else {\n                update.next = pending.next;\n                pending.next = update;\n              }\n              sharedQueue.pending = update;\n            }\n          }\n\n          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n          const alternate = fiber.alternate;\n          if (alternate !== null) {\n            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n          }\n          scheduleContextWorkOnParentPath(\n            fiber.return,\n            renderLanes,\n            workInProgress,\n          );\n\n          // Mark the updated lanes on the list, too.\n          list.lanes = mergeLanes(list.lanes, renderLanes);\n\n          // Since we already found a match, we can stop traversing the\n          // dependency list.\n          break;\n        }\n        dependency = dependency.next;\n      }\n    } else if (fiber.tag === ContextProvider) {\n      // Don't scan deeper if this is a matching provider\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n    } else if (fiber.tag === DehydratedFragment) {\n      // If a dehydrated suspense boundary is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates.\n      const parentSuspense = fiber.return;\n\n      if (parentSuspense === null) {\n        throw new Error(\n          'We just came from a parent so we must have had a parent. This is a bug in React.',\n        );\n      }\n\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n      const alternate = parentSuspense.alternate;\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n      }\n      // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childLanes on\n      // this fiber to indicate that a context has changed.\n      scheduleContextWorkOnParentPath(\n        parentSuspense,\n        renderLanes,\n        workInProgress,\n      );\n      nextFiber = fiber.sibling;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n        const sibling = nextFiber.sibling;\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        }\n        // No more siblings. Traverse up.\n        nextFiber = nextFiber.return;\n      }\n    }\n    fiber = nextFiber;\n  }\n}\n\nfunction propagateContextChanges<T>(\n  workInProgress: Fiber,\n  contexts: Array<any>,\n  renderLanes: Lanes,\n  forcePropagateEntireTree: boolean,\n): void {\n  // Only used by lazy implementation\n  if (!enableLazyContextPropagation) {\n    return;\n  }\n  let fiber = workInProgress.child;\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n  while (fiber !== null) {\n    let nextFiber;\n\n    // Visit this fiber.\n    const list = fiber.dependencies;\n    if (list !== null) {\n      nextFiber = fiber.child;\n\n      let dep = list.firstContext;\n      findChangedDep: while (dep !== null) {\n        // Assigning these to constants to help Flow\n        const dependency = dep;\n        const consumer = fiber;\n        findContext: for (let i = 0; i < contexts.length; i++) {\n          const context: ReactContext<T> = contexts[i];\n          // Check if the context matches.\n          // TODO: Compare selected values to bail out early.\n          if (dependency.context === context) {\n            // Match! Schedule an update on this fiber.\n\n            // In the lazy implementation, don't mark a dirty flag on the\n            // dependency itself. Not all changes are propagated, so we can't\n            // rely on the propagation function alone to determine whether\n            // something has changed; the consumer will check. In the future, we\n            // could add back a dirty flag as an optimization to avoid double\n            // checking, but until we have selectors it's not really worth\n            // the trouble.\n            consumer.lanes = mergeLanes(consumer.lanes, renderLanes);\n            const alternate = consumer.alternate;\n            if (alternate !== null) {\n              alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n            }\n            scheduleContextWorkOnParentPath(\n              consumer.return,\n              renderLanes,\n              workInProgress,\n            );\n\n            if (!forcePropagateEntireTree) {\n              // During lazy propagation, when we find a match, we can defer\n              // propagating changes to the children, because we're going to\n              // visit them during render. We should continue propagating the\n              // siblings, though\n              nextFiber = null;\n            }\n\n            // Since we already found a match, we can stop traversing the\n            // dependency list.\n            break findChangedDep;\n          }\n        }\n        dep = dependency.next;\n      }\n    } else if (fiber.tag === DehydratedFragment) {\n      // If a dehydrated suspense boundary is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates.\n      const parentSuspense = fiber.return;\n\n      if (parentSuspense === null) {\n        throw new Error(\n          'We just came from a parent so we must have had a parent. This is a bug in React.',\n        );\n      }\n\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n      const alternate = parentSuspense.alternate;\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n      }\n      // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childLanes on\n      // this fiber to indicate that a context has changed.\n      scheduleContextWorkOnParentPath(\n        parentSuspense,\n        renderLanes,\n        workInProgress,\n      );\n      nextFiber = null;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n        const sibling = nextFiber.sibling;\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        }\n        // No more siblings. Traverse up.\n        nextFiber = nextFiber.return;\n      }\n    }\n    fiber = nextFiber;\n  }\n}\n\nexport function lazilyPropagateParentContextChanges(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const forcePropagateEntireTree = false;\n  propagateParentContextChanges(\n    current,\n    workInProgress,\n    renderLanes,\n    forcePropagateEntireTree,\n  );\n}\n\n// Used for propagating a deferred tree (Suspense, Offscreen). We must propagate\n// to the entire subtree, because we won't revisit it until after the current\n// render has completed, at which point we'll have lost track of which providers\n// have changed.\nexport function propagateParentContextChangesToDeferredTree(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const forcePropagateEntireTree = true;\n  propagateParentContextChanges(\n    current,\n    workInProgress,\n    renderLanes,\n    forcePropagateEntireTree,\n  );\n}\n\nfunction propagateParentContextChanges(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n  forcePropagateEntireTree: boolean,\n) {\n  if (!enableLazyContextPropagation) {\n    return;\n  }\n\n  // Collect all the parent providers that changed. Since this is usually small\n  // number, we use an Array instead of Set.\n  let contexts = null;\n  let parent = workInProgress;\n  let isInsidePropagationBailout = false;\n  while (parent !== null) {\n    if (!isInsidePropagationBailout) {\n      if ((parent.flags & NeedsPropagation) !== NoFlags) {\n        isInsidePropagationBailout = true;\n      } else if ((parent.flags & DidPropagateContext) !== NoFlags) {\n        break;\n      }\n    }\n\n    if (parent.tag === ContextProvider) {\n      const currentParent = parent.alternate;\n\n      if (currentParent === null) {\n        throw new Error('Should have a current fiber. This is a bug in React.');\n      }\n\n      const oldProps = currentParent.memoizedProps;\n      if (oldProps !== null) {\n        const providerType: ReactProviderType<any> = parent.type;\n        const context: ReactContext<any> = providerType._context;\n\n        const newProps = parent.pendingProps;\n        const newValue = newProps.value;\n\n        const oldValue = oldProps.value;\n\n        if (!is(newValue, oldValue)) {\n          if (contexts !== null) {\n            contexts.push(context);\n          } else {\n            contexts = [context];\n          }\n        }\n      }\n    }\n    parent = parent.return;\n  }\n\n  if (contexts !== null) {\n    // If there were any changed providers, search through the children and\n    // propagate their changes.\n    propagateContextChanges(\n      workInProgress,\n      contexts,\n      renderLanes,\n      forcePropagateEntireTree,\n    );\n  }\n\n  // This is an optimization so that we only propagate once per subtree. If a\n  // deeply nested child bails out, and it calls this propagation function, it\n  // uses this flag to know that the remaining ancestor providers have already\n  // been propagated.\n  //\n  // NOTE: This optimization is only necessary because we sometimes enter the\n  // begin phase of nodes that don't have any work scheduled on them —\n  // specifically, the siblings of a node that _does_ have scheduled work. The\n  // siblings will bail out and call this function again, even though we already\n  // propagated content changes to it and its subtree. So we use this flag to\n  // mark that the parent providers already propagated.\n  //\n  // Unfortunately, though, we need to ignore this flag when we're inside a\n  // tree whose context propagation was deferred — that's what the\n  // `NeedsPropagation` flag is for.\n  //\n  // If we could instead bail out before entering the siblings' begin phase,\n  // then we could remove both `DidPropagateContext` and `NeedsPropagation`.\n  // Consider this as part of the next refactor to the fiber tree structure.\n  workInProgress.flags |= DidPropagateContext;\n}\n\nexport function checkIfContextChanged(currentDependencies: Dependencies) {\n  if (!enableLazyContextPropagation) {\n    return false;\n  }\n  // Iterate over the current dependencies to see if something changed. This\n  // only gets called if props and state has already bailed out, so it's a\n  // relatively uncommon path, except at the root of a changed subtree.\n  // Alternatively, we could move these comparisons into `readContext`, but\n  // that's a much hotter path, so I think this is an appropriate trade off.\n  let dependency = currentDependencies.firstContext;\n  while (dependency !== null) {\n    const context = dependency.context;\n    const newValue = isPrimaryRenderer\n      ? context._currentValue\n      : context._currentValue2;\n    const oldValue = dependency.memoizedValue;\n    if (!is(newValue, oldValue)) {\n      return true;\n    }\n    dependency = dependency.next;\n  }\n  return false;\n}\n\nexport function prepareToReadContext(\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): void {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n\n  const dependencies = workInProgress.dependencies;\n  if (dependencies !== null) {\n    if (enableLazyContextPropagation) {\n      // Reset the work-in-progress list\n      dependencies.firstContext = null;\n    } else {\n      const firstContext = dependencies.firstContext;\n      if (firstContext !== null) {\n        if (includesSomeLane(dependencies.lanes, renderLanes)) {\n          // Context list has a pending update. Mark that this fiber performed work.\n          markWorkInProgressReceivedUpdate();\n        }\n        // Reset the work-in-progress list\n        dependencies.firstContext = null;\n      }\n    }\n  }\n}\n\nexport function readContext<T>(context: ReactContext<T>): T {\n  if (__DEV__) {\n    // This warning would fire if you read context inside a Hook like useMemo.\n    // Unlike the class check below, it's not enforced in production for perf.\n    if (isDisallowedContextReadInDEV) {\n      console.error(\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n    }\n  }\n\n  const value = isPrimaryRenderer\n    ? context._currentValue\n    : context._currentValue2;\n\n  if (lastFullyObservedContext === context) {\n    // Nothing to do. We already observe everything in this context.\n  } else {\n    const contextItem = {\n      context: ((context: any): ReactContext<mixed>),\n      memoizedValue: value,\n      next: null,\n    };\n\n    if (lastContextDependency === null) {\n      if (currentlyRenderingFiber === null) {\n        throw new Error(\n          'Context can only be read while React is rendering. ' +\n            'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n            'In function components, you can read it directly in the function body, but not ' +\n            'inside Hooks like useReducer() or useMemo().',\n        );\n      }\n\n      // This is the first dependency for this component. Create a new list.\n      lastContextDependency = contextItem;\n      currentlyRenderingFiber.dependencies = {\n        lanes: NoLanes,\n        firstContext: contextItem,\n      };\n      if (enableLazyContextPropagation) {\n        currentlyRenderingFiber.flags |= NeedsPropagation;\n      }\n    } else {\n      // Append a new context item.\n      lastContextDependency = lastContextDependency.next = contextItem;\n    }\n  }\n  return value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {\n  UpdateQueue as HookQueue,\n  Update as HookUpdate,\n} from './ReactFiberHooks.old';\nimport type {\n  SharedQueue as ClassQueue,\n  Update as ClassUpdate,\n} from './ReactFiberClassUpdateQueue.old';\nimport type {Lane} from './ReactFiberLane.old';\n\nimport {warnAboutUpdateOnNotYetMountedFiberInDEV} from './ReactFiberWorkLoop.old';\nimport {mergeLanes} from './ReactFiberLane.old';\nimport {NoFlags, Placement, Hydrating} from './ReactFiberFlags';\nimport {HostRoot} from './ReactWorkTags';\n\n// An array of all update queues that received updates during the current\n// render. When this render exits, either because it finishes or because it is\n// interrupted, the interleaved updates will be transferred onto the main part\n// of the queue.\nlet concurrentQueues: Array<\n  HookQueue<any, any> | ClassQueue<any>,\n> | null = null;\n\nexport function pushConcurrentUpdateQueue(\n  queue: HookQueue<any, any> | ClassQueue<any>,\n) {\n  if (concurrentQueues === null) {\n    concurrentQueues = [queue];\n  } else {\n    concurrentQueues.push(queue);\n  }\n}\n\nexport function finishQueueingConcurrentUpdates() {\n  // Transfer the interleaved updates onto the main queue. Each queue has a\n  // `pending` field and an `interleaved` field. When they are not null, they\n  // point to the last node in a circular linked list. We need to append the\n  // interleaved list to the end of the pending list by joining them into a\n  // single, circular list.\n  if (concurrentQueues !== null) {\n    for (let i = 0; i < concurrentQueues.length; i++) {\n      const queue = concurrentQueues[i];\n      const lastInterleavedUpdate = queue.interleaved;\n      if (lastInterleavedUpdate !== null) {\n        queue.interleaved = null;\n        const firstInterleavedUpdate = lastInterleavedUpdate.next;\n        const lastPendingUpdate = queue.pending;\n        if (lastPendingUpdate !== null) {\n          const firstPendingUpdate = lastPendingUpdate.next;\n          lastPendingUpdate.next = (firstInterleavedUpdate: any);\n          lastInterleavedUpdate.next = (firstPendingUpdate: any);\n        }\n        queue.pending = (lastInterleavedUpdate: any);\n      }\n    }\n    concurrentQueues = null;\n  }\n}\n\nexport function enqueueConcurrentHookUpdate<S, A>(\n  fiber: Fiber,\n  queue: HookQueue<S, A>,\n  update: HookUpdate<S, A>,\n  lane: Lane,\n) {\n  const interleaved = queue.interleaved;\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n    // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n  queue.interleaved = update;\n\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n}\n\nexport function enqueueConcurrentHookUpdateAndEagerlyBailout<S, A>(\n  fiber: Fiber,\n  queue: HookQueue<S, A>,\n  update: HookUpdate<S, A>,\n  lane: Lane,\n): void {\n  const interleaved = queue.interleaved;\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n    // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n  queue.interleaved = update;\n}\n\nexport function enqueueConcurrentClassUpdate<State>(\n  fiber: Fiber,\n  queue: ClassQueue<State>,\n  update: ClassUpdate<State>,\n  lane: Lane,\n) {\n  const interleaved = queue.interleaved;\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n    // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n  queue.interleaved = update;\n\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n}\n\nexport function enqueueConcurrentRenderForLane(fiber: Fiber, lane: Lane) {\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n}\n\n// Calling this function outside this module should only be done for backwards\n// compatibility and should always be accompanied by a warning.\nexport const unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;\n\nfunction markUpdateLaneFromFiberToRoot(\n  sourceFiber: Fiber,\n  lane: Lane,\n): FiberRoot | null {\n  // Update the source fiber's lanes\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n  let alternate = sourceFiber.alternate;\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, lane);\n  }\n  if (__DEV__) {\n    if (\n      alternate === null &&\n      (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags\n    ) {\n      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n    }\n  }\n  // Walk the parent path to the root and update the child lanes.\n  let node = sourceFiber;\n  let parent = sourceFiber.return;\n  while (parent !== null) {\n    parent.childLanes = mergeLanes(parent.childLanes, lane);\n    alternate = parent.alternate;\n    if (alternate !== null) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n    } else {\n      if (__DEV__) {\n        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n        }\n      }\n    }\n    node = parent;\n    parent = parent.return;\n  }\n  if (node.tag === HostRoot) {\n    const root: FiberRoot = node.stateNode;\n    return root;\n  } else {\n    return null;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// UpdateQueue is a linked list of prioritized updates.\n//\n// Like fibers, update queues come in pairs: a current queue, which represents\n// the visible state of the screen, and a work-in-progress queue, which can be\n// mutated and processed asynchronously before it is committed — a form of\n// double buffering. If a work-in-progress render is discarded before finishing,\n// we create a new work-in-progress by cloning the current queue.\n//\n// Both queues share a persistent, singly-linked list structure. To schedule an\n// update, we append it to the end of both queues. Each queue maintains a\n// pointer to first update in the persistent list that hasn't been processed.\n// The work-in-progress pointer always has a position equal to or greater than\n// the current queue, since we always work on that one. The current queue's\n// pointer is only updated during the commit phase, when we swap in the\n// work-in-progress.\n//\n// For example:\n//\n//   Current pointer:           A - B - C - D - E - F\n//   Work-in-progress pointer:              D - E - F\n//                                          ^\n//                                          The work-in-progress queue has\n//                                          processed more updates than current.\n//\n// The reason we append to both queues is because otherwise we might drop\n// updates without ever processing them. For example, if we only add updates to\n// the work-in-progress queue, some updates could be lost whenever a work-in\n// -progress render restarts by cloning from current. Similarly, if we only add\n// updates to the current queue, the updates will be lost whenever an already\n// in-progress queue commits and swaps with the current queue. However, by\n// adding to both queues, we guarantee that the update will be part of the next\n// work-in-progress. (And because the work-in-progress queue becomes the\n// current queue once it commits, there's no danger of applying the same\n// update twice.)\n//\n// Prioritization\n// --------------\n//\n// Updates are not sorted by priority, but by insertion; new updates are always\n// appended to the end of the list.\n//\n// The priority is still important, though. When processing the update queue\n// during the render phase, only the updates with sufficient priority are\n// included in the result. If we skip an update because it has insufficient\n// priority, it remains in the queue to be processed later, during a lower\n// priority render. Crucially, all updates subsequent to a skipped update also\n// remain in the queue *regardless of their priority*. That means high priority\n// updates are sometimes processed twice, at two separate priorities. We also\n// keep track of a base state, that represents the state before the first\n// update in the queue is applied.\n//\n// For example:\n//\n//   Given a base state of '', and the following queue of updates\n//\n//     A1 - B2 - C1 - D2\n//\n//   where the number indicates the priority, and the update is applied to the\n//   previous state by appending a letter, React will process these updates as\n//   two separate renders, one per distinct priority level:\n//\n//   First render, at priority 1:\n//     Base state: ''\n//     Updates: [A1, C1]\n//     Result state: 'AC'\n//\n//   Second render, at priority 2:\n//     Base state: 'A'            <-  The base state does not include C1,\n//                                    because B2 was skipped.\n//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2\n//     Result state: 'ABCD'\n//\n// Because we process updates in insertion order, and rebase high priority\n// updates when preceding updates are skipped, the final result is deterministic\n// regardless of priority. Intermediate state may vary according to system\n// resources, but the final state is always the same.\n\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\n\nimport {\n  NoLane,\n  NoLanes,\n  isSubsetOfLanes,\n  mergeLanes,\n  isTransitionLane,\n  intersectLanes,\n  markRootEntangled,\n} from './ReactFiberLane.old';\nimport {\n  enterDisallowedContextReadInDEV,\n  exitDisallowedContextReadInDEV,\n} from './ReactFiberNewContext.old';\nimport {Callback, ShouldCapture, DidCapture} from './ReactFiberFlags';\n\nimport {debugRenderPhaseSideEffectsForStrictMode} from 'shared/ReactFeatureFlags';\n\nimport {StrictLegacyMode} from './ReactTypeOfMode';\nimport {\n  markSkippedUpdateLanes,\n  isUnsafeClassRenderPhaseUpdate,\n} from './ReactFiberWorkLoop.old';\nimport {\n  enqueueConcurrentClassUpdate,\n  unsafe_markUpdateLaneFromFiberToRoot,\n} from './ReactFiberConcurrentUpdates.old';\nimport {setIsStrictModeForDevtools} from './ReactFiberDevToolsHook.old';\n\nimport assign from 'shared/assign';\n\nexport type Update<State> = {|\n  // TODO: Temporary field. Will remove this by storing a map of\n  // transition -> event time on the root.\n  eventTime: number,\n  lane: Lane,\n\n  tag: 0 | 1 | 2 | 3,\n  payload: any,\n  callback: (() => mixed) | null,\n\n  next: Update<State> | null,\n|};\n\nexport type SharedQueue<State> = {|\n  pending: Update<State> | null,\n  interleaved: Update<State> | null,\n  lanes: Lanes,\n|};\n\nexport type UpdateQueue<State> = {|\n  baseState: State,\n  firstBaseUpdate: Update<State> | null,\n  lastBaseUpdate: Update<State> | null,\n  shared: SharedQueue<State>,\n  effects: Array<Update<State>> | null,\n|};\n\nexport const UpdateState = 0;\nexport const ReplaceState = 1;\nexport const ForceUpdate = 2;\nexport const CaptureUpdate = 3;\n\n// Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\nlet hasForceUpdate = false;\n\nlet didWarnUpdateInsideUpdate;\nlet currentlyProcessingQueue;\nexport let resetCurrentlyProcessingQueue;\nif (__DEV__) {\n  didWarnUpdateInsideUpdate = false;\n  currentlyProcessingQueue = null;\n  resetCurrentlyProcessingQueue = () => {\n    currentlyProcessingQueue = null;\n  };\n}\n\nexport function initializeUpdateQueue<State>(fiber: Fiber): void {\n  const queue: UpdateQueue<State> = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: {\n      pending: null,\n      interleaved: null,\n      lanes: NoLanes,\n    },\n    effects: null,\n  };\n  fiber.updateQueue = queue;\n}\n\nexport function cloneUpdateQueue<State>(\n  current: Fiber,\n  workInProgress: Fiber,\n): void {\n  // Clone the update queue from current. Unless it's already a clone.\n  const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n  const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n  if (queue === currentQueue) {\n    const clone: UpdateQueue<State> = {\n      baseState: currentQueue.baseState,\n      firstBaseUpdate: currentQueue.firstBaseUpdate,\n      lastBaseUpdate: currentQueue.lastBaseUpdate,\n      shared: currentQueue.shared,\n      effects: currentQueue.effects,\n    };\n    workInProgress.updateQueue = clone;\n  }\n}\n\nexport function createUpdate(eventTime: number, lane: Lane): Update<*> {\n  const update: Update<*> = {\n    eventTime,\n    lane,\n\n    tag: UpdateState,\n    payload: null,\n    callback: null,\n\n    next: null,\n  };\n  return update;\n}\n\nexport function enqueueUpdate<State>(\n  fiber: Fiber,\n  update: Update<State>,\n  lane: Lane,\n): FiberRoot | null {\n  const updateQueue = fiber.updateQueue;\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return null;\n  }\n\n  const sharedQueue: SharedQueue<State> = (updateQueue: any).shared;\n\n  if (__DEV__) {\n    if (\n      currentlyProcessingQueue === sharedQueue &&\n      !didWarnUpdateInsideUpdate\n    ) {\n      console.error(\n        'An update (setState, replaceState, or forceUpdate) was scheduled ' +\n          'from inside an update function. Update functions should be pure, ' +\n          'with zero side-effects. Consider using componentDidUpdate or a ' +\n          'callback.',\n      );\n      didWarnUpdateInsideUpdate = true;\n    }\n  }\n\n  if (isUnsafeClassRenderPhaseUpdate(fiber)) {\n    // This is an unsafe render phase update. Add directly to the update\n    // queue so we can process it immediately during the current render.\n    const pending = sharedQueue.pending;\n    if (pending === null) {\n      // This is the first update. Create a circular list.\n      update.next = update;\n    } else {\n      update.next = pending.next;\n      pending.next = update;\n    }\n    sharedQueue.pending = update;\n\n    // Update the childLanes even though we're most likely already rendering\n    // this fiber. This is for backwards compatibility in the case where you\n    // update a different component during render phase than the one that is\n    // currently renderings (a pattern that is accompanied by a warning).\n    return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);\n  } else {\n    return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);\n  }\n}\n\nexport function entangleTransitions(root: FiberRoot, fiber: Fiber, lane: Lane) {\n  const updateQueue = fiber.updateQueue;\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  const sharedQueue: SharedQueue<mixed> = (updateQueue: any).shared;\n  if (isTransitionLane(lane)) {\n    let queueLanes = sharedQueue.lanes;\n\n    // If any entangled lanes are no longer pending on the root, then they must\n    // have finished. We can remove them from the shared queue, which represents\n    // a superset of the actually pending lanes. In some cases we may entangle\n    // more than we need to, but that's OK. In fact it's worse if we *don't*\n    // entangle when we should.\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes);\n\n    // Entangle the new transition lane with the other transition lanes.\n    const newQueueLanes = mergeLanes(queueLanes, lane);\n    sharedQueue.lanes = newQueueLanes;\n    // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n    markRootEntangled(root, newQueueLanes);\n  }\n}\n\nexport function enqueueCapturedUpdate<State>(\n  workInProgress: Fiber,\n  capturedUpdate: Update<State>,\n) {\n  // Captured updates are updates that are thrown by a child during the render\n  // phase. They should be discarded if the render is aborted. Therefore,\n  // we should only put them on the work-in-progress queue, not the current one.\n  let queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n\n  // Check if the work-in-progress queue is a clone.\n  const current = workInProgress.alternate;\n  if (current !== null) {\n    const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n    if (queue === currentQueue) {\n      // The work-in-progress queue is the same as current. This happens when\n      // we bail out on a parent fiber that then captures an error thrown by\n      // a child. Since we want to append the update only to the work-in\n      // -progress queue, we need to clone the updates. We usually clone during\n      // processUpdateQueue, but that didn't happen in this case because we\n      // skipped over the parent when we bailed out.\n      let newFirst = null;\n      let newLast = null;\n      const firstBaseUpdate = queue.firstBaseUpdate;\n      if (firstBaseUpdate !== null) {\n        // Loop through the updates and clone them.\n        let update = firstBaseUpdate;\n        do {\n          const clone: Update<State> = {\n            eventTime: update.eventTime,\n            lane: update.lane,\n\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n\n            next: null,\n          };\n          if (newLast === null) {\n            newFirst = newLast = clone;\n          } else {\n            newLast.next = clone;\n            newLast = clone;\n          }\n          update = update.next;\n        } while (update !== null);\n\n        // Append the captured update the end of the cloned list.\n        if (newLast === null) {\n          newFirst = newLast = capturedUpdate;\n        } else {\n          newLast.next = capturedUpdate;\n          newLast = capturedUpdate;\n        }\n      } else {\n        // There are no base updates.\n        newFirst = newLast = capturedUpdate;\n      }\n      queue = {\n        baseState: currentQueue.baseState,\n        firstBaseUpdate: newFirst,\n        lastBaseUpdate: newLast,\n        shared: currentQueue.shared,\n        effects: currentQueue.effects,\n      };\n      workInProgress.updateQueue = queue;\n      return;\n    }\n  }\n\n  // Append the update to the end of the list.\n  const lastBaseUpdate = queue.lastBaseUpdate;\n  if (lastBaseUpdate === null) {\n    queue.firstBaseUpdate = capturedUpdate;\n  } else {\n    lastBaseUpdate.next = capturedUpdate;\n  }\n  queue.lastBaseUpdate = capturedUpdate;\n}\n\nfunction getStateFromUpdate<State>(\n  workInProgress: Fiber,\n  queue: UpdateQueue<State>,\n  update: Update<State>,\n  prevState: State,\n  nextProps: any,\n  instance: any,\n): any {\n  switch (update.tag) {\n    case ReplaceState: {\n      const payload = update.payload;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n        }\n        const nextState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          if (\n            debugRenderPhaseSideEffectsForStrictMode &&\n            workInProgress.mode & StrictLegacyMode\n          ) {\n            setIsStrictModeForDevtools(true);\n            try {\n              payload.call(instance, prevState, nextProps);\n            } finally {\n              setIsStrictModeForDevtools(false);\n            }\n          }\n          exitDisallowedContextReadInDEV();\n        }\n        return nextState;\n      }\n      // State object\n      return payload;\n    }\n    case CaptureUpdate: {\n      workInProgress.flags =\n        (workInProgress.flags & ~ShouldCapture) | DidCapture;\n    }\n    // Intentional fallthrough\n    case UpdateState: {\n      const payload = update.payload;\n      let partialState;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n        }\n        partialState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          if (\n            debugRenderPhaseSideEffectsForStrictMode &&\n            workInProgress.mode & StrictLegacyMode\n          ) {\n            setIsStrictModeForDevtools(true);\n            try {\n              payload.call(instance, prevState, nextProps);\n            } finally {\n              setIsStrictModeForDevtools(false);\n            }\n          }\n          exitDisallowedContextReadInDEV();\n        }\n      } else {\n        // Partial state object\n        partialState = payload;\n      }\n      if (partialState === null || partialState === undefined) {\n        // Null and undefined are treated as no-ops.\n        return prevState;\n      }\n      // Merge the partial state and the previous state.\n      return assign({}, prevState, partialState);\n    }\n    case ForceUpdate: {\n      hasForceUpdate = true;\n      return prevState;\n    }\n  }\n  return prevState;\n}\n\nexport function processUpdateQueue<State>(\n  workInProgress: Fiber,\n  props: any,\n  instance: any,\n  renderLanes: Lanes,\n): void {\n  // This is always non-null on a ClassComponent or HostRoot\n  const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n\n  hasForceUpdate = false;\n\n  if (__DEV__) {\n    currentlyProcessingQueue = queue.shared;\n  }\n\n  let firstBaseUpdate = queue.firstBaseUpdate;\n  let lastBaseUpdate = queue.lastBaseUpdate;\n\n  // Check if there are pending updates. If so, transfer them to the base queue.\n  let pendingQueue = queue.shared.pending;\n  if (pendingQueue !== null) {\n    queue.shared.pending = null;\n\n    // The pending queue is circular. Disconnect the pointer between first\n    // and last so that it's non-circular.\n    const lastPendingUpdate = pendingQueue;\n    const firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null;\n    // Append pending updates to base queue\n    if (lastBaseUpdate === null) {\n      firstBaseUpdate = firstPendingUpdate;\n    } else {\n      lastBaseUpdate.next = firstPendingUpdate;\n    }\n    lastBaseUpdate = lastPendingUpdate;\n\n    // If there's a current queue, and it's different from the base queue, then\n    // we need to transfer the updates to that queue, too. Because the base\n    // queue is a singly-linked list with no cycles, we can append to both\n    // lists and take advantage of structural sharing.\n    // TODO: Pass `current` as argument\n    const current = workInProgress.alternate;\n    if (current !== null) {\n      // This is always non-null on a ClassComponent or HostRoot\n      const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n      const currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n      if (currentLastBaseUpdate !== lastBaseUpdate) {\n        if (currentLastBaseUpdate === null) {\n          currentQueue.firstBaseUpdate = firstPendingUpdate;\n        } else {\n          currentLastBaseUpdate.next = firstPendingUpdate;\n        }\n        currentQueue.lastBaseUpdate = lastPendingUpdate;\n      }\n    }\n  }\n\n  // These values may change as we process the queue.\n  if (firstBaseUpdate !== null) {\n    // Iterate through the list of updates to compute the result.\n    let newState = queue.baseState;\n    // TODO: Don't need to accumulate this. Instead, we can remove renderLanes\n    // from the original lanes.\n    let newLanes = NoLanes;\n\n    let newBaseState = null;\n    let newFirstBaseUpdate = null;\n    let newLastBaseUpdate = null;\n\n    let update = firstBaseUpdate;\n    do {\n      const updateLane = update.lane;\n      const updateEventTime = update.eventTime;\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        const clone: Update<State> = {\n          eventTime: updateEventTime,\n          lane: updateLane,\n\n          tag: update.tag,\n          payload: update.payload,\n          callback: update.callback,\n\n          next: null,\n        };\n        if (newLastBaseUpdate === null) {\n          newFirstBaseUpdate = newLastBaseUpdate = clone;\n          newBaseState = newState;\n        } else {\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        }\n        // Update the remaining priority in the queue.\n        newLanes = mergeLanes(newLanes, updateLane);\n      } else {\n        // This update does have sufficient priority.\n\n        if (newLastBaseUpdate !== null) {\n          const clone: Update<State> = {\n            eventTime: updateEventTime,\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n\n            next: null,\n          };\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        }\n\n        // Process this update.\n        newState = getStateFromUpdate(\n          workInProgress,\n          queue,\n          update,\n          newState,\n          props,\n          instance,\n        );\n        const callback = update.callback;\n        if (\n          callback !== null &&\n          // If the update was already committed, we should not queue its\n          // callback again.\n          update.lane !== NoLane\n        ) {\n          workInProgress.flags |= Callback;\n          const effects = queue.effects;\n          if (effects === null) {\n            queue.effects = [update];\n          } else {\n            effects.push(update);\n          }\n        }\n      }\n      update = update.next;\n      if (update === null) {\n        pendingQueue = queue.shared.pending;\n        if (pendingQueue === null) {\n          break;\n        } else {\n          // An update was scheduled from inside a reducer. Add the new\n          // pending updates to the end of the list and keep processing.\n          const lastPendingUpdate = pendingQueue;\n          // Intentionally unsound. Pending updates form a circular list, but we\n          // unravel them when transferring them to the base queue.\n          const firstPendingUpdate = ((lastPendingUpdate.next: any): Update<State>);\n          lastPendingUpdate.next = null;\n          update = firstPendingUpdate;\n          queue.lastBaseUpdate = lastPendingUpdate;\n          queue.shared.pending = null;\n        }\n      }\n    } while (true);\n\n    if (newLastBaseUpdate === null) {\n      newBaseState = newState;\n    }\n\n    queue.baseState = ((newBaseState: any): State);\n    queue.firstBaseUpdate = newFirstBaseUpdate;\n    queue.lastBaseUpdate = newLastBaseUpdate;\n\n    // Interleaved updates are stored on a separate queue. We aren't going to\n    // process them during this render, but we do need to track which lanes\n    // are remaining.\n    const lastInterleaved = queue.shared.interleaved;\n    if (lastInterleaved !== null) {\n      let interleaved = lastInterleaved;\n      do {\n        newLanes = mergeLanes(newLanes, interleaved.lane);\n        interleaved = ((interleaved: any).next: Update<State>);\n      } while (interleaved !== lastInterleaved);\n    } else if (firstBaseUpdate === null) {\n      // `queue.lanes` is used for entangling transitions. We can set it back to\n      // zero once the queue is empty.\n      queue.shared.lanes = NoLanes;\n    }\n\n    // Set the remaining expiration time to be whatever is remaining in the queue.\n    // This should be fine because the only two other things that contribute to\n    // expiration time are props and context. We're already in the middle of the\n    // begin phase by the time we start processing the queue, so we've already\n    // dealt with the props. Context in components that specify\n    // shouldComponentUpdate is tricky; but we'll have to account for\n    // that regardless.\n    markSkippedUpdateLanes(newLanes);\n    workInProgress.lanes = newLanes;\n    workInProgress.memoizedState = newState;\n  }\n\n  if (__DEV__) {\n    currentlyProcessingQueue = null;\n  }\n}\n\nfunction callCallback(callback, context) {\n  if (typeof callback !== 'function') {\n    throw new Error(\n      'Invalid argument passed as callback. Expected a function. Instead ' +\n        `received: ${callback}`,\n    );\n  }\n\n  callback.call(context);\n}\n\nexport function resetHasForceUpdateBeforeProcessing() {\n  hasForceUpdate = false;\n}\n\nexport function checkHasForceUpdateAfterProcessing(): boolean {\n  return hasForceUpdate;\n}\n\nexport function commitUpdateQueue<State>(\n  finishedWork: Fiber,\n  finishedQueue: UpdateQueue<State>,\n  instance: any,\n): void {\n  // Commit the effects\n  const effects = finishedQueue.effects;\n  finishedQueue.effects = null;\n  if (effects !== null) {\n    for (let i = 0; i < effects.length; i++) {\n      const effect = effects[i];\n      const callback = effect.callback;\n      if (callback !== null) {\n        effect.callback = null;\n        callCallback(callback, instance);\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Container, HostContext} from './ReactFiberHostConfig';\n\nimport {getChildHostContext, getRootHostContext} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\ndeclare class NoContextT {}\nconst NO_CONTEXT: NoContextT = ({}: any);\n\nconst contextStackCursor: StackCursor<HostContext | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nconst contextFiberStackCursor: StackCursor<Fiber | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nconst rootInstanceStackCursor: StackCursor<\n  Container | NoContextT,\n> = createCursor(NO_CONTEXT);\n\nfunction requiredContext<Value>(c: Value | NoContextT): Value {\n  if (c === NO_CONTEXT) {\n    throw new Error(\n      'Expected host context to exist. This error is likely caused by a bug ' +\n        'in React. Please file an issue.',\n    );\n  }\n\n  return (c: any);\n}\n\nfunction getRootHostContainer(): Container {\n  const rootInstance = requiredContext(rootInstanceStackCursor.current);\n  return rootInstance;\n}\n\nfunction pushHostContainer(fiber: Fiber, nextRootInstance: Container) {\n  // Push current root instance onto the stack;\n  // This allows us to reset root when portals are popped.\n  push(rootInstanceStackCursor, nextRootInstance, fiber);\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n\n  // Finally, we need to push the host context to the stack.\n  // However, we can't just call getRootHostContext() and push it because\n  // we'd have a different number of entries on the stack depending on\n  // whether getRootHostContext() throws somewhere in renderer code or not.\n  // So we push an empty value first. This lets us safely unwind on errors.\n  push(contextStackCursor, NO_CONTEXT, fiber);\n  const nextRootContext = getRootHostContext(nextRootInstance);\n  // Now that we know this function doesn't throw, replace it.\n  pop(contextStackCursor, fiber);\n  push(contextStackCursor, nextRootContext, fiber);\n}\n\nfunction popHostContainer(fiber: Fiber) {\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n  pop(rootInstanceStackCursor, fiber);\n}\n\nfunction getHostContext(): HostContext {\n  const context = requiredContext(contextStackCursor.current);\n  return context;\n}\n\nfunction pushHostContext(fiber: Fiber): void {\n  const rootInstance: Container = requiredContext(\n    rootInstanceStackCursor.current,\n  );\n  const context: HostContext = requiredContext(contextStackCursor.current);\n  const nextContext = getChildHostContext(context, fiber.type, rootInstance);\n\n  // Don't push this Fiber's context unless it's unique.\n  if (context === nextContext) {\n    return;\n  }\n\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n  push(contextStackCursor, nextContext, fiber);\n}\n\nfunction popHostContext(fiber: Fiber): void {\n  // Do not pop unless this Fiber provided the current context.\n  // pushHostContext() only pushes Fibers that provide unique contexts.\n  if (contextFiberStackCursor.current !== fiber) {\n    return;\n  }\n\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n}\n\nexport {\n  getHostContext,\n  getRootHostContainer,\n  popHostContainer,\n  popHostContext,\n  pushHostContainer,\n  pushHostContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\nexport opaque type SuspenseContext = number;\nexport opaque type SubtreeSuspenseContext: SuspenseContext = number;\nexport opaque type ShallowSuspenseContext: SuspenseContext = number;\n\nconst DefaultSuspenseContext: SuspenseContext = 0b00;\n\n// The Suspense Context is split into two parts. The lower bits is\n// inherited deeply down the subtree. The upper bits only affect\n// this immediate suspense boundary and gets reset each new\n// boundary or suspense list.\nconst SubtreeSuspenseContextMask: SuspenseContext = 0b01;\n\n// Subtree Flags:\n\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\n// boundaries is not currently showing visible main content.\n// Either because it is already showing a fallback or is not mounted at all.\n// We can use this to determine if it is desirable to trigger a fallback at\n// the parent. If not, then we might need to trigger undesirable boundaries\n// and/or suspend the commit to avoid hiding the parent content.\nexport const InvisibleParentSuspenseContext: SubtreeSuspenseContext = 0b01;\n\n// Shallow Flags:\n\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\n// items into their fallback state during one of the render passes.\nexport const ForceSuspenseFallback: ShallowSuspenseContext = 0b10;\n\nexport const suspenseStackCursor: StackCursor<SuspenseContext> = createCursor(\n  DefaultSuspenseContext,\n);\n\nexport function hasSuspenseContext(\n  parentContext: SuspenseContext,\n  flag: SuspenseContext,\n): boolean {\n  return (parentContext & flag) !== 0;\n}\n\nexport function setDefaultShallowSuspenseContext(\n  parentContext: SuspenseContext,\n): SuspenseContext {\n  return parentContext & SubtreeSuspenseContextMask;\n}\n\nexport function setShallowSuspenseContext(\n  parentContext: SuspenseContext,\n  shallowContext: ShallowSuspenseContext,\n): SuspenseContext {\n  return (parentContext & SubtreeSuspenseContextMask) | shallowContext;\n}\n\nexport function addSubtreeSuspenseContext(\n  parentContext: SuspenseContext,\n  subtreeContext: SubtreeSuspenseContext,\n): SuspenseContext {\n  return parentContext | subtreeContext;\n}\n\nexport function pushSuspenseContext(\n  fiber: Fiber,\n  newContext: SuspenseContext,\n): void {\n  push(suspenseStackCursor, newContext, fiber);\n}\n\nexport function popSuspenseContext(fiber: Fiber): void {\n  pop(suspenseStackCursor, fiber);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList, Wakeable} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport type {Lane} from './ReactFiberLane.old';\nimport type {TreeContext} from './ReactFiberTreeContext.old';\n\nimport {enableSuspenseAvoidThisFallback} from 'shared/ReactFeatureFlags';\nimport {SuspenseComponent, SuspenseListComponent} from './ReactWorkTags';\nimport {NoFlags, DidCapture} from './ReactFiberFlags';\nimport {\n  isSuspenseInstancePending,\n  isSuspenseInstanceFallback,\n} from './ReactFiberHostConfig';\n\nexport type SuspenseProps = {|\n  children?: ReactNodeList,\n  fallback?: ReactNodeList,\n\n  // TODO: Add \"unstable_\" prefix?\n  suspenseCallback?: (Set<Wakeable> | null) => mixed,\n\n  unstable_expectedLoadTime?: number,\n  unstable_name?: string,\n|};\n\n// A null SuspenseState represents an unsuspended normal Suspense boundary.\n// A non-null SuspenseState means that it is blocked for one reason or another.\n// - A non-null dehydrated field means it's blocked pending hydration.\n//   - A non-null dehydrated field can use isSuspenseInstancePending or\n//     isSuspenseInstanceFallback to query the reason for being dehydrated.\n// - A null dehydrated field means it's blocked by something suspending and\n//   we're currently showing a fallback instead.\nexport type SuspenseState = {|\n  // If this boundary is still dehydrated, we store the SuspenseInstance\n  // here to indicate that it is dehydrated (flag) and for quick access\n  // to check things like isSuspenseInstancePending.\n  dehydrated: null | SuspenseInstance,\n  treeContext: null | TreeContext,\n  // Represents the lane we should attempt to hydrate a dehydrated boundary at.\n  // OffscreenLane is the default for dehydrated boundaries.\n  // NoLane is the default for normal boundaries, which turns into \"normal\" pri.\n  retryLane: Lane,\n|};\n\nexport type SuspenseListTailMode = 'collapsed' | 'hidden' | void;\n\nexport type SuspenseListRenderState = {|\n  isBackwards: boolean,\n  // The currently rendering tail row.\n  rendering: null | Fiber,\n  // The absolute time when we started rendering the most recent tail row.\n  renderingStartTime: number,\n  // The last of the already rendered children.\n  last: null | Fiber,\n  // Remaining rows on the tail of the list.\n  tail: null | Fiber,\n  // Tail insertions setting.\n  tailMode: SuspenseListTailMode,\n|};\n\nexport function shouldCaptureSuspense(\n  workInProgress: Fiber,\n  hasInvisibleParent: boolean,\n): boolean {\n  // If it was the primary children that just suspended, capture and render the\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\n  const nextState: SuspenseState | null = workInProgress.memoizedState;\n  if (nextState !== null) {\n    if (nextState.dehydrated !== null) {\n      // A dehydrated boundary always captures.\n      return true;\n    }\n    return false;\n  }\n  const props = workInProgress.memoizedProps;\n  // Regular boundaries always capture.\n  if (\n    !enableSuspenseAvoidThisFallback ||\n    props.unstable_avoidThisFallback !== true\n  ) {\n    return true;\n  }\n  // If it's a boundary we should avoid, then we prefer to bubble up to the\n  // parent boundary if it is currently invisible.\n  if (hasInvisibleParent) {\n    return false;\n  }\n  // If the parent is not able to handle it, we must handle it.\n  return true;\n}\n\nexport function findFirstSuspended(row: Fiber): null | Fiber {\n  let node = row;\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state: SuspenseState | null = node.memoizedState;\n      if (state !== null) {\n        const dehydrated: null | SuspenseInstance = state.dehydrated;\n        if (\n          dehydrated === null ||\n          isSuspenseInstancePending(dehydrated) ||\n          isSuspenseInstanceFallback(dehydrated)\n        ) {\n          return node;\n        }\n      }\n    } else if (\n      node.tag === SuspenseListComponent &&\n      // revealOrder undefined can't be trusted because it don't\n      // keep track of whether it suspended or not.\n      node.memoizedProps.revealOrder !== undefined\n    ) {\n      const didSuspend = (node.flags & DidCapture) !== NoFlags;\n      if (didSuspend) {\n        return node;\n      }\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === row) {\n      return null;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === row) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type HookFlags = number;\n\nexport const NoFlags = /*   */ 0b0000;\n\n// Represents whether effect should fire.\nexport const HasEffect = /* */ 0b0001;\n\n// Represents the phase in which the effect (not the clean-up) fires.\nexport const Insertion = /*  */ 0b0010;\nexport const Layout = /*    */ 0b0100;\nexport const Passive = /*   */ 0b1000;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {MutableSource, MutableSourceVersion} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\n\n// Work in progress version numbers only apply to a single render,\n// and should be reset before starting a new render.\n// This tracks which mutable sources need to be reset after a render.\nconst workInProgressSources: Array<MutableSource<any>> = [];\n\nlet rendererSigil;\nif (__DEV__) {\n  // Used to detect multiple renderers using the same mutable source.\n  rendererSigil = {};\n}\n\nexport function markSourceAsDirty(mutableSource: MutableSource<any>): void {\n  workInProgressSources.push(mutableSource);\n}\n\nexport function resetWorkInProgressVersions(): void {\n  for (let i = 0; i < workInProgressSources.length; i++) {\n    const mutableSource = workInProgressSources[i];\n    if (isPrimaryRenderer) {\n      mutableSource._workInProgressVersionPrimary = null;\n    } else {\n      mutableSource._workInProgressVersionSecondary = null;\n    }\n  }\n  workInProgressSources.length = 0;\n}\n\nexport function getWorkInProgressVersion(\n  mutableSource: MutableSource<any>,\n): null | MutableSourceVersion {\n  if (isPrimaryRenderer) {\n    return mutableSource._workInProgressVersionPrimary;\n  } else {\n    return mutableSource._workInProgressVersionSecondary;\n  }\n}\n\nexport function setWorkInProgressVersion(\n  mutableSource: MutableSource<any>,\n  version: MutableSourceVersion,\n): void {\n  if (isPrimaryRenderer) {\n    mutableSource._workInProgressVersionPrimary = version;\n  } else {\n    mutableSource._workInProgressVersionSecondary = version;\n  }\n  workInProgressSources.push(mutableSource);\n}\n\nexport function warnAboutMultipleRenderersDEV(\n  mutableSource: MutableSource<any>,\n): void {\n  if (__DEV__) {\n    if (isPrimaryRenderer) {\n      if (mutableSource._currentPrimaryRenderer == null) {\n        mutableSource._currentPrimaryRenderer = rendererSigil;\n      } else if (mutableSource._currentPrimaryRenderer !== rendererSigil) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same mutable source. This is currently unsupported.',\n        );\n      }\n    } else {\n      if (mutableSource._currentSecondaryRenderer == null) {\n        mutableSource._currentSecondaryRenderer = rendererSigil;\n      } else if (mutableSource._currentSecondaryRenderer !== rendererSigil) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same mutable source. This is currently unsupported.',\n        );\n      }\n    }\n  }\n}\n\n// Eager reads the version of a mutable source and stores it on the root.\n// This ensures that the version used for server rendering matches the one\n// that is eventually read during hydration.\n// If they don't match there's a potential tear and a full deopt render is required.\nexport function registerMutableSourceForHydration(\n  root: FiberRoot,\n  mutableSource: MutableSource<any>,\n): void {\n  const getVersion = mutableSource._getVersion;\n  const version = getVersion(mutableSource._source);\n\n  // TODO Clear this data once all pending hydration work is finished.\n  // Retaining it forever may interfere with GC.\n  if (root.mutableSourceEagerHydrationData == null) {\n    root.mutableSourceEagerHydrationData = [mutableSource, version];\n  } else {\n    root.mutableSourceEagerHydrationData.push(mutableSource, version);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\n\nimport {enableCache} from 'shared/ReactFeatureFlags';\nimport {REACT_CONTEXT_TYPE} from 'shared/ReactSymbols';\n\nimport {pushProvider, popProvider} from './ReactFiberNewContext.old';\nimport * as Scheduler from 'scheduler';\n\n// In environments without AbortController (e.g. tests)\n// replace it with a lightweight shim that only has the features we use.\nconst AbortControllerLocal = enableCache\n  ? typeof AbortController !== 'undefined'\n    ? AbortController\n    : (function AbortControllerShim() {\n        const listeners = [];\n        const signal = (this.signal = {\n          aborted: false,\n          addEventListener: (type, listener) => {\n            listeners.push(listener);\n          },\n        });\n\n        this.abort = () => {\n          signal.aborted = true;\n          listeners.forEach(listener => listener());\n        };\n      }: AbortController)\n  : (null: any);\n\nexport type Cache = {|\n  controller: AbortControllerLocal,\n  data: Map<() => mixed, mixed>,\n  refCount: number,\n|};\n\nexport type CacheComponentState = {|\n  +parent: Cache,\n  +cache: Cache,\n|};\n\nexport type SpawnedCachePool = {|\n  +parent: Cache,\n  +pool: Cache,\n|};\n\n// Intentionally not named imports because Rollup would\n// use dynamic dispatch for CommonJS interop named imports.\nconst {\n  unstable_scheduleCallback: scheduleCallback,\n  unstable_NormalPriority: NormalPriority,\n} = Scheduler;\n\nexport const CacheContext: ReactContext<Cache> = enableCache\n  ? {\n      $$typeof: REACT_CONTEXT_TYPE,\n      // We don't use Consumer/Provider for Cache components. So we'll cheat.\n      Consumer: (null: any),\n      Provider: (null: any),\n      // We'll initialize these at the root.\n      _currentValue: (null: any),\n      _currentValue2: (null: any),\n      _threadCount: 0,\n      _defaultValue: (null: any),\n      _globalName: (null: any),\n    }\n  : (null: any);\n\nif (__DEV__ && enableCache) {\n  CacheContext._currentRenderer = null;\n  CacheContext._currentRenderer2 = null;\n}\n\n// Creates a new empty Cache instance with a ref-count of 0. The caller is responsible\n// for retaining the cache once it is in use (retainCache), and releasing the cache\n// once it is no longer needed (releaseCache).\nexport function createCache(): Cache {\n  if (!enableCache) {\n    return (null: any);\n  }\n  const cache: Cache = {\n    controller: new AbortControllerLocal(),\n    data: new Map(),\n    refCount: 0,\n  };\n\n  return cache;\n}\n\nexport function retainCache(cache: Cache) {\n  if (!enableCache) {\n    return;\n  }\n  if (__DEV__) {\n    if (cache.controller.signal.aborted) {\n      console.warn(\n        'A cache instance was retained after it was already freed. ' +\n          'This likely indicates a bug in React.',\n      );\n    }\n  }\n  cache.refCount++;\n}\n\n// Cleanup a cache instance, potentially freeing it if there are no more references\nexport function releaseCache(cache: Cache) {\n  if (!enableCache) {\n    return;\n  }\n  cache.refCount--;\n  if (__DEV__) {\n    if (cache.refCount < 0) {\n      console.warn(\n        'A cache instance was released after it was already freed. ' +\n          'This likely indicates a bug in React.',\n      );\n    }\n  }\n  if (cache.refCount === 0) {\n    scheduleCallback(NormalPriority, () => {\n      cache.controller.abort();\n    });\n  }\n}\n\nexport function pushCacheProvider(workInProgress: Fiber, cache: Cache) {\n  if (!enableCache) {\n    return;\n  }\n  pushProvider(workInProgress, CacheContext, cache);\n}\n\nexport function popCacheProvider(workInProgress: Fiber, cache: Cache) {\n  if (!enableCache) {\n    return;\n  }\n  popProvider(CacheContext, workInProgress);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  MutableSource,\n  MutableSourceGetSnapshotFn,\n  MutableSourceSubscribeFn,\n  ReactContext,\n  StartTransitionOptions,\n} from 'shared/ReactTypes';\nimport type {Fiber, Dispatcher, HookType} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\nimport type {HookFlags} from './ReactHookEffectTags';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Cache} from './ReactFiberCacheComponent.old';\nimport type {Flags} from './ReactFiberFlags';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  enableNewReconciler,\n  enableCache,\n  enableUseRefAccessWarning,\n  enableStrictEffects,\n  enableLazyContextPropagation,\n  enableSuspenseLayoutEffectSemantics,\n  enableUseMutableSource,\n  enableTransitionTracing,\n} from 'shared/ReactFeatureFlags';\n\nimport {\n  NoMode,\n  ConcurrentMode,\n  DebugTracingMode,\n  StrictEffectsMode,\n} from './ReactTypeOfMode';\nimport {\n  NoLane,\n  SyncLane,\n  NoLanes,\n  isSubsetOfLanes,\n  includesBlockingLane,\n  includesOnlyNonUrgentLanes,\n  claimNextTransitionLane,\n  mergeLanes,\n  removeLanes,\n  intersectLanes,\n  isTransitionLane,\n  markRootEntangled,\n  markRootMutableRead,\n  NoTimestamp,\n} from './ReactFiberLane.old';\nimport {\n  ContinuousEventPriority,\n  getCurrentUpdatePriority,\n  setCurrentUpdatePriority,\n  higherEventPriority,\n} from './ReactEventPriorities.old';\nimport {readContext, checkIfContextChanged} from './ReactFiberNewContext.old';\nimport {HostRoot, CacheComponent} from './ReactWorkTags';\nimport {\n  LayoutStatic as LayoutStaticEffect,\n  MountLayoutDev as MountLayoutDevEffect,\n  MountPassiveDev as MountPassiveDevEffect,\n  Passive as PassiveEffect,\n  PassiveStatic as PassiveStaticEffect,\n  StaticMask as StaticMaskEffect,\n  Update as UpdateEffect,\n  StoreConsistency,\n} from './ReactFiberFlags';\nimport {\n  HasEffect as HookHasEffect,\n  Layout as HookLayout,\n  Passive as HookPassive,\n  Insertion as HookInsertion,\n} from './ReactHookEffectTags';\nimport {\n  getWorkInProgressRoot,\n  scheduleUpdateOnFiber,\n  requestUpdateLane,\n  requestEventTime,\n  markSkippedUpdateLanes,\n} from './ReactFiberWorkLoop.old';\n\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport is from 'shared/objectIs';\nimport isArray from 'shared/isArray';\nimport {\n  markWorkInProgressReceivedUpdate,\n  checkIfWorkInProgressReceivedUpdate,\n} from './ReactFiberBeginWork.old';\nimport {getIsHydrating} from './ReactFiberHydrationContext.old';\nimport {\n  getWorkInProgressVersion,\n  markSourceAsDirty,\n  setWorkInProgressVersion,\n  warnAboutMultipleRenderersDEV,\n} from './ReactMutableSource.old';\nimport {logStateUpdateScheduled} from './DebugTracing';\nimport {markStateUpdateScheduled} from './ReactFiberDevToolsHook.old';\nimport {createCache, CacheContext} from './ReactFiberCacheComponent.old';\nimport {\n  createUpdate as createLegacyQueueUpdate,\n  enqueueUpdate as enqueueLegacyQueueUpdate,\n  entangleTransitions as entangleLegacyQueueTransitions,\n} from './ReactFiberClassUpdateQueue.old';\nimport {\n  enqueueConcurrentHookUpdate,\n  enqueueConcurrentHookUpdateAndEagerlyBailout,\n  enqueueConcurrentRenderForLane,\n} from './ReactFiberConcurrentUpdates.old';\nimport {getTreeId} from './ReactFiberTreeContext.old';\nimport {now} from './Scheduler';\n\nconst {ReactCurrentDispatcher, ReactCurrentBatchConfig} = ReactSharedInternals;\n\nexport type Update<S, A> = {|\n  lane: Lane,\n  action: A,\n  hasEagerState: boolean,\n  eagerState: S | null,\n  next: Update<S, A>,\n|};\n\nexport type UpdateQueue<S, A> = {|\n  pending: Update<S, A> | null,\n  interleaved: Update<S, A> | null,\n  lanes: Lanes,\n  dispatch: (A => mixed) | null,\n  lastRenderedReducer: ((S, A) => S) | null,\n  lastRenderedState: S | null,\n|};\n\nlet didWarnAboutMismatchedHooksForComponent;\nlet didWarnUncachedGetSnapshot;\nif (__DEV__) {\n  didWarnAboutMismatchedHooksForComponent = new Set();\n}\n\nexport type Hook = {|\n  memoizedState: any,\n  baseState: any,\n  baseQueue: Update<any, any> | null,\n  queue: any,\n  next: Hook | null,\n|};\n\nexport type Effect = {|\n  tag: HookFlags,\n  create: () => (() => void) | void,\n  destroy: (() => void) | void,\n  deps: Array<mixed> | null,\n  next: Effect,\n|};\n\ntype StoreInstance<T> = {|\n  value: T,\n  getSnapshot: () => T,\n|};\n\ntype StoreConsistencyCheck<T> = {|\n  value: T,\n  getSnapshot: () => T,\n|};\n\nexport type FunctionComponentUpdateQueue = {|\n  lastEffect: Effect | null,\n  stores: Array<StoreConsistencyCheck<any>> | null,\n|};\n\ntype BasicStateAction<S> = (S => S) | S;\n\ntype Dispatch<A> = A => void;\n\n// These are set right before calling the component.\nlet renderLanes: Lanes = NoLanes;\n// The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\nlet currentlyRenderingFiber: Fiber = (null: any);\n\n// Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\nlet currentHook: Hook | null = null;\nlet workInProgressHook: Hook | null = null;\n\n// Whether an update was scheduled at any point during the render phase. This\n// does not get reset if we do another render pass; only when we're completely\n// finished evaluating this component. This is an optimization so we know\n// whether we need to clear render phase updates after a throw.\nlet didScheduleRenderPhaseUpdate: boolean = false;\n// Where an update was scheduled only during the current render pass. This\n// gets reset after each attempt.\n// TODO: Maybe there's some way to consolidate this with\n// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.\nlet didScheduleRenderPhaseUpdateDuringThisPass: boolean = false;\n// Counts the number of useId hooks in this component.\nlet localIdCounter: number = 0;\n// Used for ids that are generated completely client-side (i.e. not during\n// hydration). This counter is global, so client ids are not stable across\n// render attempts.\nlet globalClientIdCounter: number = 0;\n\nconst RE_RENDER_LIMIT = 25;\n\n// In DEV, this is the name of the currently executing primitive hook\nlet currentHookNameInDev: ?HookType = null;\n\n// In DEV, this list ensures that hooks are called in the same order between renders.\n// The list stores the order of hooks used during the initial render (mount).\n// Subsequent renders (updates) reference this list.\nlet hookTypesDev: Array<HookType> | null = null;\nlet hookTypesUpdateIndexDev: number = -1;\n\n// In DEV, this tracks whether currently rendering component needs to ignore\n// the dependencies for Hooks that need them (e.g. useEffect or useMemo).\n// When true, such Hooks will always be \"remounted\". Only used during hot reload.\nlet ignorePreviousDependencies: boolean = false;\n\nfunction mountHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev === null) {\n      hookTypesDev = [hookName];\n    } else {\n      hookTypesDev.push(hookName);\n    }\n  }\n}\n\nfunction updateHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev !== null) {\n      hookTypesUpdateIndexDev++;\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n        warnOnHookMismatchInDev(hookName);\n      }\n    }\n  }\n}\n\nfunction checkDepsAreArrayDev(deps: mixed) {\n  if (__DEV__) {\n    if (deps !== undefined && deps !== null && !isArray(deps)) {\n      // Verify deps, but only on mount to avoid extra checks.\n      // It's unlikely their type would change as usually you define them inline.\n      console.error(\n        '%s received a final argument that is not an array (instead, received `%s`). When ' +\n          'specified, the final argument must be an array.',\n        currentHookNameInDev,\n        typeof deps,\n      );\n    }\n  }\n}\n\nfunction warnOnHookMismatchInDev(currentHookName: HookType) {\n  if (__DEV__) {\n    const componentName = getComponentNameFromFiber(currentlyRenderingFiber);\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\n\n      if (hookTypesDev !== null) {\n        let table = '';\n\n        const secondColumnStart = 30;\n\n        for (let i = 0; i <= ((hookTypesUpdateIndexDev: any): number); i++) {\n          const oldHookName = hookTypesDev[i];\n          const newHookName =\n            i === ((hookTypesUpdateIndexDev: any): number)\n              ? currentHookName\n              : oldHookName;\n\n          let row = `${i + 1}. ${oldHookName}`;\n\n          // Extra space so second column lines up\n          // lol @ IE not supporting String#repeat\n          while (row.length < secondColumnStart) {\n            row += ' ';\n          }\n\n          row += newHookName + '\\n';\n\n          table += row;\n        }\n\n        console.error(\n          'React has detected a change in the order of Hooks called by %s. ' +\n            'This will lead to bugs and errors if not fixed. ' +\n            'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n' +\n            '   Previous render            Next render\\n' +\n            '   ------------------------------------------------------\\n' +\n            '%s' +\n            '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n',\n          componentName,\n          table,\n        );\n      }\n    }\n  }\n}\n\nfunction throwInvalidHookError() {\n  throw new Error(\n    'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n      ' one of the following reasons:\\n' +\n      '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n      '2. You might be breaking the Rules of Hooks\\n' +\n      '3. You might have more than one copy of React in the same app\\n' +\n      'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\n  );\n}\n\nfunction areHookInputsEqual(\n  nextDeps: Array<mixed>,\n  prevDeps: Array<mixed> | null,\n) {\n  if (__DEV__) {\n    if (ignorePreviousDependencies) {\n      // Only true when this component is being hot reloaded.\n      return false;\n    }\n  }\n\n  if (prevDeps === null) {\n    if (__DEV__) {\n      console.error(\n        '%s received a final argument during this render, but not during ' +\n          'the previous render. Even though the final argument is optional, ' +\n          'its type cannot change between renders.',\n        currentHookNameInDev,\n      );\n    }\n    return false;\n  }\n\n  if (__DEV__) {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      console.error(\n        'The final argument passed to %s changed size between renders. The ' +\n          'order and size of this array must remain constant.\\n\\n' +\n          'Previous: %s\\n' +\n          'Incoming: %s',\n        currentHookNameInDev,\n        `[${prevDeps.join(', ')}]`,\n        `[${nextDeps.join(', ')}]`,\n      );\n    }\n  }\n  for (let i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (is(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\n\nexport function renderWithHooks<Props, SecondArg>(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: (p: Props, arg: SecondArg) => any,\n  props: Props,\n  secondArg: SecondArg,\n  nextRenderLanes: Lanes,\n): any {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber = workInProgress;\n\n  if (__DEV__) {\n    hookTypesDev =\n      current !== null\n        ? ((current._debugHookTypes: any): Array<HookType>)\n        : null;\n    hookTypesUpdateIndexDev = -1;\n    // Used for hot reloading:\n    ignorePreviousDependencies =\n      current !== null && current.type !== workInProgress.type;\n  }\n\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = NoLanes;\n\n  // The following should have already been reset\n  // currentHook = null;\n  // workInProgressHook = null;\n\n  // didScheduleRenderPhaseUpdate = false;\n  // localIdCounter = 0;\n\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\n  // Currently we will identify the update render as a mount because memoizedState === null.\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\n\n  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\n  // so memoizedState would be null during updates and mounts.\n  if (__DEV__) {\n    if (current !== null && current.memoizedState !== null) {\n      ReactCurrentDispatcher.current = HooksDispatcherOnUpdateInDEV;\n    } else if (hookTypesDev !== null) {\n      // This dispatcher handles an edge case where a component is updating,\n      // but no stateful hooks have been used.\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\n      // This dispatcher does that.\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountWithHookTypesInDEV;\n    } else {\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountInDEV;\n    }\n  } else {\n    ReactCurrentDispatcher.current =\n      current === null || current.memoizedState === null\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate;\n  }\n\n  let children = Component(props, secondArg);\n\n  // Check if there was a render phase update\n  if (didScheduleRenderPhaseUpdateDuringThisPass) {\n    // Keep rendering in a loop for as long as render phase updates continue to\n    // be scheduled. Use a counter to prevent infinite loops.\n    let numberOfReRenders: number = 0;\n    do {\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n      localIdCounter = 0;\n\n      if (numberOfReRenders >= RE_RENDER_LIMIT) {\n        throw new Error(\n          'Too many re-renders. React limits the number of renders to prevent ' +\n            'an infinite loop.',\n        );\n      }\n\n      numberOfReRenders += 1;\n      if (__DEV__) {\n        // Even when hot reloading, allow dependencies to stabilize\n        // after first render to prevent infinite render phase updates.\n        ignorePreviousDependencies = false;\n      }\n\n      // Start over from the beginning of the list\n      currentHook = null;\n      workInProgressHook = null;\n\n      workInProgress.updateQueue = null;\n\n      if (__DEV__) {\n        // Also validate hook order for cascading updates.\n        hookTypesUpdateIndexDev = -1;\n      }\n\n      ReactCurrentDispatcher.current = __DEV__\n        ? HooksDispatcherOnRerenderInDEV\n        : HooksDispatcherOnRerender;\n\n      children = Component(props, secondArg);\n    } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  }\n\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  if (__DEV__) {\n    workInProgress._debugHookTypes = hookTypesDev;\n  }\n\n  // This check uses currentHook so that it works the same in DEV and prod bundles.\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\n  const didRenderTooFewHooks =\n    currentHook !== null && currentHook.next !== null;\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber = (null: any);\n\n  currentHook = null;\n  workInProgressHook = null;\n\n  if (__DEV__) {\n    currentHookNameInDev = null;\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n\n    // Confirm that a static flag was not added or removed since the last\n    // render. If this fires, it suggests that we incorrectly reset the static\n    // flags in some other part of the codebase. This has happened before, for\n    // example, in the SuspenseList implementation.\n    if (\n      current !== null &&\n      (current.flags & StaticMaskEffect) !==\n        (workInProgress.flags & StaticMaskEffect) &&\n      // Disable this warning in legacy mode, because legacy Suspense is weird\n      // and creates false positives. To make this work in legacy mode, we'd\n      // need to mark fibers that commit in an incomplete state, somehow. For\n      // now I'll disable the warning that most of the bugs that would trigger\n      // it are either exclusive to concurrent mode or exist in both.\n      (current.mode & ConcurrentMode) !== NoMode\n    ) {\n      console.error(\n        'Internal React error: Expected static flag was missing. Please ' +\n          'notify the React team.',\n      );\n    }\n  }\n\n  didScheduleRenderPhaseUpdate = false;\n  // This is reset by checkDidRenderIdHook\n  // localIdCounter = 0;\n\n  if (didRenderTooFewHooks) {\n    throw new Error(\n      'Rendered fewer hooks than expected. This may be caused by an accidental ' +\n        'early return statement.',\n    );\n  }\n\n  if (enableLazyContextPropagation) {\n    if (current !== null) {\n      if (!checkIfWorkInProgressReceivedUpdate()) {\n        // If there were no changes to props or state, we need to check if there\n        // was a context change. We didn't already do this because there's no\n        // 1:1 correspondence between dependencies and hooks. Although, because\n        // there almost always is in the common case (`readContext` is an\n        // internal API), we could compare in there. OTOH, we only hit this case\n        // if everything else bails out, so on the whole it might be better to\n        // keep the comparison out of the common path.\n        const currentDependencies = current.dependencies;\n        if (\n          currentDependencies !== null &&\n          checkIfContextChanged(currentDependencies)\n        ) {\n          markWorkInProgressReceivedUpdate();\n        }\n      }\n    }\n  }\n  return children;\n}\n\nexport function checkDidRenderIdHook() {\n  // This should be called immediately after every renderWithHooks call.\n  // Conceptually, it's part of the return value of renderWithHooks; it's only a\n  // separate function to avoid using an array tuple.\n  const didRenderIdHook = localIdCounter !== 0;\n  localIdCounter = 0;\n  return didRenderIdHook;\n}\n\nexport function bailoutHooks(\n  current: Fiber,\n  workInProgress: Fiber,\n  lanes: Lanes,\n) {\n  workInProgress.updateQueue = current.updateQueue;\n  // TODO: Don't need to reset the flags here, because they're reset in the\n  // complete phase (bubbleProperties).\n  if (\n    __DEV__ &&\n    enableStrictEffects &&\n    (workInProgress.mode & StrictEffectsMode) !== NoMode\n  ) {\n    workInProgress.flags &= ~(\n      MountPassiveDevEffect |\n      MountLayoutDevEffect |\n      PassiveEffect |\n      UpdateEffect\n    );\n  } else {\n    workInProgress.flags &= ~(PassiveEffect | UpdateEffect);\n  }\n  current.lanes = removeLanes(current.lanes, lanes);\n}\n\nexport function resetHooksAfterThrow(): void {\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  if (didScheduleRenderPhaseUpdate) {\n    // There were render phase updates. These are only valid for this render\n    // phase, which we are now aborting. Remove the updates from the queues so\n    // they do not persist to the next render. Do not remove updates from hooks\n    // that weren't processed.\n    //\n    // Only reset the updates from the queue if it has a clone. If it does\n    // not have a clone, that means it wasn't processed, and the updates were\n    // scheduled before we entered the render phase.\n    let hook: Hook | null = currentlyRenderingFiber.memoizedState;\n    while (hook !== null) {\n      const queue = hook.queue;\n      if (queue !== null) {\n        queue.pending = null;\n      }\n      hook = hook.next;\n    }\n    didScheduleRenderPhaseUpdate = false;\n  }\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber = (null: any);\n\n  currentHook = null;\n  workInProgressHook = null;\n\n  if (__DEV__) {\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n\n    currentHookNameInDev = null;\n\n    isUpdatingOpaqueValueInRenderPhase = false;\n  }\n\n  didScheduleRenderPhaseUpdateDuringThisPass = false;\n  localIdCounter = 0;\n}\n\nfunction mountWorkInProgressHook(): Hook {\n  const hook: Hook = {\n    memoizedState: null,\n\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n\n    next: null,\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    currentlyRenderingFiber.memoizedState = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n  return workInProgressHook;\n}\n\nfunction updateWorkInProgressHook(): Hook {\n  // This function is used both for updates and for re-renders triggered by a\n  // render phase update. It assumes there is either a current hook we can\n  // clone, or a work-in-progress hook from a previous render pass that we can\n  // use as a base. When we reach the end of the base list, we must switch to\n  // the dispatcher used for mounts.\n  let nextCurrentHook: null | Hook;\n  if (currentHook === null) {\n    const current = currentlyRenderingFiber.alternate;\n    if (current !== null) {\n      nextCurrentHook = current.memoizedState;\n    } else {\n      nextCurrentHook = null;\n    }\n  } else {\n    nextCurrentHook = currentHook.next;\n  }\n\n  let nextWorkInProgressHook: null | Hook;\n  if (workInProgressHook === null) {\n    nextWorkInProgressHook = currentlyRenderingFiber.memoizedState;\n  } else {\n    nextWorkInProgressHook = workInProgressHook.next;\n  }\n\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n\n    currentHook = nextCurrentHook;\n  } else {\n    // Clone from the current hook.\n\n    if (nextCurrentHook === null) {\n      throw new Error('Rendered more hooks than during the previous render.');\n    }\n\n    currentHook = nextCurrentHook;\n\n    const newHook: Hook = {\n      memoizedState: currentHook.memoizedState,\n\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n\n      next: null,\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      currentlyRenderingFiber.memoizedState = workInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n  }\n  return workInProgressHook;\n}\n\nfunction createFunctionComponentUpdateQueue(): FunctionComponentUpdateQueue {\n  return {\n    lastEffect: null,\n    stores: null,\n  };\n}\n\nfunction basicStateReducer<S>(state: S, action: BasicStateAction<S>): S {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === 'function' ? action(state) : action;\n}\n\nfunction mountReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = mountWorkInProgressHook();\n  let initialState;\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = ((initialArg: any): S);\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue: UpdateQueue<S, A> = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: (initialState: any),\n  };\n  hook.queue = queue;\n  const dispatch: Dispatch<A> = (queue.dispatch = (dispatchReducerAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n\n  if (queue === null) {\n    throw new Error(\n      'Should have a queue. This is likely a bug in React. Please file an issue.',\n    );\n  }\n\n  queue.lastRenderedReducer = reducer;\n\n  const current: Hook = (currentHook: any);\n\n  // The last rebase update that is NOT part of the base state.\n  let baseQueue = current.baseQueue;\n\n  // The last pending update that hasn't been processed yet.\n  const pendingQueue = queue.pending;\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      const baseFirst = baseQueue.next;\n      const pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n    if (__DEV__) {\n      if (current.baseQueue !== baseQueue) {\n        // Internal invariant that should never happen, but feasibly could in\n        // the future if we implement resuming, or some form of that.\n        console.error(\n          'Internal error: Expected work-in-progress queue to be a clone. ' +\n            'This is a bug in React.',\n        );\n      }\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n\n  if (baseQueue !== null) {\n    // We have a queue to process.\n    const first = baseQueue.next;\n    let newState = current.baseState;\n\n    let newBaseState = null;\n    let newBaseQueueFirst = null;\n    let newBaseQueueLast = null;\n    let update = first;\n    do {\n      const updateLane = update.lane;\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        const clone: Update<S, A> = {\n          lane: updateLane,\n          action: update.action,\n          hasEagerState: update.hasEagerState,\n          eagerState: update.eagerState,\n          next: (null: any),\n        };\n        if (newBaseQueueLast === null) {\n          newBaseQueueFirst = newBaseQueueLast = clone;\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n        // Update the remaining priority in the queue.\n        // TODO: Don't need to accumulate this. Instead, we can remove\n        // renderLanes from the original lanes.\n        currentlyRenderingFiber.lanes = mergeLanes(\n          currentlyRenderingFiber.lanes,\n          updateLane,\n        );\n        markSkippedUpdateLanes(updateLane);\n      } else {\n        // This update does have sufficient priority.\n\n        if (newBaseQueueLast !== null) {\n          const clone: Update<S, A> = {\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            action: update.action,\n            hasEagerState: update.hasEagerState,\n            eagerState: update.eagerState,\n            next: (null: any),\n          };\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n\n        // Process this update.\n        if (update.hasEagerState) {\n          // If this update is a state update (not a reducer) and was processed eagerly,\n          // we can use the eagerly computed state\n          newState = ((update.eagerState: any): S);\n        } else {\n          const action = update.action;\n          newState = reducer(newState, action);\n        }\n      }\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = (newBaseQueueFirst: any);\n    }\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    hook.baseState = newBaseState;\n    hook.baseQueue = newBaseQueueLast;\n\n    queue.lastRenderedState = newState;\n  }\n\n  // Interleaved updates are stored on a separate queue. We aren't going to\n  // process them during this render, but we do need to track which lanes\n  // are remaining.\n  const lastInterleaved = queue.interleaved;\n  if (lastInterleaved !== null) {\n    let interleaved = lastInterleaved;\n    do {\n      const interleavedLane = interleaved.lane;\n      currentlyRenderingFiber.lanes = mergeLanes(\n        currentlyRenderingFiber.lanes,\n        interleavedLane,\n      );\n      markSkippedUpdateLanes(interleavedLane);\n      interleaved = ((interleaved: any).next: Update<S, A>);\n    } while (interleaved !== lastInterleaved);\n  } else if (baseQueue === null) {\n    // `queue.lanes` is used for entangling transitions. We can set it back to\n    // zero once the queue is empty.\n    queue.lanes = NoLanes;\n  }\n\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction rerenderReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n\n  if (queue === null) {\n    throw new Error(\n      'Should have a queue. This is likely a bug in React. Please file an issue.',\n    );\n  }\n\n  queue.lastRenderedReducer = reducer;\n\n  // This is a re-render. Apply the new render phase updates to the previous\n  // work-in-progress hook.\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  const lastRenderPhaseUpdate = queue.pending;\n  let newState = hook.memoizedState;\n  if (lastRenderPhaseUpdate !== null) {\n    // The queue doesn't persist past this render pass.\n    queue.pending = null;\n\n    const firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n    let update = firstRenderPhaseUpdate;\n    do {\n      // Process this render phase update. We don't have to check the\n      // priority because it will always be the same as the current\n      // render's.\n      const action = update.action;\n      newState = reducer(newState, action);\n      update = update.next;\n    } while (update !== firstRenderPhaseUpdate);\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    // Don't persist the state accumulated from the render phase updates to\n    // the base state unless the queue is empty.\n    // TODO: Not sure if this is the desired semantics, but it's what we\n    // do for gDSFP. I can't remember why.\n    if (hook.baseQueue === null) {\n      hook.baseState = newState;\n    }\n\n    queue.lastRenderedState = newState;\n  }\n  return [newState, dispatch];\n}\n\ntype MutableSourceMemoizedState<Source, Snapshot> = {|\n  refs: {\n    getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n    setSnapshot: Snapshot => void,\n  },\n  source: MutableSource<any>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n|};\n\nfunction readFromUnsubscribedMutableSource<Source, Snapshot>(\n  root: FiberRoot,\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n): Snapshot {\n  if (__DEV__) {\n    warnAboutMultipleRenderersDEV(source);\n  }\n\n  const getVersion = source._getVersion;\n  const version = getVersion(source._source);\n\n  // Is it safe for this component to read from this source during the current render?\n  let isSafeToReadFromSource = false;\n\n  // Check the version first.\n  // If this render has already been started with a specific version,\n  // we can use it alone to determine if we can safely read from the source.\n  const currentRenderVersion = getWorkInProgressVersion(source);\n  if (currentRenderVersion !== null) {\n    // It's safe to read if the store hasn't been mutated since the last time\n    // we read something.\n    isSafeToReadFromSource = currentRenderVersion === version;\n  } else {\n    // If there's no version, then this is the first time we've read from the\n    // source during the current render pass, so we need to do a bit more work.\n    // What we need to determine is if there are any hooks that already\n    // subscribed to the source, and if so, whether there are any pending\n    // mutations that haven't been synchronized yet.\n    //\n    // If there are no pending mutations, then `root.mutableReadLanes` will be\n    // empty, and we know we can safely read.\n    //\n    // If there *are* pending mutations, we may still be able to safely read\n    // if the currently rendering lanes are inclusive of the pending mutation\n    // lanes, since that guarantees that the value we're about to read from\n    // the source is consistent with the values that we read during the most\n    // recent mutation.\n    isSafeToReadFromSource = isSubsetOfLanes(\n      renderLanes,\n      root.mutableReadLanes,\n    );\n\n    if (isSafeToReadFromSource) {\n      // If it's safe to read from this source during the current render,\n      // store the version in case other components read from it.\n      // A changed version number will let those components know to throw and restart the render.\n      setWorkInProgressVersion(source, version);\n    }\n  }\n\n  if (isSafeToReadFromSource) {\n    const snapshot = getSnapshot(source._source);\n    if (__DEV__) {\n      if (typeof snapshot === 'function') {\n        console.error(\n          'Mutable source should not return a function as the snapshot value. ' +\n            'Functions may close over mutable values and cause tearing.',\n        );\n      }\n    }\n    return snapshot;\n  } else {\n    // This handles the special case of a mutable source being shared between renderers.\n    // In that case, if the source is mutated between the first and second renderer,\n    // The second renderer don't know that it needs to reset the WIP version during unwind,\n    // (because the hook only marks sources as dirty if it's written to their WIP version).\n    // That would cause this tear check to throw again and eventually be visible to the user.\n    // We can avoid this infinite loop by explicitly marking the source as dirty.\n    //\n    // This can lead to tearing in the first renderer when it resumes,\n    // but there's nothing we can do about that (short of throwing here and refusing to continue the render).\n    markSourceAsDirty(source);\n\n    // Intentioally throw an error to force React to retry synchronously. During\n    // the synchronous retry, it will block interleaved mutations, so we should\n    // get a consistent read. Therefore, the following error should never be\n    // visible to the user.\n\n    // We expect this error not to be thrown during the synchronous retry,\n    // because we blocked interleaved mutations.\n    throw new Error(\n      'Cannot read from mutable source during the current render without tearing. This may be a bug in React. Please file an issue.',\n    );\n  }\n}\n\nfunction useMutableSource<Source, Snapshot>(\n  hook: Hook,\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  if (!enableUseMutableSource) {\n    return (undefined: any);\n  }\n\n  const root = ((getWorkInProgressRoot(): any): FiberRoot);\n\n  if (root === null) {\n    throw new Error(\n      'Expected a work-in-progress root. This is a bug in React. Please file an issue.',\n    );\n  }\n\n  const getVersion = source._getVersion;\n  const version = getVersion(source._source);\n\n  const dispatcher = ReactCurrentDispatcher.current;\n\n  // eslint-disable-next-line prefer-const\n  let [currentSnapshot, setSnapshot] = dispatcher.useState(() =>\n    readFromUnsubscribedMutableSource(root, source, getSnapshot),\n  );\n  let snapshot = currentSnapshot;\n\n  // Grab a handle to the state hook as well.\n  // We use it to clear the pending update queue if we have a new source.\n  const stateHook = ((workInProgressHook: any): Hook);\n\n  const memoizedState = ((hook.memoizedState: any): MutableSourceMemoizedState<\n    Source,\n    Snapshot,\n  >);\n  const refs = memoizedState.refs;\n  const prevGetSnapshot = refs.getSnapshot;\n  const prevSource = memoizedState.source;\n  const prevSubscribe = memoizedState.subscribe;\n\n  const fiber = currentlyRenderingFiber;\n\n  hook.memoizedState = ({\n    refs,\n    source,\n    subscribe,\n  }: MutableSourceMemoizedState<Source, Snapshot>);\n\n  // Sync the values needed by our subscription handler after each commit.\n  dispatcher.useEffect(() => {\n    refs.getSnapshot = getSnapshot;\n\n    // Normally the dispatch function for a state hook never changes,\n    // but this hook recreates the queue in certain cases  to avoid updates from stale sources.\n    // handleChange() below needs to reference the dispatch function without re-subscribing,\n    // so we use a ref to ensure that it always has the latest version.\n    refs.setSnapshot = setSnapshot;\n\n    // Check for a possible change between when we last rendered now.\n    const maybeNewVersion = getVersion(source._source);\n    if (!is(version, maybeNewVersion)) {\n      const maybeNewSnapshot = getSnapshot(source._source);\n      if (__DEV__) {\n        if (typeof maybeNewSnapshot === 'function') {\n          console.error(\n            'Mutable source should not return a function as the snapshot value. ' +\n              'Functions may close over mutable values and cause tearing.',\n          );\n        }\n      }\n\n      if (!is(snapshot, maybeNewSnapshot)) {\n        setSnapshot(maybeNewSnapshot);\n\n        const lane = requestUpdateLane(fiber);\n        markRootMutableRead(root, lane);\n      }\n      // If the source mutated between render and now,\n      // there may be state updates already scheduled from the old source.\n      // Entangle the updates so that they render in the same batch.\n      markRootEntangled(root, root.mutableReadLanes);\n    }\n  }, [getSnapshot, source, subscribe]);\n\n  // If we got a new source or subscribe function, re-subscribe in a passive effect.\n  dispatcher.useEffect(() => {\n    const handleChange = () => {\n      const latestGetSnapshot = refs.getSnapshot;\n      const latestSetSnapshot = refs.setSnapshot;\n\n      try {\n        latestSetSnapshot(latestGetSnapshot(source._source));\n\n        // Record a pending mutable source update with the same expiration time.\n        const lane = requestUpdateLane(fiber);\n\n        markRootMutableRead(root, lane);\n      } catch (error) {\n        // A selector might throw after a source mutation.\n        // e.g. it might try to read from a part of the store that no longer exists.\n        // In this case we should still schedule an update with React.\n        // Worst case the selector will throw again and then an error boundary will handle it.\n        latestSetSnapshot(\n          (() => {\n            throw error;\n          }: any),\n        );\n      }\n    };\n\n    const unsubscribe = subscribe(source._source, handleChange);\n    if (__DEV__) {\n      if (typeof unsubscribe !== 'function') {\n        console.error(\n          'Mutable source subscribe function must return an unsubscribe function.',\n        );\n      }\n    }\n\n    return unsubscribe;\n  }, [source, subscribe]);\n\n  // If any of the inputs to useMutableSource change, reading is potentially unsafe.\n  //\n  // If either the source or the subscription have changed we can't can't trust the update queue.\n  // Maybe the source changed in a way that the old subscription ignored but the new one depends on.\n  //\n  // If the getSnapshot function changed, we also shouldn't rely on the update queue.\n  // It's possible that the underlying source was mutated between the when the last \"change\" event fired,\n  // and when the current render (with the new getSnapshot function) is processed.\n  //\n  // In both cases, we need to throw away pending updates (since they are no longer relevant)\n  // and treat reading from the source as we do in the mount case.\n  if (\n    !is(prevGetSnapshot, getSnapshot) ||\n    !is(prevSource, source) ||\n    !is(prevSubscribe, subscribe)\n  ) {\n    // Create a new queue and setState method,\n    // So if there are interleaved updates, they get pushed to the older queue.\n    // When this becomes current, the previous queue and dispatch method will be discarded,\n    // including any interleaving updates that occur.\n    const newQueue: UpdateQueue<Snapshot, BasicStateAction<Snapshot>> = {\n      pending: null,\n      interleaved: null,\n      lanes: NoLanes,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: snapshot,\n    };\n    newQueue.dispatch = setSnapshot = (dispatchSetState.bind(\n      null,\n      currentlyRenderingFiber,\n      newQueue,\n    ): any);\n    stateHook.queue = newQueue;\n    stateHook.baseQueue = null;\n    snapshot = readFromUnsubscribedMutableSource(root, source, getSnapshot);\n    stateHook.memoizedState = stateHook.baseState = snapshot;\n  }\n\n  return snapshot;\n}\n\nfunction mountMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  if (!enableUseMutableSource) {\n    return (undefined: any);\n  }\n\n  const hook = mountWorkInProgressHook();\n  hook.memoizedState = ({\n    refs: {\n      getSnapshot,\n      setSnapshot: (null: any),\n    },\n    source,\n    subscribe,\n  }: MutableSourceMemoizedState<Source, Snapshot>);\n  return useMutableSource(hook, source, getSnapshot, subscribe);\n}\n\nfunction updateMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  if (!enableUseMutableSource) {\n    return (undefined: any);\n  }\n\n  const hook = updateWorkInProgressHook();\n  return useMutableSource(hook, source, getSnapshot, subscribe);\n}\n\nfunction mountSyncExternalStore<T>(\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T,\n): T {\n  const fiber = currentlyRenderingFiber;\n  const hook = mountWorkInProgressHook();\n\n  let nextSnapshot;\n  const isHydrating = getIsHydrating();\n  if (isHydrating) {\n    if (getServerSnapshot === undefined) {\n      throw new Error(\n        'Missing getServerSnapshot, which is required for ' +\n          'server-rendered content. Will revert to client rendering.',\n      );\n    }\n    nextSnapshot = getServerSnapshot();\n    if (__DEV__) {\n      if (!didWarnUncachedGetSnapshot) {\n        if (nextSnapshot !== getServerSnapshot()) {\n          console.error(\n            'The result of getServerSnapshot should be cached to avoid an infinite loop',\n          );\n          didWarnUncachedGetSnapshot = true;\n        }\n      }\n    }\n  } else {\n    nextSnapshot = getSnapshot();\n    if (__DEV__) {\n      if (!didWarnUncachedGetSnapshot) {\n        const cachedSnapshot = getSnapshot();\n        if (!is(nextSnapshot, cachedSnapshot)) {\n          console.error(\n            'The result of getSnapshot should be cached to avoid an infinite loop',\n          );\n          didWarnUncachedGetSnapshot = true;\n        }\n      }\n    }\n    // Unless we're rendering a blocking lane, schedule a consistency check.\n    // Right before committing, we will walk the tree and check if any of the\n    // stores were mutated.\n    //\n    // We won't do this if we're hydrating server-rendered content, because if\n    // the content is stale, it's already visible anyway. Instead we'll patch\n    // it up in a passive effect.\n    const root: FiberRoot | null = getWorkInProgressRoot();\n\n    if (root === null) {\n      throw new Error(\n        'Expected a work-in-progress root. This is a bug in React. Please file an issue.',\n      );\n    }\n\n    if (!includesBlockingLane(root, renderLanes)) {\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n    }\n  }\n\n  // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n  hook.memoizedState = nextSnapshot;\n  const inst: StoreInstance<T> = {\n    value: nextSnapshot,\n    getSnapshot,\n  };\n  hook.queue = inst;\n\n  // Schedule an effect to subscribe to the store.\n  mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);\n\n  // Schedule an effect to update the mutable instance fields. We will update\n  // this whenever subscribe, getSnapshot, or value changes. Because there's no\n  // clean-up function, and we track the deps correctly, we can call pushEffect\n  // directly, without storing any additional state. For the same reason, we\n  // don't need to set a static flag, either.\n  // TODO: We can move this to the passive phase once we add a pre-commit\n  // consistency check. See the next comment.\n  fiber.flags |= PassiveEffect;\n  pushEffect(\n    HookHasEffect | HookPassive,\n    updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot),\n    undefined,\n    null,\n  );\n\n  return nextSnapshot;\n}\n\nfunction updateSyncExternalStore<T>(\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T,\n): T {\n  const fiber = currentlyRenderingFiber;\n  const hook = updateWorkInProgressHook();\n  // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n  const nextSnapshot = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedSnapshot = getSnapshot();\n      if (!is(nextSnapshot, cachedSnapshot)) {\n        console.error(\n          'The result of getSnapshot should be cached to avoid an infinite loop',\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n  const prevSnapshot = hook.memoizedState;\n  const snapshotChanged = !is(prevSnapshot, nextSnapshot);\n  if (snapshotChanged) {\n    hook.memoizedState = nextSnapshot;\n    markWorkInProgressReceivedUpdate();\n  }\n  const inst = hook.queue;\n\n  updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [\n    subscribe,\n  ]);\n\n  // Whenever getSnapshot or subscribe changes, we need to check in the\n  // commit phase if there was an interleaved mutation. In concurrent mode\n  // this can happen all the time, but even in synchronous mode, an earlier\n  // effect may have mutated the store.\n  if (\n    inst.getSnapshot !== getSnapshot ||\n    snapshotChanged ||\n    // Check if the susbcribe function changed. We can save some memory by\n    // checking whether we scheduled a subscription effect above.\n    (workInProgressHook !== null &&\n      workInProgressHook.memoizedState.tag & HookHasEffect)\n  ) {\n    fiber.flags |= PassiveEffect;\n    pushEffect(\n      HookHasEffect | HookPassive,\n      updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot),\n      undefined,\n      null,\n    );\n\n    // Unless we're rendering a blocking lane, schedule a consistency check.\n    // Right before committing, we will walk the tree and check if any of the\n    // stores were mutated.\n    const root: FiberRoot | null = getWorkInProgressRoot();\n\n    if (root === null) {\n      throw new Error(\n        'Expected a work-in-progress root. This is a bug in React. Please file an issue.',\n      );\n    }\n\n    if (!includesBlockingLane(root, renderLanes)) {\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n    }\n  }\n\n  return nextSnapshot;\n}\n\nfunction pushStoreConsistencyCheck<T>(\n  fiber: Fiber,\n  getSnapshot: () => T,\n  renderedSnapshot: T,\n) {\n  fiber.flags |= StoreConsistency;\n  const check: StoreConsistencyCheck<T> = {\n    getSnapshot,\n    value: renderedSnapshot,\n  };\n  let componentUpdateQueue: null | FunctionComponentUpdateQueue = (currentlyRenderingFiber.updateQueue: any);\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber.updateQueue = (componentUpdateQueue: any);\n    componentUpdateQueue.stores = [check];\n  } else {\n    const stores = componentUpdateQueue.stores;\n    if (stores === null) {\n      componentUpdateQueue.stores = [check];\n    } else {\n      stores.push(check);\n    }\n  }\n}\n\nfunction updateStoreInstance<T>(\n  fiber: Fiber,\n  inst: StoreInstance<T>,\n  nextSnapshot: T,\n  getSnapshot: () => T,\n) {\n  // These are updated in the passive phase\n  inst.value = nextSnapshot;\n  inst.getSnapshot = getSnapshot;\n\n  // Something may have been mutated in between render and commit. This could\n  // have been in an event that fired before the passive effects, or it could\n  // have been in a layout effect. In that case, we would have used the old\n  // snapsho and getSnapshot values to bail out. We need to check one more time.\n  if (checkIfSnapshotChanged(inst)) {\n    // Force a re-render.\n    forceStoreRerender(fiber);\n  }\n}\n\nfunction subscribeToStore(fiber, inst, subscribe) {\n  const handleStoreChange = () => {\n    // The store changed. Check if the snapshot changed since the last time we\n    // read from the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceStoreRerender(fiber);\n    }\n  };\n  // Subscribe to the store and return a clean-up function.\n  return subscribe(handleStoreChange);\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction forceStoreRerender(fiber) {\n  const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n  if (root !== null) {\n    scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n  }\n}\n\nfunction mountState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const hook = mountWorkInProgressHook();\n  if (typeof initialState === 'function') {\n    // $FlowFixMe: Flow doesn't like mixed types\n    initialState = initialState();\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue: UpdateQueue<S, BasicStateAction<S>> = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: (initialState: any),\n  };\n  hook.queue = queue;\n  const dispatch: Dispatch<\n    BasicStateAction<S>,\n  > = (queue.dispatch = (dispatchSetState.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return updateReducer(basicStateReducer, (initialState: any));\n}\n\nfunction rerenderState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return rerenderReducer(basicStateReducer, (initialState: any));\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  const effect: Effect = {\n    tag,\n    create,\n    destroy,\n    deps,\n    // Circular\n    next: (null: any),\n  };\n  let componentUpdateQueue: null | FunctionComponentUpdateQueue = (currentlyRenderingFiber.updateQueue: any);\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber.updateQueue = (componentUpdateQueue: any);\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    const lastEffect = componentUpdateQueue.lastEffect;\n    if (lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      const firstEffect = lastEffect.next;\n      lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n  return effect;\n}\n\nlet stackContainsErrorMessage: boolean | null = null;\n\nfunction getCallerStackFrame(): string {\n  // eslint-disable-next-line react-internal/prod-error-codes\n  const stackFrames = new Error('Error message').stack.split('\\n');\n\n  // Some browsers (e.g. Chrome) include the error message in the stack\n  // but others (e.g. Firefox) do not.\n  if (stackContainsErrorMessage === null) {\n    stackContainsErrorMessage = stackFrames[0].includes('Error message');\n  }\n\n  return stackContainsErrorMessage\n    ? stackFrames.slice(3, 4).join('\\n')\n    : stackFrames.slice(2, 3).join('\\n');\n}\n\nfunction mountRef<T>(initialValue: T): {|current: T|} {\n  const hook = mountWorkInProgressHook();\n  if (enableUseRefAccessWarning) {\n    if (__DEV__) {\n      // Support lazy initialization pattern shown in docs.\n      // We need to store the caller stack frame so that we don't warn on subsequent renders.\n      let hasBeenInitialized = initialValue != null;\n      let lazyInitGetterStack = null;\n      let didCheckForLazyInit = false;\n\n      // Only warn once per component+hook.\n      let didWarnAboutRead = false;\n      let didWarnAboutWrite = false;\n\n      let current = initialValue;\n      const ref = {\n        get current() {\n          if (!hasBeenInitialized) {\n            didCheckForLazyInit = true;\n            lazyInitGetterStack = getCallerStackFrame();\n          } else if (currentlyRenderingFiber !== null && !didWarnAboutRead) {\n            if (\n              lazyInitGetterStack === null ||\n              lazyInitGetterStack !== getCallerStackFrame()\n            ) {\n              didWarnAboutRead = true;\n              console.warn(\n                '%s: Unsafe read of a mutable value during render.\\n\\n' +\n                  'Reading from a ref during render is only safe if:\\n' +\n                  '1. The ref value has not been updated, or\\n' +\n                  '2. The ref holds a lazily-initialized value that is only set once.\\n',\n                getComponentNameFromFiber(currentlyRenderingFiber) || 'Unknown',\n              );\n            }\n          }\n          return current;\n        },\n        set current(value) {\n          if (currentlyRenderingFiber !== null && !didWarnAboutWrite) {\n            if (hasBeenInitialized || !didCheckForLazyInit) {\n              didWarnAboutWrite = true;\n              console.warn(\n                '%s: Unsafe write of a mutable value during render.\\n\\n' +\n                  'Writing to a ref during render is only safe if the ref holds ' +\n                  'a lazily-initialized value that is only set once.\\n',\n                getComponentNameFromFiber(currentlyRenderingFiber) || 'Unknown',\n              );\n            }\n          }\n\n          hasBeenInitialized = true;\n          current = value;\n        },\n      };\n      Object.seal(ref);\n      hook.memoizedState = ref;\n      return ref;\n    } else {\n      const ref = {current: initialValue};\n      hook.memoizedState = ref;\n      return ref;\n    }\n  } else {\n    const ref = {current: initialValue};\n    hook.memoizedState = ref;\n    return ref;\n  }\n}\n\nfunction updateRef<T>(initialValue: T): {|current: T|} {\n  const hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps): void {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  currentlyRenderingFiber.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(\n    HookHasEffect | hookFlags,\n    create,\n    undefined,\n    nextDeps,\n  );\n}\n\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps): void {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  let destroy = undefined;\n\n  if (currentHook !== null) {\n    const prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n    if (nextDeps !== null) {\n      const prevDeps = prevEffect.deps;\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  currentlyRenderingFiber.flags |= fiberFlags;\n\n  hook.memoizedState = pushEffect(\n    HookHasEffect | hookFlags,\n    create,\n    destroy,\n    nextDeps,\n  );\n}\n\nfunction mountEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  if (\n    __DEV__ &&\n    enableStrictEffects &&\n    (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode\n  ) {\n    return mountEffectImpl(\n      MountPassiveDevEffect | PassiveEffect | PassiveStaticEffect,\n      HookPassive,\n      create,\n      deps,\n    );\n  } else {\n    return mountEffectImpl(\n      PassiveEffect | PassiveStaticEffect,\n      HookPassive,\n      create,\n      deps,\n    );\n  }\n}\n\nfunction updateEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return updateEffectImpl(PassiveEffect, HookPassive, create, deps);\n}\n\nfunction mountInsertionEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return mountEffectImpl(UpdateEffect, HookInsertion, create, deps);\n}\n\nfunction updateInsertionEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return updateEffectImpl(UpdateEffect, HookInsertion, create, deps);\n}\n\nfunction mountLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  let fiberFlags: Flags = UpdateEffect;\n  if (enableSuspenseLayoutEffectSemantics) {\n    fiberFlags |= LayoutStaticEffect;\n  }\n  if (\n    __DEV__ &&\n    enableStrictEffects &&\n    (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode\n  ) {\n    fiberFlags |= MountLayoutDevEffect;\n  }\n  return mountEffectImpl(fiberFlags, HookLayout, create, deps);\n}\n\nfunction updateLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return updateEffectImpl(UpdateEffect, HookLayout, create, deps);\n}\n\nfunction imperativeHandleEffect<T>(\n  create: () => T,\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n) {\n  if (typeof ref === 'function') {\n    const refCallback = ref;\n    const inst = create();\n    refCallback(inst);\n    return () => {\n      refCallback(null);\n    };\n  } else if (ref !== null && ref !== undefined) {\n    const refObject = ref;\n    if (__DEV__) {\n      if (!refObject.hasOwnProperty('current')) {\n        console.error(\n          'Expected useImperativeHandle() first argument to either be a ' +\n            'ref callback or React.createRef() object. Instead received: %s.',\n          'an object with keys {' + Object.keys(refObject).join(', ') + '}',\n        );\n      }\n    }\n    const inst = create();\n    refObject.current = inst;\n    return () => {\n      refObject.current = null;\n    };\n  }\n}\n\nfunction mountImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (typeof create !== 'function') {\n      console.error(\n        'Expected useImperativeHandle() second argument to be a function ' +\n          'that creates a handle. Instead received: %s.',\n        create !== null ? typeof create : 'null',\n      );\n    }\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  let fiberFlags: Flags = UpdateEffect;\n  if (enableSuspenseLayoutEffectSemantics) {\n    fiberFlags |= LayoutStaticEffect;\n  }\n  if (\n    __DEV__ &&\n    enableStrictEffects &&\n    (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode\n  ) {\n    fiberFlags |= MountLayoutDevEffect;\n  }\n  return mountEffectImpl(\n    fiberFlags,\n    HookLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction updateImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (typeof create !== 'function') {\n      console.error(\n        'Expected useImperativeHandle() second argument to be a function ' +\n          'that creates a handle. Instead received: %s.',\n        create !== null ? typeof create : 'null',\n      );\n    }\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  return updateEffectImpl(\n    UpdateEffect,\n    HookLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction mountDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n  // This hook is normally a no-op.\n  // The react-debug-hooks package injects its own implementation\n  // so that e.g. DevTools can display custom hook values.\n}\n\nconst updateDebugValue = mountDebugValue;\n\nfunction mountCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction mountMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction mountDeferredValue<T>(value: T): T {\n  const hook = mountWorkInProgressHook();\n  hook.memoizedState = value;\n  return value;\n}\n\nfunction updateDeferredValue<T>(value: T): T {\n  const hook = updateWorkInProgressHook();\n  const resolvedCurrentHook: Hook = (currentHook: any);\n  const prevValue: T = resolvedCurrentHook.memoizedState;\n  return updateDeferredValueImpl(hook, prevValue, value);\n}\n\nfunction rerenderDeferredValue<T>(value: T): T {\n  const hook = updateWorkInProgressHook();\n  if (currentHook === null) {\n    // This is a rerender during a mount.\n    hook.memoizedState = value;\n    return value;\n  } else {\n    // This is a rerender during an update.\n    const prevValue: T = currentHook.memoizedState;\n    return updateDeferredValueImpl(hook, prevValue, value);\n  }\n}\n\nfunction updateDeferredValueImpl<T>(hook: Hook, prevValue: T, value: T): T {\n  const shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);\n  if (shouldDeferValue) {\n    // This is an urgent update. If the value has changed, keep using the\n    // previous value and spawn a deferred render to update it later.\n\n    if (!is(value, prevValue)) {\n      // Schedule a deferred render\n      const deferredLane = claimNextTransitionLane();\n      currentlyRenderingFiber.lanes = mergeLanes(\n        currentlyRenderingFiber.lanes,\n        deferredLane,\n      );\n      markSkippedUpdateLanes(deferredLane);\n\n      // Set this to true to indicate that the rendered value is inconsistent\n      // from the latest value. The name \"baseState\" doesn't really match how we\n      // use it because we're reusing a state hook field instead of creating a\n      // new one.\n      hook.baseState = true;\n    }\n\n    // Reuse the previous value\n    return prevValue;\n  } else {\n    // This is not an urgent update, so we can use the latest value regardless\n    // of what it is. No need to defer it.\n\n    // However, if we're currently inside a spawned render, then we need to mark\n    // this as an update to prevent the fiber from bailing out.\n    //\n    // `baseState` is true when the current value is different from the rendered\n    // value. The name doesn't really match how we use it because we're reusing\n    // a state hook field instead of creating a new one.\n    if (hook.baseState) {\n      // Flip this back to false.\n      hook.baseState = false;\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = value;\n    return value;\n  }\n}\n\nfunction startTransition(setPending, callback, options) {\n  const previousPriority = getCurrentUpdatePriority();\n  setCurrentUpdatePriority(\n    higherEventPriority(previousPriority, ContinuousEventPriority),\n  );\n\n  setPending(true);\n\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = {};\n  const currentTransition = ReactCurrentBatchConfig.transition;\n\n  if (enableTransitionTracing) {\n    if (options !== undefined && options.name !== undefined) {\n      ReactCurrentBatchConfig.transition.name = options.name;\n      ReactCurrentBatchConfig.transition.startTime = now();\n    }\n  }\n\n  if (__DEV__) {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  try {\n    setPending(false);\n    callback();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    if (__DEV__) {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        const updatedFibersCount = currentTransition._updatedFibers.size;\n        if (updatedFibersCount > 10) {\n          console.warn(\n            'Detected a large number of updates inside startTransition. ' +\n              'If this is due to a subscription please re-write it to use React provided hooks. ' +\n              'Otherwise concurrent mode guarantees are off the table.',\n          );\n        }\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nfunction mountTransition(): [\n  boolean,\n  (callback: () => void, options?: StartTransitionOptions) => void,\n] {\n  const [isPending, setPending] = mountState(false);\n  // The `start` method never changes.\n  const start = startTransition.bind(null, setPending);\n  const hook = mountWorkInProgressHook();\n  hook.memoizedState = start;\n  return [isPending, start];\n}\n\nfunction updateTransition(): [\n  boolean,\n  (callback: () => void, options?: StartTransitionOptions) => void,\n] {\n  const [isPending] = updateState(false);\n  const hook = updateWorkInProgressHook();\n  const start = hook.memoizedState;\n  return [isPending, start];\n}\n\nfunction rerenderTransition(): [\n  boolean,\n  (callback: () => void, options?: StartTransitionOptions) => void,\n] {\n  const [isPending] = rerenderState(false);\n  const hook = updateWorkInProgressHook();\n  const start = hook.memoizedState;\n  return [isPending, start];\n}\n\nlet isUpdatingOpaqueValueInRenderPhase = false;\nexport function getIsUpdatingOpaqueValueInRenderPhaseInDEV(): boolean | void {\n  if (__DEV__) {\n    return isUpdatingOpaqueValueInRenderPhase;\n  }\n}\n\nfunction mountId(): string {\n  const hook = mountWorkInProgressHook();\n\n  const root = ((getWorkInProgressRoot(): any): FiberRoot);\n  // TODO: In Fizz, id generation is specific to each server config. Maybe we\n  // should do this in Fiber, too? Deferring this decision for now because\n  // there's no other place to store the prefix except for an internal field on\n  // the public createRoot object, which the fiber tree does not currently have\n  // a reference to.\n  const identifierPrefix = root.identifierPrefix;\n\n  let id;\n  if (getIsHydrating()) {\n    const treeId = getTreeId();\n\n    // Use a captial R prefix for server-generated ids.\n    id = ':' + identifierPrefix + 'R' + treeId;\n\n    // Unless this is the first id at this level, append a number at the end\n    // that represents the position of this useId hook among all the useId\n    // hooks for this fiber.\n    const localId = localIdCounter++;\n    if (localId > 0) {\n      id += 'H' + localId.toString(32);\n    }\n\n    id += ':';\n  } else {\n    // Use a lowercase r prefix for client-generated ids.\n    const globalClientId = globalClientIdCounter++;\n    id = ':' + identifierPrefix + 'r' + globalClientId.toString(32) + ':';\n  }\n\n  hook.memoizedState = id;\n  return id;\n}\n\nfunction updateId(): string {\n  const hook = updateWorkInProgressHook();\n  const id: string = hook.memoizedState;\n  return id;\n}\n\nfunction mountRefresh() {\n  const hook = mountWorkInProgressHook();\n  const refresh = (hook.memoizedState = refreshCache.bind(\n    null,\n    currentlyRenderingFiber,\n  ));\n  return refresh;\n}\n\nfunction updateRefresh() {\n  const hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction refreshCache<T>(fiber: Fiber, seedKey: ?() => T, seedValue: T) {\n  if (!enableCache) {\n    return;\n  }\n  // TODO: Does Cache work in legacy mode? Should decide and write a test.\n  // TODO: Consider warning if the refresh is at discrete priority, or if we\n  // otherwise suspect that it wasn't batched properly.\n  let provider = fiber.return;\n  while (provider !== null) {\n    switch (provider.tag) {\n      case CacheComponent:\n      case HostRoot: {\n        // Schedule an update on the cache boundary to trigger a refresh.\n        const lane = requestUpdateLane(provider);\n        const eventTime = requestEventTime();\n        const refreshUpdate = createLegacyQueueUpdate(eventTime, lane);\n        const root = enqueueLegacyQueueUpdate(provider, refreshUpdate, lane);\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, provider, lane, eventTime);\n          entangleLegacyQueueTransitions(root, provider, lane);\n        }\n\n        // TODO: If a refresh never commits, the new cache created here must be\n        // released. A simple case is start refreshing a cache boundary, but then\n        // unmount that boundary before the refresh completes.\n        const seededCache = createCache();\n        if (seedKey !== null && seedKey !== undefined && root !== null) {\n          // Seed the cache with the value passed by the caller. This could be\n          // from a server mutation, or it could be a streaming response.\n          seededCache.data.set(seedKey, seedValue);\n        }\n\n        const payload = {\n          cache: seededCache,\n        };\n        refreshUpdate.payload = payload;\n        return;\n      }\n    }\n    provider = provider.return;\n  }\n  // TODO: Warn if unmounted?\n}\n\nfunction dispatchReducerAction<S, A>(\n  fiber: Fiber,\n  queue: UpdateQueue<S, A>,\n  action: A,\n) {\n  if (__DEV__) {\n    if (typeof arguments[3] === 'function') {\n      console.error(\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\n          'second callback argument. To execute a side effect after ' +\n          'rendering, declare it in the component body with useEffect().',\n      );\n    }\n  }\n\n  const lane = requestUpdateLane(fiber);\n\n  const update: Update<S, A> = {\n    lane,\n    action,\n    hasEagerState: false,\n    eagerState: null,\n    next: (null: any),\n  };\n\n  if (isRenderPhaseUpdate(fiber)) {\n    enqueueRenderPhaseUpdate(queue, update);\n  } else {\n    const root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n    if (root !== null) {\n      const eventTime = requestEventTime();\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitionUpdate(root, queue, lane);\n    }\n  }\n\n  markUpdateInDevTools(fiber, lane, action);\n}\n\nfunction dispatchSetState<S, A>(\n  fiber: Fiber,\n  queue: UpdateQueue<S, A>,\n  action: A,\n) {\n  if (__DEV__) {\n    if (typeof arguments[3] === 'function') {\n      console.error(\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\n          'second callback argument. To execute a side effect after ' +\n          'rendering, declare it in the component body with useEffect().',\n      );\n    }\n  }\n\n  const lane = requestUpdateLane(fiber);\n\n  const update: Update<S, A> = {\n    lane,\n    action,\n    hasEagerState: false,\n    eagerState: null,\n    next: (null: any),\n  };\n\n  if (isRenderPhaseUpdate(fiber)) {\n    enqueueRenderPhaseUpdate(queue, update);\n  } else {\n    const alternate = fiber.alternate;\n    if (\n      fiber.lanes === NoLanes &&\n      (alternate === null || alternate.lanes === NoLanes)\n    ) {\n      // The queue is currently empty, which means we can eagerly compute the\n      // next state before entering the render phase. If the new state is the\n      // same as the current state, we may be able to bail out entirely.\n      const lastRenderedReducer = queue.lastRenderedReducer;\n      if (lastRenderedReducer !== null) {\n        let prevDispatcher;\n        if (__DEV__) {\n          prevDispatcher = ReactCurrentDispatcher.current;\n          ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        }\n        try {\n          const currentState: S = (queue.lastRenderedState: any);\n          const eagerState = lastRenderedReducer(currentState, action);\n          // Stash the eagerly computed state, and the reducer used to compute\n          // it, on the update object. If the reducer hasn't changed by the\n          // time we enter the render phase, then the eager state can be used\n          // without calling the reducer again.\n          update.hasEagerState = true;\n          update.eagerState = eagerState;\n          if (is(eagerState, currentState)) {\n            // Fast path. We can bail out without scheduling React to re-render.\n            // It's still possible that we'll need to rebase this update later,\n            // if the component re-renders for a different reason and by that\n            // time the reducer has changed.\n            // TODO: Do we still need to entangle transitions in this case?\n            enqueueConcurrentHookUpdateAndEagerlyBailout(\n              fiber,\n              queue,\n              update,\n              lane,\n            );\n            return;\n          }\n        } catch (error) {\n          // Suppress the error. It will throw again in the render phase.\n        } finally {\n          if (__DEV__) {\n            ReactCurrentDispatcher.current = prevDispatcher;\n          }\n        }\n      }\n    }\n\n    const root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n    if (root !== null) {\n      const eventTime = requestEventTime();\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitionUpdate(root, queue, lane);\n    }\n  }\n\n  markUpdateInDevTools(fiber, lane, action);\n}\n\nfunction isRenderPhaseUpdate(fiber: Fiber) {\n  const alternate = fiber.alternate;\n  return (\n    fiber === currentlyRenderingFiber ||\n    (alternate !== null && alternate === currentlyRenderingFiber)\n  );\n}\n\nfunction enqueueRenderPhaseUpdate<S, A>(\n  queue: UpdateQueue<S, A>,\n  update: Update<S, A>,\n) {\n  // This is a render phase update. Stash it in a lazily-created map of\n  // queue -> linked list of updates. After this render pass, we'll restart\n  // and apply the stashed updates on top of the work-in-progress hook.\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n  const pending = queue.pending;\n  if (pending === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n  queue.pending = update;\n}\n\n// TODO: Move to ReactFiberConcurrentUpdates?\nfunction entangleTransitionUpdate<S, A>(\n  root: FiberRoot,\n  queue: UpdateQueue<S, A>,\n  lane: Lane,\n) {\n  if (isTransitionLane(lane)) {\n    let queueLanes = queue.lanes;\n\n    // If any entangled lanes are no longer pending on the root, then they\n    // must have finished. We can remove them from the shared queue, which\n    // represents a superset of the actually pending lanes. In some cases we\n    // may entangle more than we need to, but that's OK. In fact it's worse if\n    // we *don't* entangle when we should.\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes);\n\n    // Entangle the new transition lane with the other transition lanes.\n    const newQueueLanes = mergeLanes(queueLanes, lane);\n    queue.lanes = newQueueLanes;\n    // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n    markRootEntangled(root, newQueueLanes);\n  }\n}\n\nfunction markUpdateInDevTools(fiber, lane, action) {\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      if (fiber.mode & DebugTracingMode) {\n        const name = getComponentNameFromFiber(fiber) || 'Unknown';\n        logStateUpdateScheduled(name, lane, action);\n      }\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markStateUpdateScheduled(fiber, lane);\n  }\n}\n\nfunction getCacheSignal(): AbortSignal {\n  if (!enableCache) {\n    throw new Error('Not implemented.');\n  }\n  const cache: Cache = readContext(CacheContext);\n  return cache.controller.signal;\n}\n\nfunction getCacheForType<T>(resourceType: () => T): T {\n  if (!enableCache) {\n    throw new Error('Not implemented.');\n  }\n  const cache: Cache = readContext(CacheContext);\n  let cacheForType: T | void = (cache.data.get(resourceType): any);\n  if (cacheForType === undefined) {\n    cacheForType = resourceType();\n    cache.data.set(resourceType, cacheForType);\n  }\n  return cacheForType;\n}\n\nexport const ContextOnlyDispatcher: Dispatcher = {\n  readContext,\n\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useInsertionEffect: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n  useMutableSource: throwInvalidHookError,\n  useSyncExternalStore: throwInvalidHookError,\n  useId: throwInvalidHookError,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\nif (enableCache) {\n  (ContextOnlyDispatcher: Dispatcher).getCacheSignal = getCacheSignal;\n  (ContextOnlyDispatcher: Dispatcher).getCacheForType = getCacheForType;\n  (ContextOnlyDispatcher: Dispatcher).useCacheRefresh = throwInvalidHookError;\n}\n\nconst HooksDispatcherOnMount: Dispatcher = {\n  readContext,\n\n  useCallback: mountCallback,\n  useContext: readContext,\n  useEffect: mountEffect,\n  useImperativeHandle: mountImperativeHandle,\n  useLayoutEffect: mountLayoutEffect,\n  useInsertionEffect: mountInsertionEffect,\n  useMemo: mountMemo,\n  useReducer: mountReducer,\n  useRef: mountRef,\n  useState: mountState,\n  useDebugValue: mountDebugValue,\n  useDeferredValue: mountDeferredValue,\n  useTransition: mountTransition,\n  useMutableSource: mountMutableSource,\n  useSyncExternalStore: mountSyncExternalStore,\n  useId: mountId,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\nif (enableCache) {\n  (HooksDispatcherOnMount: Dispatcher).getCacheSignal = getCacheSignal;\n  (HooksDispatcherOnMount: Dispatcher).getCacheForType = getCacheForType;\n  (HooksDispatcherOnMount: Dispatcher).useCacheRefresh = mountRefresh;\n}\nconst HooksDispatcherOnUpdate: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useInsertionEffect: updateInsertionEffect,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: updateReducer,\n  useRef: updateRef,\n  useState: updateState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: updateDeferredValue,\n  useTransition: updateTransition,\n  useMutableSource: updateMutableSource,\n  useSyncExternalStore: updateSyncExternalStore,\n  useId: updateId,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\nif (enableCache) {\n  (HooksDispatcherOnUpdate: Dispatcher).getCacheSignal = getCacheSignal;\n  (HooksDispatcherOnUpdate: Dispatcher).getCacheForType = getCacheForType;\n  (HooksDispatcherOnUpdate: Dispatcher).useCacheRefresh = updateRefresh;\n}\n\nconst HooksDispatcherOnRerender: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useInsertionEffect: updateInsertionEffect,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: rerenderReducer,\n  useRef: updateRef,\n  useState: rerenderState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: rerenderDeferredValue,\n  useTransition: rerenderTransition,\n  useMutableSource: updateMutableSource,\n  useSyncExternalStore: updateSyncExternalStore,\n  useId: updateId,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\nif (enableCache) {\n  (HooksDispatcherOnRerender: Dispatcher).getCacheSignal = getCacheSignal;\n  (HooksDispatcherOnRerender: Dispatcher).getCacheForType = getCacheForType;\n  (HooksDispatcherOnRerender: Dispatcher).useCacheRefresh = updateRefresh;\n}\n\nlet HooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnRerenderInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher | null = null;\n\nif (__DEV__) {\n  const warnInvalidContextAccess = () => {\n    console.error(\n      'Context can only be read while React is rendering. ' +\n        'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n        'In function components, you can read it directly in the function body, but not ' +\n        'inside Hooks like useReducer() or useMemo().',\n    );\n  };\n\n  const warnInvalidHookAccess = () => {\n    console.error(\n      'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' +\n        'You can only call Hooks at the top level of your React function. ' +\n        'For more information, see ' +\n        'https://reactjs.org/link/rules-of-hooks',\n    );\n  };\n\n  HooksDispatcherOnMountInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useInsertionEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      mountHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n      getServerSnapshot?: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    },\n    useId(): string {\n      currentHookNameInDev = 'useId';\n      mountHookTypesDev();\n      return mountId();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (HooksDispatcherOnMountInDEV: Dispatcher).getCacheSignal = getCacheSignal;\n    (HooksDispatcherOnMountInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (HooksDispatcherOnMountInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      mountHookTypesDev();\n      return mountRefresh();\n    };\n  }\n\n  HooksDispatcherOnMountWithHookTypesInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useInsertionEffect';\n      updateHookTypesDev();\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n      getServerSnapshot?: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    },\n    useId(): string {\n      currentHookNameInDev = 'useId';\n      updateHookTypesDev();\n      return mountId();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher).getCacheSignal = getCacheSignal;\n    (HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return mountRefresh();\n    };\n  }\n\n  HooksDispatcherOnUpdateInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useInsertionEffect';\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n      getServerSnapshot?: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    },\n    useId(): string {\n      currentHookNameInDev = 'useId';\n      updateHookTypesDev();\n      return updateId();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (HooksDispatcherOnUpdateInDEV: Dispatcher).getCacheSignal = getCacheSignal;\n    (HooksDispatcherOnUpdateInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (HooksDispatcherOnUpdateInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return updateRefresh();\n    };\n  }\n\n  HooksDispatcherOnRerenderInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      return readContext(context);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useInsertionEffect';\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n      getServerSnapshot?: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    },\n    useId(): string {\n      currentHookNameInDev = 'useId';\n      updateHookTypesDev();\n      return updateId();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (HooksDispatcherOnRerenderInDEV: Dispatcher).getCacheSignal = getCacheSignal;\n    (HooksDispatcherOnRerenderInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (HooksDispatcherOnRerenderInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return updateRefresh();\n    };\n  }\n\n  InvalidNestedHooksDispatcherOnMountInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useInsertionEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n      getServerSnapshot?: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    },\n    useId(): string {\n      currentHookNameInDev = 'useId';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountId();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher).getCacheSignal = getCacheSignal;\n    (InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      mountHookTypesDev();\n      return mountRefresh();\n    };\n  }\n\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useInsertionEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n      getServerSnapshot?: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    },\n    useId(): string {\n      currentHookNameInDev = 'useId';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateId();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher).getCacheSignal = getCacheSignal;\n    (InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return updateRefresh();\n    };\n  }\n\n  InvalidNestedHooksDispatcherOnRerenderInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useInsertionEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n      getServerSnapshot?: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    },\n    useId(): string {\n      currentHookNameInDev = 'useId';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateId();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher).getCacheSignal = getCacheSignal;\n    (InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return updateRefresh();\n    };\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  enableProfilerCommitHooks,\n  enableProfilerNestedUpdatePhase,\n  enableProfilerTimer,\n} from 'shared/ReactFeatureFlags';\nimport {HostRoot, Profiler} from './ReactWorkTags';\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\n// CommonJS interop named imports.\nimport * as Scheduler from 'scheduler';\n\nconst {unstable_now: now} = Scheduler;\n\nexport type ProfilerTimer = {\n  getCommitTime(): number,\n  isCurrentUpdateNested(): boolean,\n  markNestedUpdateScheduled(): void,\n  recordCommitTime(): void,\n  startProfilerTimer(fiber: Fiber): void,\n  stopProfilerTimerIfRunning(fiber: Fiber): void,\n  stopProfilerTimerIfRunningAndRecordDelta(fiber: Fiber): void,\n  syncNestedUpdateFlag(): void,\n  ...\n};\n\nlet commitTime: number = 0;\nlet layoutEffectStartTime: number = -1;\nlet profilerStartTime: number = -1;\nlet passiveEffectStartTime: number = -1;\n\n/**\n * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).\n *\n * The overall sequence is:\n *   1. render\n *   2. commit (and call `onRender`, `onCommit`)\n *   3. check for nested updates\n *   4. flush passive effects (and call `onPostCommit`)\n *\n * Nested updates are identified in step 3 above,\n * but step 4 still applies to the work that was just committed.\n * We use two flags to track nested updates then:\n * one tracks whether the upcoming update is a nested update,\n * and the other tracks whether the current update was a nested update.\n * The first value gets synced to the second at the start of the render phase.\n */\nlet currentUpdateIsNested: boolean = false;\nlet nestedUpdateScheduled: boolean = false;\n\nfunction isCurrentUpdateNested(): boolean {\n  return currentUpdateIsNested;\n}\n\nfunction markNestedUpdateScheduled(): void {\n  if (enableProfilerNestedUpdatePhase) {\n    nestedUpdateScheduled = true;\n  }\n}\n\nfunction resetNestedUpdateFlag(): void {\n  if (enableProfilerNestedUpdatePhase) {\n    currentUpdateIsNested = false;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction syncNestedUpdateFlag(): void {\n  if (enableProfilerNestedUpdatePhase) {\n    currentUpdateIsNested = nestedUpdateScheduled;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction getCommitTime(): number {\n  return commitTime;\n}\n\nfunction recordCommitTime(): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  commitTime = now();\n}\n\nfunction startProfilerTimer(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  profilerStartTime = now();\n\n  if (((fiber.actualStartTime: any): number) < 0) {\n    fiber.actualStartTime = now();\n  }\n}\n\nfunction stopProfilerTimerIfRunning(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  profilerStartTime = -1;\n}\n\nfunction stopProfilerTimerIfRunningAndRecordDelta(\n  fiber: Fiber,\n  overrideBaseTime: boolean,\n): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  if (profilerStartTime >= 0) {\n    const elapsedTime = now() - profilerStartTime;\n    fiber.actualDuration += elapsedTime;\n    if (overrideBaseTime) {\n      fiber.selfBaseDuration = elapsedTime;\n    }\n    profilerStartTime = -1;\n  }\n}\n\nfunction recordLayoutEffectDuration(fiber: Fiber): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n\n  if (layoutEffectStartTime >= 0) {\n    const elapsedTime = now() - layoutEffectStartTime;\n\n    layoutEffectStartTime = -1;\n\n    // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n    let parentFiber = fiber.return;\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          const root = parentFiber.stateNode;\n          root.effectDuration += elapsedTime;\n          return;\n        case Profiler:\n          const parentStateNode = parentFiber.stateNode;\n          parentStateNode.effectDuration += elapsedTime;\n          return;\n      }\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction recordPassiveEffectDuration(fiber: Fiber): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n\n  if (passiveEffectStartTime >= 0) {\n    const elapsedTime = now() - passiveEffectStartTime;\n\n    passiveEffectStartTime = -1;\n\n    // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n    let parentFiber = fiber.return;\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          const root = parentFiber.stateNode;\n          if (root !== null) {\n            root.passiveEffectDuration += elapsedTime;\n          }\n          return;\n        case Profiler:\n          const parentStateNode = parentFiber.stateNode;\n          if (parentStateNode !== null) {\n            // Detached fibers have their state node cleared out.\n            // In this case, the return pointer is also cleared out,\n            // so we won't be able to report the time spent in this Profiler's subtree.\n            parentStateNode.passiveEffectDuration += elapsedTime;\n          }\n          return;\n      }\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction startLayoutEffectTimer(): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n  layoutEffectStartTime = now();\n}\n\nfunction startPassiveEffectTimer(): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n  passiveEffectStartTime = now();\n}\n\nfunction transferActualDuration(fiber: Fiber): void {\n  // Transfer time spent rendering these children so we don't lose it\n  // after we rerender. This is used as a helper in special cases\n  // where we should count the work of multiple passes.\n  let child = fiber.child;\n  while (child) {\n    fiber.actualDuration += child.actualDuration;\n    child = child.sibling;\n  }\n}\n\nexport {\n  getCommitTime,\n  isCurrentUpdateNested,\n  markNestedUpdateScheduled,\n  recordCommitTime,\n  recordLayoutEffectDuration,\n  recordPassiveEffectDuration,\n  resetNestedUpdateFlag,\n  startLayoutEffectTimer,\n  startPassiveEffectTimer,\n  startProfilerTimer,\n  stopProfilerTimerIfRunning,\n  stopProfilerTimerIfRunningAndRecordDelta,\n  syncNestedUpdateFlag,\n  transferActualDuration,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport assign from 'shared/assign';\n\nexport function resolveDefaultProps(Component: any, baseProps: Object): Object {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    const props = assign({}, baseProps);\n    const defaultProps = Component.defaultProps;\n    for (const propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n    return props;\n  }\n  return baseProps;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {UpdateQueue} from './ReactFiberClassUpdateQueue.old';\nimport type {Flags} from './ReactFiberFlags';\n\nimport {\n  LayoutStatic,\n  MountLayoutDev,\n  Update,\n  Snapshot,\n} from './ReactFiberFlags';\nimport {\n  debugRenderPhaseSideEffectsForStrictMode,\n  disableLegacyContext,\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  warnAboutDeprecatedLifecycles,\n  enableStrictEffects,\n  enableLazyContextPropagation,\n  enableSuspenseLayoutEffectSemantics,\n} from 'shared/ReactFeatureFlags';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {isMounted} from './ReactFiberTreeReflection';\nimport {get as getInstance, set as setInstance} from 'shared/ReactInstanceMap';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport assign from 'shared/assign';\nimport isArray from 'shared/isArray';\nimport {REACT_CONTEXT_TYPE, REACT_PROVIDER_TYPE} from 'shared/ReactSymbols';\n\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  DebugTracingMode,\n  NoMode,\n  StrictLegacyMode,\n  StrictEffectsMode,\n} from './ReactTypeOfMode';\n\nimport {\n  enqueueUpdate,\n  entangleTransitions,\n  processUpdateQueue,\n  checkHasForceUpdateAfterProcessing,\n  resetHasForceUpdateBeforeProcessing,\n  createUpdate,\n  ReplaceState,\n  ForceUpdate,\n  initializeUpdateQueue,\n  cloneUpdateQueue,\n} from './ReactFiberClassUpdateQueue.old';\nimport {NoLanes} from './ReactFiberLane.old';\nimport {\n  cacheContext,\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged,\n  emptyContextObject,\n} from './ReactFiberContext.old';\nimport {readContext, checkIfContextChanged} from './ReactFiberNewContext.old';\nimport {\n  requestEventTime,\n  requestUpdateLane,\n  scheduleUpdateOnFiber,\n} from './ReactFiberWorkLoop.old';\nimport {logForceUpdateScheduled, logStateUpdateScheduled} from './DebugTracing';\nimport {\n  markForceUpdateScheduled,\n  markStateUpdateScheduled,\n  setIsStrictModeForDevtools,\n} from './ReactFiberDevToolsHook.old';\n\nconst fakeInternalInstance = {};\n\nlet didWarnAboutStateAssignmentForComponent;\nlet didWarnAboutUninitializedState;\nlet didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nlet didWarnAboutLegacyLifecyclesAndDerivedState;\nlet didWarnAboutUndefinedDerivedState;\nlet warnOnUndefinedDerivedState;\nlet warnOnInvalidCallback;\nlet didWarnAboutDirectlyAssigningPropsToState;\nlet didWarnAboutContextTypeAndContextTypes;\nlet didWarnAboutInvalidateContextType;\nlet didWarnAboutLegacyContext;\n\nif (__DEV__) {\n  didWarnAboutStateAssignmentForComponent = new Set();\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n  didWarnAboutLegacyContext = new Set();\n\n  const didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function(callback: mixed, callerName: string) {\n    if (callback === null || typeof callback === 'function') {\n      return;\n    }\n    const key = callerName + '_' + (callback: any);\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n      console.error(\n        '%s(...): Expected the last optional `callback` argument to be a ' +\n          'function. Instead received: %s.',\n        callerName,\n        callback,\n      );\n    }\n  };\n\n  warnOnUndefinedDerivedState = function(type, partialState) {\n    if (partialState === undefined) {\n      const componentName = getComponentNameFromType(type) || 'Component';\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n        console.error(\n          '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' +\n            'You have returned undefined.',\n          componentName,\n        );\n      }\n    }\n  };\n\n  // This is so gross but it's at least non-critical and can be removed if\n  // it causes problems. This is meant to give a nicer error message for\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\n  // exception.\n  Object.defineProperty(fakeInternalInstance, '_processChildContext', {\n    enumerable: false,\n    value: function() {\n      throw new Error(\n        '_processChildContext is not available in React 16+. This likely ' +\n          'means you have multiple copies of React and are attempting to nest ' +\n          'a React 15 tree inside a React 16 tree using ' +\n          \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" +\n          'to make sure you have only one copy of React (and ideally, switch ' +\n          'to ReactDOM.createPortal).',\n      );\n    },\n  });\n  Object.freeze(fakeInternalInstance);\n}\n\nfunction applyDerivedStateFromProps(\n  workInProgress: Fiber,\n  ctor: any,\n  getDerivedStateFromProps: (props: any, state: any) => any,\n  nextProps: any,\n) {\n  const prevState = workInProgress.memoizedState;\n  let partialState = getDerivedStateFromProps(nextProps, prevState);\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictLegacyMode\n    ) {\n      setIsStrictModeForDevtools(true);\n      try {\n        // Invoke the function an extra time to help detect side-effects.\n        partialState = getDerivedStateFromProps(nextProps, prevState);\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n    warnOnUndefinedDerivedState(ctor, partialState);\n  }\n  // Merge the partial state and the previous state.\n  const memoizedState =\n    partialState === null || partialState === undefined\n      ? prevState\n      : assign({}, prevState, partialState);\n  workInProgress.memoizedState = memoizedState;\n\n  // Once the update queue is empty, persist the derived state onto the\n  // base state.\n  if (workInProgress.lanes === NoLanes) {\n    // Queue is always non-null for classes\n    const updateQueue: UpdateQueue<any> = (workInProgress.updateQueue: any);\n    updateQueue.baseState = memoizedState;\n  }\n}\n\nconst classComponentUpdater = {\n  isMounted,\n  enqueueSetState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.payload = payload;\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'setState');\n      }\n      update.callback = callback;\n    }\n\n    const root = enqueueUpdate(fiber, update, lane);\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentNameFromFiber(fiber) || 'Unknown';\n          logStateUpdateScheduled(name, lane, payload);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markStateUpdateScheduled(fiber, lane);\n    }\n  },\n  enqueueReplaceState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.tag = ReplaceState;\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'replaceState');\n      }\n      update.callback = callback;\n    }\n\n    const root = enqueueUpdate(fiber, update, lane);\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentNameFromFiber(fiber) || 'Unknown';\n          logStateUpdateScheduled(name, lane, payload);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markStateUpdateScheduled(fiber, lane);\n    }\n  },\n  enqueueForceUpdate(inst, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'forceUpdate');\n      }\n      update.callback = callback;\n    }\n\n    const root = enqueueUpdate(fiber, update, lane);\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentNameFromFiber(fiber) || 'Unknown';\n          logForceUpdateScheduled(name, lane);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markForceUpdateScheduled(fiber, lane);\n    }\n  },\n};\n\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext,\n) {\n  const instance = workInProgress.stateNode;\n  if (typeof instance.shouldComponentUpdate === 'function') {\n    let shouldUpdate = instance.shouldComponentUpdate(\n      newProps,\n      newState,\n      nextContext,\n    );\n    if (__DEV__) {\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictLegacyMode\n      ) {\n        setIsStrictModeForDevtools(true);\n        try {\n          // Invoke the function an extra time to help detect side-effects.\n          shouldUpdate = instance.shouldComponentUpdate(\n            newProps,\n            newState,\n            nextContext,\n          );\n        } finally {\n          setIsStrictModeForDevtools(false);\n        }\n      }\n      if (shouldUpdate === undefined) {\n        console.error(\n          '%s.shouldComponentUpdate(): Returned undefined instead of a ' +\n            'boolean value. Make sure to return true or false.',\n          getComponentNameFromType(ctor) || 'Component',\n        );\n      }\n    }\n\n    return shouldUpdate;\n  }\n\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n    return (\n      !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n    );\n  }\n\n  return true;\n}\n\nfunction checkClassInstance(workInProgress: Fiber, ctor: any, newProps: any) {\n  const instance = workInProgress.stateNode;\n  if (__DEV__) {\n    const name = getComponentNameFromType(ctor) || 'Component';\n    const renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: did you accidentally return an object from the constructor?',\n          name,\n        );\n      } else {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: you may have forgotten to define `render`.',\n          name,\n        );\n      }\n    }\n\n    if (\n      instance.getInitialState &&\n      !instance.getInitialState.isReactClassApproved &&\n      !instance.state\n    ) {\n      console.error(\n        'getInitialState was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Did you mean to define a state property instead?',\n        name,\n      );\n    }\n    if (\n      instance.getDefaultProps &&\n      !instance.getDefaultProps.isReactClassApproved\n    ) {\n      console.error(\n        'getDefaultProps was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Use a static property to define defaultProps instead.',\n        name,\n      );\n    }\n    if (instance.propTypes) {\n      console.error(\n        'propTypes was defined as an instance property on %s. Use a static ' +\n          'property to define propTypes instead.',\n        name,\n      );\n    }\n    if (instance.contextType) {\n      console.error(\n        'contextType was defined as an instance property on %s. Use a static ' +\n          'property to define contextType instead.',\n        name,\n      );\n    }\n\n    if (disableLegacyContext) {\n      if (ctor.childContextTypes) {\n        console.error(\n          '%s uses the legacy childContextTypes API which is no longer supported. ' +\n            'Use React.createContext() instead.',\n          name,\n        );\n      }\n      if (ctor.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with static contextType instead.',\n          name,\n        );\n      }\n    } else {\n      if (\n        ctor.childContextTypes &&\n        !didWarnAboutLegacyContext.has(ctor) &&\n        // Strict Mode has its own warning for legacy context, so we can skip\n        // this one.\n        (workInProgress.mode & StrictLegacyMode) === NoMode\n      ) {\n        didWarnAboutLegacyContext.add(ctor);\n        console.error(\n          '%s uses the legacy childContextTypes API which is no longer ' +\n            'supported and will be removed in the next major release. Use ' +\n            'React.createContext() instead\\n\\n.' +\n            'Learn more about this warning here: https://reactjs.org/link/legacy-context',\n          name,\n        );\n      }\n      if (\n        ctor.contextTypes &&\n        !didWarnAboutLegacyContext.has(ctor) &&\n        // Strict Mode has its own warning for legacy context, so we can skip\n        // this one.\n        (workInProgress.mode & StrictLegacyMode) === NoMode\n      ) {\n        didWarnAboutLegacyContext.add(ctor);\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported ' +\n            'and will be removed in the next major release. Use ' +\n            'React.createContext() with static contextType instead.\\n\\n' +\n            'Learn more about this warning here: https://reactjs.org/link/legacy-context',\n          name,\n        );\n      }\n\n      if (instance.contextTypes) {\n        console.error(\n          'contextTypes was defined as an instance property on %s. Use a static ' +\n            'property to define contextTypes instead.',\n          name,\n        );\n      }\n\n      if (\n        ctor.contextType &&\n        ctor.contextTypes &&\n        !didWarnAboutContextTypeAndContextTypes.has(ctor)\n      ) {\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\n        console.error(\n          '%s declares both contextTypes and contextType static properties. ' +\n            'The legacy contextTypes property will be ignored.',\n          name,\n        );\n      }\n    }\n\n    if (typeof instance.componentShouldUpdate === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        name,\n      );\n    }\n    if (\n      ctor.prototype &&\n      ctor.prototype.isPureReactComponent &&\n      typeof instance.shouldComponentUpdate !== 'undefined'\n    ) {\n      console.error(\n        '%s has a method called shouldComponentUpdate(). ' +\n          'shouldComponentUpdate should not be used when extending React.PureComponent. ' +\n          'Please extend React.Component if shouldComponentUpdate is used.',\n        getComponentNameFromType(ctor) || 'A pure component',\n      );\n    }\n    if (typeof instance.componentDidUnmount === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidUnmount(). But there is no such lifecycle method. ' +\n          'Did you mean componentWillUnmount()?',\n        name,\n      );\n    }\n    if (typeof instance.componentDidReceiveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidReceiveProps(). But there is no such lifecycle method. ' +\n          'If you meant to update the state in response to changing props, ' +\n          'use componentWillReceiveProps(). If you meant to fetch data or ' +\n          'run side-effects or mutations after React has updated the UI, use componentDidUpdate().',\n        name,\n      );\n    }\n    if (typeof instance.componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        name,\n      );\n    }\n    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',\n        name,\n      );\n    }\n    const hasMutatedProps = instance.props !== newProps;\n    if (instance.props !== undefined && hasMutatedProps) {\n      console.error(\n        '%s(...): When calling super() in `%s`, make sure to pass ' +\n          \"up the same props that your component's constructor was passed.\",\n        name,\n        name,\n      );\n    }\n    if (instance.defaultProps) {\n      console.error(\n        'Setting defaultProps as an instance property on %s is not supported and will be ignored.' +\n          ' Instead, define defaultProps as a static property on %s.',\n        name,\n        name,\n      );\n    }\n\n    if (\n      typeof instance.getSnapshotBeforeUpdate === 'function' &&\n      typeof instance.componentDidUpdate !== 'function' &&\n      !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)\n    ) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n      console.error(\n        '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' +\n          'This component defines getSnapshotBeforeUpdate() only.',\n        getComponentNameFromType(ctor),\n      );\n    }\n\n    if (typeof instance.getDerivedStateFromProps === 'function') {\n      console.error(\n        '%s: getDerivedStateFromProps() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof instance.getDerivedStateFromError === 'function') {\n      console.error(\n        '%s: getDerivedStateFromError() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {\n      console.error(\n        '%s: getSnapshotBeforeUpdate() is defined as a static method ' +\n          'and will be ignored. Instead, declare it as an instance method.',\n        name,\n      );\n    }\n    const state = instance.state;\n    if (state && (typeof state !== 'object' || isArray(state))) {\n      console.error('%s.state: must be set to an object or null', name);\n    }\n    if (\n      typeof instance.getChildContext === 'function' &&\n      typeof ctor.childContextTypes !== 'object'\n    ) {\n      console.error(\n        '%s.getChildContext(): childContextTypes must be defined in order to ' +\n          'use getChildContext().',\n        name,\n      );\n    }\n  }\n}\n\nfunction adoptClassInstance(workInProgress: Fiber, instance: any): void {\n  instance.updater = classComponentUpdater;\n  workInProgress.stateNode = instance;\n  // The instance needs access to the fiber so that it can schedule updates\n  setInstance(instance, workInProgress);\n  if (__DEV__) {\n    instance._reactInternalInstance = fakeInternalInstance;\n  }\n}\n\nfunction constructClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  props: any,\n): any {\n  let isLegacyContextConsumer = false;\n  let unmaskedContext = emptyContextObject;\n  let context = emptyContextObject;\n  const contextType = ctor.contextType;\n\n  if (__DEV__) {\n    if ('contextType' in ctor) {\n      const isValid =\n        // Allow null for conditional declaration\n        contextType === null ||\n        (contextType !== undefined &&\n          contextType.$$typeof === REACT_CONTEXT_TYPE &&\n          contextType._context === undefined); // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n\n        let addendum = '';\n        if (contextType === undefined) {\n          addendum =\n            ' However, it is set to undefined. ' +\n            'This can be caused by a typo or by mixing up named and default imports. ' +\n            'This can also happen due to a circular dependency, so ' +\n            'try moving the createContext() call to a separate file.';\n        } else if (typeof contextType !== 'object') {\n          addendum = ' However, it is set to a ' + typeof contextType + '.';\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = ' Did you accidentally pass the Context.Provider instead?';\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = ' Did you accidentally pass the Context.Consumer instead?';\n        } else {\n          addendum =\n            ' However, it is set to an object with keys {' +\n            Object.keys(contextType).join(', ') +\n            '}.';\n        }\n        console.error(\n          '%s defines an invalid contextType. ' +\n            'contextType should point to the Context object returned by React.createContext().%s',\n          getComponentNameFromType(ctor) || 'Component',\n          addendum,\n        );\n      }\n    }\n  }\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    context = readContext((contextType: any));\n  } else if (!disableLegacyContext) {\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    const contextTypes = ctor.contextTypes;\n    isLegacyContextConsumer =\n      contextTypes !== null && contextTypes !== undefined;\n    context = isLegacyContextConsumer\n      ? getMaskedContext(workInProgress, unmaskedContext)\n      : emptyContextObject;\n  }\n\n  let instance = new ctor(props, context);\n  // Instantiate twice to help detect side-effects.\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictLegacyMode\n    ) {\n      setIsStrictModeForDevtools(true);\n      try {\n        instance = new ctor(props, context); // eslint-disable-line no-new\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n  }\n\n  const state = (workInProgress.memoizedState =\n    instance.state !== null && instance.state !== undefined\n      ? instance.state\n      : null);\n  adoptClassInstance(workInProgress, instance);\n\n  if (__DEV__) {\n    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {\n      const componentName = getComponentNameFromType(ctor) || 'Component';\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n        console.error(\n          '`%s` uses `getDerivedStateFromProps` but its initial state is ' +\n            '%s. This is not recommended. Instead, define the initial state by ' +\n            'assigning an object to `this.state` in the constructor of `%s`. ' +\n            'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',\n          componentName,\n          instance.state === null ? 'null' : 'undefined',\n          componentName,\n        );\n      }\n    }\n\n    // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n    if (\n      typeof ctor.getDerivedStateFromProps === 'function' ||\n      typeof instance.getSnapshotBeforeUpdate === 'function'\n    ) {\n      let foundWillMountName = null;\n      let foundWillReceivePropsName = null;\n      let foundWillUpdateName = null;\n      if (\n        typeof instance.componentWillMount === 'function' &&\n        instance.componentWillMount.__suppressDeprecationWarning !== true\n      ) {\n        foundWillMountName = 'componentWillMount';\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        foundWillMountName = 'UNSAFE_componentWillMount';\n      }\n      if (\n        typeof instance.componentWillReceiveProps === 'function' &&\n        instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n      ) {\n        foundWillReceivePropsName = 'componentWillReceiveProps';\n      } else if (\n        typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n      ) {\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n      }\n      if (\n        typeof instance.componentWillUpdate === 'function' &&\n        instance.componentWillUpdate.__suppressDeprecationWarning !== true\n      ) {\n        foundWillUpdateName = 'componentWillUpdate';\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n      }\n      if (\n        foundWillMountName !== null ||\n        foundWillReceivePropsName !== null ||\n        foundWillUpdateName !== null\n      ) {\n        const componentName = getComponentNameFromType(ctor) || 'Component';\n        const newApiName =\n          typeof ctor.getDerivedStateFromProps === 'function'\n            ? 'getDerivedStateFromProps()'\n            : 'getSnapshotBeforeUpdate()';\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(componentName);\n          console.error(\n            'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n              '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' +\n              'The above lifecycles should be removed. Learn more about this warning here:\\n' +\n              'https://reactjs.org/link/unsafe-component-lifecycles',\n            componentName,\n            newApiName,\n            foundWillMountName !== null ? `\\n  ${foundWillMountName}` : '',\n            foundWillReceivePropsName !== null\n              ? `\\n  ${foundWillReceivePropsName}`\n              : '',\n            foundWillUpdateName !== null ? `\\n  ${foundWillUpdateName}` : '',\n          );\n        }\n      }\n    }\n  }\n\n  // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\n  if (isLegacyContextConsumer) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return instance;\n}\n\nfunction callComponentWillMount(workInProgress, instance) {\n  const oldState = instance.state;\n\n  if (typeof instance.componentWillMount === 'function') {\n    instance.componentWillMount();\n  }\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  if (oldState !== instance.state) {\n    if (__DEV__) {\n      console.error(\n        '%s.componentWillMount(): Assigning directly to this.state is ' +\n          \"deprecated (except inside a component's \" +\n          'constructor). Use setState instead.',\n        getComponentNameFromFiber(workInProgress) || 'Component',\n      );\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext,\n) {\n  const oldState = instance.state;\n  if (typeof instance.componentWillReceiveProps === 'function') {\n    instance.componentWillReceiveProps(newProps, nextContext);\n  }\n  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (instance.state !== oldState) {\n    if (__DEV__) {\n      const componentName =\n        getComponentNameFromFiber(workInProgress) || 'Component';\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n        didWarnAboutStateAssignmentForComponent.add(componentName);\n        console.error(\n          '%s.componentWillReceiveProps(): Assigning directly to ' +\n            \"this.state is deprecated (except inside a component's \" +\n            'constructor). Use setState instead.',\n          componentName,\n        );\n      }\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\n// Invokes the mount life-cycles on a previously never rendered instance.\nfunction mountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): void {\n  if (__DEV__) {\n    checkClassInstance(workInProgress, ctor, newProps);\n  }\n\n  const instance = workInProgress.stateNode;\n  instance.props = newProps;\n  instance.state = workInProgress.memoizedState;\n  instance.refs = {};\n\n  initializeUpdateQueue(workInProgress);\n\n  const contextType = ctor.contextType;\n  if (typeof contextType === 'object' && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else if (disableLegacyContext) {\n    instance.context = emptyContextObject;\n  } else {\n    const unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  if (__DEV__) {\n    if (instance.state === newProps) {\n      const componentName = getComponentNameFromType(ctor) || 'Component';\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n        console.error(\n          '%s: It is not recommended to assign props directly to state ' +\n            \"because updates to props won't be reflected in state. \" +\n            'In most cases, it is better to use props directly.',\n          componentName,\n        );\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(\n        workInProgress,\n        instance,\n      );\n    }\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(\n        workInProgress,\n        instance,\n      );\n    }\n  }\n\n  instance.state = workInProgress.memoizedState;\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    instance.state = workInProgress.memoizedState;\n  }\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    typeof ctor.getDerivedStateFromProps !== 'function' &&\n    typeof instance.getSnapshotBeforeUpdate !== 'function' &&\n    (typeof instance.UNSAFE_componentWillMount === 'function' ||\n      typeof instance.componentWillMount === 'function')\n  ) {\n    callComponentWillMount(workInProgress, instance);\n    // If we had additional state updates during this life-cycle, let's\n    // process them now.\n    processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n    instance.state = workInProgress.memoizedState;\n  }\n\n  if (typeof instance.componentDidMount === 'function') {\n    let fiberFlags: Flags = Update;\n    if (enableSuspenseLayoutEffectSemantics) {\n      fiberFlags |= LayoutStatic;\n    }\n    if (\n      __DEV__ &&\n      enableStrictEffects &&\n      (workInProgress.mode & StrictEffectsMode) !== NoMode\n    ) {\n      fiberFlags |= MountLayoutDev;\n    }\n    workInProgress.flags |= fiberFlags;\n  }\n}\n\nfunction resumeMountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  const oldProps = workInProgress.memoizedProps;\n  instance.props = oldProps;\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else if (!disableLegacyContext) {\n    const nextLegacyUnmaskedContext = getUnmaskedContext(\n      workInProgress,\n      ctor,\n      true,\n    );\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n  if (\n    oldProps === newProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing()\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      let fiberFlags: Flags = Update;\n      if (enableSuspenseLayoutEffectSemantics) {\n        fiberFlags |= LayoutStatic;\n      }\n      if (\n        __DEV__ &&\n        enableStrictEffects &&\n        (workInProgress.mode & StrictEffectsMode) !== NoMode\n      ) {\n        fiberFlags |= MountLayoutDev;\n      }\n      workInProgress.flags |= fiberFlags;\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    );\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillMount === 'function' ||\n        typeof instance.componentWillMount === 'function')\n    ) {\n      if (typeof instance.componentWillMount === 'function') {\n        instance.componentWillMount();\n      }\n      if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        instance.UNSAFE_componentWillMount();\n      }\n    }\n    if (typeof instance.componentDidMount === 'function') {\n      let fiberFlags: Flags = Update;\n      if (enableSuspenseLayoutEffectSemantics) {\n        fiberFlags |= LayoutStatic;\n      }\n      if (\n        __DEV__ &&\n        enableStrictEffects &&\n        (workInProgress.mode & StrictEffectsMode) !== NoMode\n      ) {\n        fiberFlags |= MountLayoutDev;\n      }\n      workInProgress.flags |= fiberFlags;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      let fiberFlags: Flags = Update;\n      if (enableSuspenseLayoutEffectSemantics) {\n        fiberFlags |= LayoutStatic;\n      }\n      if (\n        __DEV__ &&\n        enableStrictEffects &&\n        (workInProgress.mode & StrictEffectsMode) !== NoMode\n      ) {\n        fiberFlags |= MountLayoutDev;\n      }\n      workInProgress.flags |= fiberFlags;\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\n// Invokes the update life-cycles and returns false if it shouldn't rerender.\nfunction updateClassInstance(\n  current: Fiber,\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  cloneUpdateQueue(current, workInProgress);\n\n  const unresolvedOldProps = workInProgress.memoizedProps;\n  const oldProps =\n    workInProgress.type === workInProgress.elementType\n      ? unresolvedOldProps\n      : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n  instance.props = oldProps;\n  const unresolvedNewProps = workInProgress.pendingProps;\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else if (!disableLegacyContext) {\n    const nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (\n      unresolvedOldProps !== unresolvedNewProps ||\n      oldContext !== nextContext\n    ) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (\n    unresolvedOldProps === unresolvedNewProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing() &&\n    !(\n      enableLazyContextPropagation &&\n      current !== null &&\n      current.dependencies !== null &&\n      checkIfContextChanged(current.dependencies)\n    )\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    ) ||\n    // TODO: In some cases, we'll end up checking if context has changed twice,\n    // both before and after `shouldComponentUpdate` has been called. Not ideal,\n    // but I'm loath to refactor this function. This only happens for memoized\n    // components so it's not that common.\n    (enableLazyContextPropagation &&\n      current !== null &&\n      current.dependencies !== null &&\n      checkIfContextChanged(current.dependencies));\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillUpdate === 'function' ||\n        typeof instance.componentWillUpdate === 'function')\n    ) {\n      if (typeof instance.componentWillUpdate === 'function') {\n        instance.componentWillUpdate(newProps, newState, nextContext);\n      }\n      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n      }\n    }\n    if (typeof instance.componentDidUpdate === 'function') {\n      workInProgress.flags |= Update;\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      workInProgress.flags |= Snapshot;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized props/state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\nexport {\n  adoptClassInstance,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {getStackByFiberInDevAndProd} from './ReactFiberComponentStack';\n\nexport type CapturedValue<T> = {|\n  value: T,\n  source: Fiber | null,\n  stack: string | null,\n  digest: string | null,\n|};\n\nexport function createCapturedValueAtFiber<T>(\n  value: T,\n  source: Fiber,\n): CapturedValue<T> {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value,\n    source,\n    stack: getStackByFiberInDevAndProd(source),\n    digest: null,\n  };\n}\n\nexport function createCapturedValue<T>(\n  value: T,\n  digest: ?string,\n  stack: ?string,\n): CapturedValue<T> {\n  return {\n    value,\n    source: null,\n    stack: stack != null ? stack : null,\n    digest: digest != null ? digest : null,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {CapturedValue} from './ReactCapturedValue';\n\n// This module is forked in different environments.\n// By default, return `true` to log errors to the console.\n// Forks can return `false` if this isn't desirable.\n\nexport function showErrorDialog(\n  boundary: Fiber,\n  errorInfo: CapturedValue<mixed>,\n): boolean {\n  return true;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {CapturedValue} from './ReactCapturedValue';\n\nimport {showErrorDialog} from './ReactFiberErrorDialog';\nimport {ClassComponent} from './ReactWorkTags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {HostRoot} from 'react-reconciler/src/ReactWorkTags';\n\nexport function logCapturedError(\n  boundary: Fiber,\n  errorInfo: CapturedValue<mixed>,\n): void {\n  try {\n    const logError = showErrorDialog(boundary, errorInfo);\n\n    // Allow injected showErrorDialog() to prevent default console.error logging.\n    // This enables renderers like ReactNative to better manage redbox behavior.\n    if (logError === false) {\n      return;\n    }\n\n    const error = (errorInfo.value: any);\n    if (__DEV__) {\n      const source = errorInfo.source;\n      const stack = errorInfo.stack;\n      const componentStack = stack !== null ? stack : '';\n      // Browsers support silencing uncaught errors by calling\n      // `preventDefault()` in window `error` handler.\n      // We record this information as an expando on the error.\n      if (error != null && error._suppressLogging) {\n        if (boundary.tag === ClassComponent) {\n          // The error is recoverable and was silenced.\n          // Ignore it and don't print the stack addendum.\n          // This is handy for testing error boundaries without noise.\n          return;\n        }\n        // The error is fatal. Since the silencing might have\n        // been accidental, we'll surface it anyway.\n        // However, the browser would have silenced the original error\n        // so we'll print it first, and then print the stack addendum.\n        console['error'](error); // Don't transform to our wrapper\n        // For a more detailed description of this block, see:\n        // https://github.com/facebook/react/pull/13384\n      }\n\n      const componentName = source ? getComponentNameFromFiber(source) : null;\n      const componentNameMessage = componentName\n        ? `The above error occurred in the <${componentName}> component:`\n        : 'The above error occurred in one of your React components:';\n\n      let errorBoundaryMessage;\n      if (boundary.tag === HostRoot) {\n        errorBoundaryMessage =\n          'Consider adding an error boundary to your tree to customize error handling behavior.\\n' +\n          'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';\n      } else {\n        const errorBoundaryName =\n          getComponentNameFromFiber(boundary) || 'Anonymous';\n        errorBoundaryMessage =\n          `React will try to recreate this component tree from scratch ` +\n          `using the error boundary you provided, ${errorBoundaryName}.`;\n      }\n      const combinedMessage =\n        `${componentNameMessage}\\n${componentStack}\\n\\n` +\n        `${errorBoundaryMessage}`;\n\n      // In development, we provide our own message with just the component stack.\n      // We don't include the original error message and JS stack because the browser\n      // has already printed it. Even if the application swallows the error, it is still\n      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n      console['error'](combinedMessage); // Don't transform to our wrapper\n    } else {\n      // In production, we print the error directly.\n      // This will include the message, the JS stack, and anything the browser wants to show.\n      // We pass the error object instead of custom message so that the browser displays the error natively.\n      console['error'](error); // Don't transform to our wrapper\n    }\n  } catch (e) {\n    // This method must not throw, or React internal state will get messed up.\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n    // we want to report this error outside of the normal stack as a last resort.\n    // https://github.com/facebook/react/issues/13188\n    setTimeout(() => {\n      throw e;\n    });\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lane, Lanes} from './ReactFiberLane.old';\nimport type {CapturedValue} from './ReactCapturedValue';\nimport type {Update} from './ReactFiberClassUpdateQueue.old';\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\n\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {\n  ClassComponent,\n  HostRoot,\n  SuspenseComponent,\n  IncompleteClassComponent,\n  FunctionComponent,\n  ForwardRef,\n  SimpleMemoComponent,\n} from './ReactWorkTags';\nimport {\n  DidCapture,\n  Incomplete,\n  NoFlags,\n  ShouldCapture,\n  LifecycleEffectMask,\n  ForceUpdateForLegacySuspense,\n  ForceClientRender,\n} from './ReactFiberFlags';\nimport {shouldCaptureSuspense} from './ReactFiberSuspenseComponent.old';\nimport {NoMode, ConcurrentMode, DebugTracingMode} from './ReactTypeOfMode';\nimport {\n  enableDebugTracing,\n  enableLazyContextPropagation,\n  enableUpdaterTracking,\n} from 'shared/ReactFeatureFlags';\nimport {createCapturedValueAtFiber} from './ReactCapturedValue';\nimport {\n  enqueueCapturedUpdate,\n  createUpdate,\n  CaptureUpdate,\n  ForceUpdate,\n  enqueueUpdate,\n} from './ReactFiberClassUpdateQueue.old';\nimport {markFailedErrorBoundaryForHotReloading} from './ReactFiberHotReloading.old';\nimport {\n  suspenseStackCursor,\n  InvisibleParentSuspenseContext,\n  hasSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {\n  renderDidError,\n  renderDidSuspendDelayIfPossible,\n  onUncaughtError,\n  markLegacyErrorBoundaryAsFailed,\n  isAlreadyFailedLegacyErrorBoundary,\n  pingSuspendedRoot,\n  restorePendingUpdaters,\n} from './ReactFiberWorkLoop.old';\nimport {propagateParentContextChangesToDeferredTree} from './ReactFiberNewContext.old';\nimport {logCapturedError} from './ReactFiberErrorLogger';\nimport {logComponentSuspended} from './DebugTracing';\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook.old';\nimport {\n  SyncLane,\n  NoTimestamp,\n  includesSomeLane,\n  mergeLanes,\n  pickArbitraryLane,\n  includesSyncLane,\n} from './ReactFiberLane.old';\nimport {\n  getIsHydrating,\n  markDidThrowWhileHydratingDEV,\n  queueHydrationError,\n} from './ReactFiberHydrationContext.old';\n\nconst PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n\nfunction createRootErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  lane: Lane,\n): Update<mixed> {\n  const update = createUpdate(NoTimestamp, lane);\n  // Unmount the root by rendering null.\n  update.tag = CaptureUpdate;\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = {element: null};\n  const error = errorInfo.value;\n  update.callback = () => {\n    onUncaughtError(error);\n    logCapturedError(fiber, errorInfo);\n  };\n  return update;\n}\n\nfunction createClassErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  lane: Lane,\n): Update<mixed> {\n  const update = createUpdate(NoTimestamp, lane);\n  update.tag = CaptureUpdate;\n  const getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (typeof getDerivedStateFromError === 'function') {\n    const error = errorInfo.value;\n    update.payload = () => {\n      return getDerivedStateFromError(error);\n    };\n    update.callback = () => {\n      if (__DEV__) {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n      logCapturedError(fiber, errorInfo);\n    };\n  }\n\n  const inst = fiber.stateNode;\n  if (inst !== null && typeof inst.componentDidCatch === 'function') {\n    update.callback = function callback() {\n      if (__DEV__) {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n      logCapturedError(fiber, errorInfo);\n      if (typeof getDerivedStateFromError !== 'function') {\n        // To preserve the preexisting retry behavior of error boundaries,\n        // we keep track of which ones already failed during this batch.\n        // This gets reset before we yield back to the browser.\n        // TODO: Warn in strict mode if getDerivedStateFromError is\n        // not defined.\n        markLegacyErrorBoundaryAsFailed(this);\n      }\n      const error = errorInfo.value;\n      const stack = errorInfo.stack;\n      this.componentDidCatch(error, {\n        componentStack: stack !== null ? stack : '',\n      });\n      if (__DEV__) {\n        if (typeof getDerivedStateFromError !== 'function') {\n          // If componentDidCatch is the only error boundary method defined,\n          // then it needs to call setState to recover from errors.\n          // If no state update is scheduled then the boundary will swallow the error.\n          if (!includesSomeLane(fiber.lanes, (SyncLane: Lane))) {\n            console.error(\n              '%s: Error boundaries should implement getDerivedStateFromError(). ' +\n                'In that method, return a state update to display an error message or fallback UI.',\n              getComponentNameFromFiber(fiber) || 'Unknown',\n            );\n          }\n        }\n      }\n    };\n  }\n  return update;\n}\n\nfunction attachPingListener(root: FiberRoot, wakeable: Wakeable, lanes: Lanes) {\n  // Attach a ping listener\n  //\n  // The data might resolve before we have a chance to commit the fallback. Or,\n  // in the case of a refresh, we'll never commit a fallback. So we need to\n  // attach a listener now. When it resolves (\"pings\"), we can decide whether to\n  // try rendering the tree again.\n  //\n  // Only attach a listener if one does not already exist for the lanes\n  // we're currently rendering (which acts like a \"thread ID\" here).\n  //\n  // We only need to do this in concurrent mode. Legacy Suspense always\n  // commits fallbacks synchronously, so there are no pings.\n  let pingCache = root.pingCache;\n  let threadIDs;\n  if (pingCache === null) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else {\n    threadIDs = pingCache.get(wakeable);\n    if (threadIDs === undefined) {\n      threadIDs = new Set();\n      pingCache.set(wakeable, threadIDs);\n    }\n  }\n  if (!threadIDs.has(lanes)) {\n    // Memoize using the thread ID to prevent redundant listeners.\n    threadIDs.add(lanes);\n    const ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n    if (enableUpdaterTracking) {\n      if (isDevToolsPresent) {\n        // If we have pending work still, restore the original updaters\n        restorePendingUpdaters(root, lanes);\n      }\n    }\n    wakeable.then(ping, ping);\n  }\n}\n\nfunction attachRetryListener(\n  suspenseBoundary: Fiber,\n  root: FiberRoot,\n  wakeable: Wakeable,\n  lanes: Lanes,\n) {\n  // Retry listener\n  //\n  // If the fallback does commit, we need to attach a different type of\n  // listener. This one schedules an update on the Suspense boundary to turn\n  // the fallback state off.\n  //\n  // Stash the wakeable on the boundary fiber so we can access it in the\n  // commit phase.\n  //\n  // When the wakeable resolves, we'll attempt to render the boundary\n  // again (\"retry\").\n  const wakeables: Set<Wakeable> | null = (suspenseBoundary.updateQueue: any);\n  if (wakeables === null) {\n    const updateQueue = (new Set(): any);\n    updateQueue.add(wakeable);\n    suspenseBoundary.updateQueue = updateQueue;\n  } else {\n    wakeables.add(wakeable);\n  }\n}\n\nfunction resetSuspendedComponent(sourceFiber: Fiber, rootRenderLanes: Lanes) {\n  if (enableLazyContextPropagation) {\n    const currentSourceFiber = sourceFiber.alternate;\n    if (currentSourceFiber !== null) {\n      // Since we never visited the children of the suspended component, we\n      // need to propagate the context change now, to ensure that we visit\n      // them during the retry.\n      //\n      // We don't have to do this for errors because we retry errors without\n      // committing in between. So this is specific to Suspense.\n      propagateParentContextChangesToDeferredTree(\n        currentSourceFiber,\n        sourceFiber,\n        rootRenderLanes,\n      );\n    }\n  }\n\n  // Reset the memoizedState to what it was before we attempted to render it.\n  // A legacy mode Suspense quirk, only relevant to hook components.\n  const tag = sourceFiber.tag;\n  if (\n    (sourceFiber.mode & ConcurrentMode) === NoMode &&\n    (tag === FunctionComponent ||\n      tag === ForwardRef ||\n      tag === SimpleMemoComponent)\n  ) {\n    const currentSource = sourceFiber.alternate;\n    if (currentSource) {\n      sourceFiber.updateQueue = currentSource.updateQueue;\n      sourceFiber.memoizedState = currentSource.memoizedState;\n      sourceFiber.lanes = currentSource.lanes;\n    } else {\n      sourceFiber.updateQueue = null;\n      sourceFiber.memoizedState = null;\n    }\n  }\n}\n\nfunction getNearestSuspenseBoundaryToCapture(returnFiber: Fiber) {\n  let node = returnFiber;\n  const hasInvisibleParentBoundary = hasSuspenseContext(\n    suspenseStackCursor.current,\n    (InvisibleParentSuspenseContext: SuspenseContext),\n  );\n  do {\n    if (\n      node.tag === SuspenseComponent &&\n      shouldCaptureSuspense(node, hasInvisibleParentBoundary)\n    ) {\n      return node;\n    }\n    // This boundary already captured during this render. Continue to the next\n    // boundary.\n    node = node.return;\n  } while (node !== null);\n  return null;\n}\n\nfunction markSuspenseBoundaryShouldCapture(\n  suspenseBoundary: Fiber,\n  returnFiber: Fiber,\n  sourceFiber: Fiber,\n  root: FiberRoot,\n  rootRenderLanes: Lanes,\n): Fiber | null {\n  // This marks a Suspense boundary so that when we're unwinding the stack,\n  // it captures the suspended \"exception\" and does a second (fallback) pass.\n  if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {\n    // Legacy Mode Suspense\n    //\n    // If the boundary is in legacy mode, we should *not*\n    // suspend the commit. Pretend as if the suspended component rendered\n    // null and keep rendering. When the Suspense boundary completes,\n    // we'll do a second pass to render the fallback.\n    if (suspenseBoundary === returnFiber) {\n      // Special case where we suspended while reconciling the children of\n      // a Suspense boundary's inner Offscreen wrapper fiber. This happens\n      // when a React.lazy component is a direct child of a\n      // Suspense boundary.\n      //\n      // Suspense boundaries are implemented as multiple fibers, but they\n      // are a single conceptual unit. The legacy mode behavior where we\n      // pretend the suspended fiber committed as `null` won't work,\n      // because in this case the \"suspended\" fiber is the inner\n      // Offscreen wrapper.\n      //\n      // Because the contents of the boundary haven't started rendering\n      // yet (i.e. nothing in the tree has partially rendered) we can\n      // switch to the regular, concurrent mode behavior: mark the\n      // boundary with ShouldCapture and enter the unwind phase.\n      suspenseBoundary.flags |= ShouldCapture;\n    } else {\n      suspenseBoundary.flags |= DidCapture;\n      sourceFiber.flags |= ForceUpdateForLegacySuspense;\n\n      // We're going to commit this fiber even though it didn't complete.\n      // But we shouldn't call any lifecycle methods or callbacks. Remove\n      // all lifecycle effect tags.\n      sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n\n      if (sourceFiber.tag === ClassComponent) {\n        const currentSourceFiber = sourceFiber.alternate;\n        if (currentSourceFiber === null) {\n          // This is a new mount. Change the tag so it's not mistaken for a\n          // completed class component. For example, we should not call\n          // componentWillUnmount if it is deleted.\n          sourceFiber.tag = IncompleteClassComponent;\n        } else {\n          // When we try rendering again, we should not reuse the current fiber,\n          // since it's known to be in an inconsistent state. Use a force update to\n          // prevent a bail out.\n          const update = createUpdate(NoTimestamp, SyncLane);\n          update.tag = ForceUpdate;\n          enqueueUpdate(sourceFiber, update, SyncLane);\n        }\n      }\n\n      // The source fiber did not complete. Mark it with Sync priority to\n      // indicate that it still has pending work.\n      sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\n    }\n    return suspenseBoundary;\n  }\n  // Confirmed that the boundary is in a concurrent mode tree. Continue\n  // with the normal suspend path.\n  //\n  // After this we'll use a set of heuristics to determine whether this\n  // render pass will run to completion or restart or \"suspend\" the commit.\n  // The actual logic for this is spread out in different places.\n  //\n  // This first principle is that if we're going to suspend when we complete\n  // a root, then we should also restart if we get an update or ping that\n  // might unsuspend it, and vice versa. The only reason to suspend is\n  // because you think you might want to restart before committing. However,\n  // it doesn't make sense to restart only while in the period we're suspended.\n  //\n  // Restarting too aggressively is also not good because it starves out any\n  // intermediate loading state. So we use heuristics to determine when.\n\n  // Suspense Heuristics\n  //\n  // If nothing threw a Promise or all the same fallbacks are already showing,\n  // then don't suspend/restart.\n  //\n  // If this is an initial render of a new tree of Suspense boundaries and\n  // those trigger a fallback, then don't suspend/restart. We want to ensure\n  // that we can show the initial loading state as quickly as possible.\n  //\n  // If we hit a \"Delayed\" case, such as when we'd switch from content back into\n  // a fallback, then we should always suspend/restart. Transitions apply\n  // to this case. If none is defined, JND is used instead.\n  //\n  // If we're already showing a fallback and it gets \"retried\", allowing us to show\n  // another level, but there's still an inner boundary that would show a fallback,\n  // then we suspend/restart for 500ms since the last time we showed a fallback\n  // anywhere in the tree. This effectively throttles progressive loading into a\n  // consistent train of commits. This also gives us an opportunity to restart to\n  // get to the completed state slightly earlier.\n  //\n  // If there's ambiguity due to batching it's resolved in preference of:\n  // 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\n  //\n  // We want to ensure that a \"busy\" state doesn't get force committed. We want to\n  // ensure that new initial loading states can commit as soon as possible.\n  suspenseBoundary.flags |= ShouldCapture;\n  // TODO: I think we can remove this, since we now use `DidCapture` in\n  // the begin phase to prevent an early bailout.\n  suspenseBoundary.lanes = rootRenderLanes;\n  return suspenseBoundary;\n}\n\nfunction throwException(\n  root: FiberRoot,\n  returnFiber: Fiber,\n  sourceFiber: Fiber,\n  value: mixed,\n  rootRenderLanes: Lanes,\n) {\n  // The source fiber did not complete.\n  sourceFiber.flags |= Incomplete;\n\n  if (enableUpdaterTracking) {\n    if (isDevToolsPresent) {\n      // If we have pending work still, restore the original updaters\n      restorePendingUpdaters(root, rootRenderLanes);\n    }\n  }\n\n  if (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.then === 'function'\n  ) {\n    // This is a wakeable. The component suspended.\n    const wakeable: Wakeable = (value: any);\n    resetSuspendedComponent(sourceFiber, rootRenderLanes);\n\n    if (__DEV__) {\n      if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {\n        markDidThrowWhileHydratingDEV();\n      }\n    }\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (sourceFiber.mode & DebugTracingMode) {\n          const name = getComponentNameFromFiber(sourceFiber) || 'Unknown';\n          logComponentSuspended(name, wakeable);\n        }\n      }\n    }\n\n    // Schedule the nearest Suspense to re-render the timed out view.\n    const suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);\n    if (suspenseBoundary !== null) {\n      suspenseBoundary.flags &= ~ForceClientRender;\n      markSuspenseBoundaryShouldCapture(\n        suspenseBoundary,\n        returnFiber,\n        sourceFiber,\n        root,\n        rootRenderLanes,\n      );\n      // We only attach ping listeners in concurrent mode. Legacy Suspense always\n      // commits fallbacks synchronously, so there are no pings.\n      if (suspenseBoundary.mode & ConcurrentMode) {\n        attachPingListener(root, wakeable, rootRenderLanes);\n      }\n      attachRetryListener(suspenseBoundary, root, wakeable, rootRenderLanes);\n      return;\n    } else {\n      // No boundary was found. Unless this is a sync update, this is OK.\n      // We can suspend and wait for more data to arrive.\n\n      if (!includesSyncLane(rootRenderLanes)) {\n        // This is not a sync update. Suspend. Since we're not activating a\n        // Suspense boundary, this will unwind all the way to the root without\n        // performing a second pass to render a fallback. (This is arguably how\n        // refresh transitions should work, too, since we're not going to commit\n        // the fallbacks anyway.)\n        //\n        // This case also applies to initial hydration.\n        attachPingListener(root, wakeable, rootRenderLanes);\n        renderDidSuspendDelayIfPossible();\n        return;\n      }\n\n      // This is a sync/discrete update. We treat this case like an error\n      // because discrete renders are expected to produce a complete tree\n      // synchronously to maintain consistency with external state.\n      const uncaughtSuspenseError = new Error(\n        'A component suspended while responding to synchronous input. This ' +\n          'will cause the UI to be replaced with a loading indicator. To ' +\n          'fix, updates that suspend should be wrapped ' +\n          'with startTransition.',\n      );\n\n      // If we're outside a transition, fall through to the regular error path.\n      // The error will be caught by the nearest suspense boundary.\n      value = uncaughtSuspenseError;\n    }\n  } else {\n    // This is a regular error, not a Suspense wakeable.\n    if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {\n      markDidThrowWhileHydratingDEV();\n      const suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);\n      // If the error was thrown during hydration, we may be able to recover by\n      // discarding the dehydrated content and switching to a client render.\n      // Instead of surfacing the error, find the nearest Suspense boundary\n      // and render it again without hydration.\n      if (suspenseBoundary !== null) {\n        if ((suspenseBoundary.flags & ShouldCapture) === NoFlags) {\n          // Set a flag to indicate that we should try rendering the normal\n          // children again, not the fallback.\n          suspenseBoundary.flags |= ForceClientRender;\n        }\n        markSuspenseBoundaryShouldCapture(\n          suspenseBoundary,\n          returnFiber,\n          sourceFiber,\n          root,\n          rootRenderLanes,\n        );\n\n        // Even though the user may not be affected by this error, we should\n        // still log it so it can be fixed.\n        queueHydrationError(createCapturedValueAtFiber(value, sourceFiber));\n        return;\n      }\n    } else {\n      // Otherwise, fall through to the error path.\n    }\n  }\n\n  value = createCapturedValueAtFiber(value, sourceFiber);\n  renderDidError(value);\n\n  // We didn't find a boundary that could handle this type of exception. Start\n  // over and traverse parent path again, this time treating the exception\n  // as an error.\n  let workInProgress = returnFiber;\n  do {\n    switch (workInProgress.tag) {\n      case HostRoot: {\n        const errorInfo = value;\n        workInProgress.flags |= ShouldCapture;\n        const lane = pickArbitraryLane(rootRenderLanes);\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n        const update = createRootErrorUpdate(workInProgress, errorInfo, lane);\n        enqueueCapturedUpdate(workInProgress, update);\n        return;\n      }\n      case ClassComponent:\n        // Capture and retry\n        const errorInfo = value;\n        const ctor = workInProgress.type;\n        const instance = workInProgress.stateNode;\n        if (\n          (workInProgress.flags & DidCapture) === NoFlags &&\n          (typeof ctor.getDerivedStateFromError === 'function' ||\n            (instance !== null &&\n              typeof instance.componentDidCatch === 'function' &&\n              !isAlreadyFailedLegacyErrorBoundary(instance)))\n        ) {\n          workInProgress.flags |= ShouldCapture;\n          const lane = pickArbitraryLane(rootRenderLanes);\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n          // Schedule the error boundary to re-render using updated state\n          const update = createClassErrorUpdate(\n            workInProgress,\n            errorInfo,\n            lane,\n          );\n          enqueueCapturedUpdate(workInProgress, update);\n          return;\n        }\n        break;\n      default:\n        break;\n    }\n    workInProgress = workInProgress.return;\n  } while (workInProgress !== null);\n}\n\nexport {throwException, createRootErrorUpdate, createClassErrorUpdate};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Cache, SpawnedCachePool} from './ReactFiberCacheComponent.old';\nimport type {Transition} from './ReactFiberTracingMarkerComponent.old';\n\nimport {enableCache, enableTransitionTracing} from 'shared/ReactFeatureFlags';\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\nimport {\n  getWorkInProgressRoot,\n  getWorkInProgressTransitions,\n} from './ReactFiberWorkLoop.old';\nimport {\n  createCache,\n  retainCache,\n  CacheContext,\n} from './ReactFiberCacheComponent.old';\n\n// When retrying a Suspense/Offscreen boundary, we restore the cache that was\n// used during the previous render by placing it here, on the stack.\nconst resumedCache: StackCursor<Cache | null> = createCursor(null);\n\n// During the render/synchronous commit phase, we don't actually process the\n// transitions. Therefore, we want to lazily combine transitions. Instead of\n// comparing the arrays of transitions when we combine them and storing them\n// and filtering out the duplicates, we will instead store the unprocessed transitions\n// in an array and actually filter them in the passive phase.\nconst transitionStack: StackCursor<Array<Transition> | null> = createCursor(\n  null,\n);\n\nfunction peekCacheFromPool(): Cache | null {\n  if (!enableCache) {\n    return (null: any);\n  }\n\n  // Check if the cache pool already has a cache we can use.\n\n  // If we're rendering inside a Suspense boundary that is currently hidden,\n  // we should use the same cache that we used during the previous render, if\n  // one exists.\n  const cacheResumedFromPreviousRender = resumedCache.current;\n  if (cacheResumedFromPreviousRender !== null) {\n    return cacheResumedFromPreviousRender;\n  }\n\n  // Otherwise, check the root's cache pool.\n  const root = (getWorkInProgressRoot(): any);\n  const cacheFromRootCachePool = root.pooledCache;\n\n  return cacheFromRootCachePool;\n}\n\nexport function requestCacheFromPool(renderLanes: Lanes): Cache {\n  // Similar to previous function, except if there's not already a cache in the\n  // pool, we allocate a new one.\n  const cacheFromPool = peekCacheFromPool();\n  if (cacheFromPool !== null) {\n    return cacheFromPool;\n  }\n\n  // Create a fresh cache and add it to the root cache pool. A cache can have\n  // multiple owners:\n  // - A cache pool that lives on the FiberRoot. This is where all fresh caches\n  //   are originally created (TODO: except during refreshes, until we implement\n  //   this correctly). The root takes ownership immediately when the cache is\n  //   created. Conceptually, root.pooledCache is an Option<Arc<Cache>> (owned),\n  //   and the return value of this function is a &Arc<Cache> (borrowed).\n  // - One of several fiber types: host root, cache boundary, suspense\n  //   component. These retain and release in the commit phase.\n\n  const root = (getWorkInProgressRoot(): any);\n  const freshCache = createCache();\n  root.pooledCache = freshCache;\n  retainCache(freshCache);\n  if (freshCache !== null) {\n    root.pooledCacheLanes |= renderLanes;\n  }\n  return freshCache;\n}\n\nexport function pushRootTransition(\n  workInProgress: Fiber,\n  root: FiberRoot,\n  renderLanes: Lanes,\n) {\n  if (enableTransitionTracing) {\n    const rootTransitions = getWorkInProgressTransitions();\n    push(transitionStack, rootTransitions, workInProgress);\n  }\n}\n\nexport function popRootTransition(\n  workInProgress: Fiber,\n  root: FiberRoot,\n  renderLanes: Lanes,\n) {\n  if (enableTransitionTracing) {\n    pop(transitionStack, workInProgress);\n  }\n}\n\nexport function pushTransition(\n  offscreenWorkInProgress: Fiber,\n  prevCachePool: SpawnedCachePool | null,\n  newTransitions: Array<Transition> | null,\n): void {\n  if (enableCache) {\n    if (prevCachePool === null) {\n      push(resumedCache, resumedCache.current, offscreenWorkInProgress);\n    } else {\n      push(resumedCache, prevCachePool.pool, offscreenWorkInProgress);\n    }\n  }\n\n  if (enableTransitionTracing) {\n    if (transitionStack.current === null) {\n      push(transitionStack, newTransitions, offscreenWorkInProgress);\n    } else if (newTransitions === null) {\n      push(transitionStack, transitionStack.current, offscreenWorkInProgress);\n    } else {\n      push(\n        transitionStack,\n        transitionStack.current.concat(newTransitions),\n        offscreenWorkInProgress,\n      );\n    }\n  }\n}\n\nexport function popTransition(workInProgress: Fiber, current: Fiber | null) {\n  if (current !== null) {\n    if (enableCache) {\n      pop(resumedCache, workInProgress);\n    }\n\n    if (enableTransitionTracing) {\n      pop(transitionStack, workInProgress);\n    }\n  }\n}\n\nexport function getSuspendedTransitions(): Array<Transition> | null {\n  if (!enableTransitionTracing) {\n    return null;\n  }\n\n  return transitionStack.current;\n}\n\nexport function getSuspendedCache(): SpawnedCachePool | null {\n  if (!enableCache) {\n    return null;\n  }\n  // This function is called when a Suspense boundary suspends. It returns the\n  // cache that would have been used to render fresh data during this render,\n  // if there was any, so that we can resume rendering with the same cache when\n  // we receive more data.\n  const cacheFromPool = peekCacheFromPool();\n  if (cacheFromPool === null) {\n    return null;\n  }\n\n  return {\n    // We must also save the parent, so that when we resume we can detect\n    // a refresh.\n    parent: isPrimaryRenderer\n      ? CacheContext._currentValue\n      : CacheContext._currentValue2,\n    pool: cacheFromPool,\n  };\n}\n\nexport function getOffscreenDeferredCache(): SpawnedCachePool | null {\n  if (!enableCache) {\n    return null;\n  }\n\n  const cacheFromPool = peekCacheFromPool();\n  if (cacheFromPool === null) {\n    return null;\n  }\n\n  return {\n    // We must also store the parent, so that when we resume we can detect\n    // a refresh.\n    parent: isPrimaryRenderer\n      ? CacheContext._currentValue\n      : CacheContext._currentValue2,\n    pool: cacheFromPool,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  ReactProviderType,\n  ReactContext,\n  ReactNodeList,\n} from 'shared/ReactTypes';\nimport type {LazyComponent as LazyComponentType} from 'react/src/ReactLazy';\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {TypeOfMode} from './ReactTypeOfMode';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\nimport type {MutableSource} from 'shared/ReactTypes';\nimport type {\n  SuspenseState,\n  SuspenseListRenderState,\n  SuspenseListTailMode,\n} from './ReactFiberSuspenseComponent.old';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\nimport type {\n  OffscreenProps,\n  OffscreenState,\n  OffscreenQueue,\n} from './ReactFiberOffscreenComponent';\nimport type {\n  Cache,\n  CacheComponentState,\n  SpawnedCachePool,\n} from './ReactFiberCacheComponent.old';\nimport type {UpdateQueue} from './ReactFiberClassUpdateQueue.old';\nimport type {RootState} from './ReactFiberRoot.old';\nimport {\n  enableSuspenseAvoidThisFallback,\n  enableCPUSuspense,\n  enableUseMutableSource,\n} from 'shared/ReactFeatureFlags';\n\nimport checkPropTypes from 'shared/checkPropTypes';\nimport {\n  markComponentRenderStarted,\n  markComponentRenderStopped,\n  setIsStrictModeForDevtools,\n} from './ReactFiberDevToolsHook.old';\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n  TracingMarkerComponent,\n} from './ReactWorkTags';\nimport {\n  NoFlags,\n  PerformedWork,\n  Placement,\n  Hydrating,\n  ContentReset,\n  DidCapture,\n  Update,\n  Ref,\n  RefStatic,\n  ChildDeletion,\n  ForceUpdateForLegacySuspense,\n  StaticMask,\n  ShouldCapture,\n  ForceClientRender,\n} from './ReactFiberFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  debugRenderPhaseSideEffectsForStrictMode,\n  disableLegacyContext,\n  disableModulePatternComponents,\n  enableProfilerCommitHooks,\n  enableProfilerTimer,\n  warnAboutDefaultPropsOnFunctionComponents,\n  enableScopeAPI,\n  enableCache,\n  enableLazyContextPropagation,\n  enableSuspenseLayoutEffectSemantics,\n  enableSchedulingProfiler,\n  enableTransitionTracing,\n  enableLegacyHidden,\n} from 'shared/ReactFeatureFlags';\nimport isArray from 'shared/isArray';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {REACT_LAZY_TYPE, getIteratorFn} from 'shared/ReactSymbols';\nimport {\n  getCurrentFiberOwnerNameInDevOrNull,\n  setIsRendering,\n} from './ReactCurrentFiber';\nimport {\n  resolveFunctionForHotReloading,\n  resolveForwardRefForHotReloading,\n  resolveClassForHotReloading,\n} from './ReactFiberHotReloading.old';\n\nimport {\n  mountChildFibers,\n  reconcileChildFibers,\n  cloneChildFibers,\n} from './ReactChildFiber.old';\nimport {\n  processUpdateQueue,\n  cloneUpdateQueue,\n  initializeUpdateQueue,\n  enqueueCapturedUpdate,\n} from './ReactFiberClassUpdateQueue.old';\nimport {\n  NoLane,\n  NoLanes,\n  SyncLane,\n  OffscreenLane,\n  DefaultHydrationLane,\n  SomeRetryLane,\n  NoTimestamp,\n  includesSomeLane,\n  laneToLanes,\n  removeLanes,\n  mergeLanes,\n  getBumpedLaneForHydration,\n  pickArbitraryLane,\n} from './ReactFiberLane.old';\nimport {\n  ConcurrentMode,\n  NoMode,\n  ProfileMode,\n  StrictLegacyMode,\n} from './ReactTypeOfMode';\nimport {\n  shouldSetTextContent,\n  isSuspenseInstancePending,\n  isSuspenseInstanceFallback,\n  getSuspenseInstanceFallbackErrorDetails,\n  registerSuspenseInstanceRetry,\n  supportsHydration,\n  isPrimaryRenderer,\n} from './ReactFiberHostConfig';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport {shouldError, shouldSuspend} from './ReactFiberReconciler';\nimport {pushHostContext, pushHostContainer} from './ReactFiberHostContext.old';\nimport {\n  suspenseStackCursor,\n  pushSuspenseContext,\n  InvisibleParentSuspenseContext,\n  ForceSuspenseFallback,\n  hasSuspenseContext,\n  setDefaultShallowSuspenseContext,\n  addSubtreeSuspenseContext,\n  setShallowSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {findFirstSuspended} from './ReactFiberSuspenseComponent.old';\nimport {\n  pushProvider,\n  propagateContextChange,\n  lazilyPropagateParentContextChanges,\n  propagateParentContextChangesToDeferredTree,\n  checkIfContextChanged,\n  readContext,\n  prepareToReadContext,\n  scheduleContextWorkOnParentPath,\n} from './ReactFiberNewContext.old';\nimport {\n  renderWithHooks,\n  checkDidRenderIdHook,\n  bailoutHooks,\n} from './ReactFiberHooks.old';\nimport {stopProfilerTimerIfRunning} from './ReactProfilerTimer.old';\nimport {\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged as hasLegacyContextChanged,\n  pushContextProvider as pushLegacyContextProvider,\n  isContextProvider as isLegacyContextProvider,\n  pushTopLevelContextObject,\n  invalidateContextProvider,\n} from './ReactFiberContext.old';\nimport {\n  getIsHydrating,\n  enterHydrationState,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n  warnIfHydrating,\n  queueHydrationError,\n} from './ReactFiberHydrationContext.old';\nimport {\n  adoptClassInstance,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n} from './ReactFiberClassComponent.old';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  resolveLazyComponentTag,\n  createFiberFromTypeAndProps,\n  createFiberFromFragment,\n  createFiberFromOffscreen,\n  createWorkInProgress,\n  isSimpleFunctionComponent,\n} from './ReactFiber.old';\nimport {\n  retryDehydratedSuspenseBoundary,\n  scheduleUpdateOnFiber,\n  renderDidSuspendDelayIfPossible,\n  markSkippedUpdateLanes,\n  getWorkInProgressRoot,\n  pushRenderLanes,\n} from './ReactFiberWorkLoop.old';\nimport {enqueueConcurrentRenderForLane} from './ReactFiberConcurrentUpdates.old';\nimport {setWorkInProgressVersion} from './ReactMutableSource.old';\nimport {pushCacheProvider, CacheContext} from './ReactFiberCacheComponent.old';\nimport {\n  createCapturedValue,\n  createCapturedValueAtFiber,\n  type CapturedValue,\n} from './ReactCapturedValue';\nimport {createClassErrorUpdate} from './ReactFiberThrow.old';\nimport is from 'shared/objectIs';\nimport {\n  getForksAtLevel,\n  isForkedChild,\n  pushTreeId,\n  pushMaterializedTreeId,\n} from './ReactFiberTreeContext.old';\nimport {\n  requestCacheFromPool,\n  pushRootTransition,\n  getSuspendedCache,\n  pushTransition,\n  getOffscreenDeferredCache,\n  getSuspendedTransitions,\n} from './ReactFiberTransition.old';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nlet didReceiveUpdate: boolean = false;\n\nlet didWarnAboutBadClass;\nlet didWarnAboutModulePatternComponent;\nlet didWarnAboutContextTypeOnFunctionComponent;\nlet didWarnAboutGetDerivedStateOnFunctionComponent;\nlet didWarnAboutFunctionRefs;\nexport let didWarnAboutReassigningProps;\nlet didWarnAboutRevealOrder;\nlet didWarnAboutTailOptions;\nlet didWarnAboutDefaultPropsOnFunctionComponent;\n\nif (__DEV__) {\n  didWarnAboutBadClass = {};\n  didWarnAboutModulePatternComponent = {};\n  didWarnAboutContextTypeOnFunctionComponent = {};\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\n  didWarnAboutFunctionRefs = {};\n  didWarnAboutReassigningProps = false;\n  didWarnAboutRevealOrder = {};\n  didWarnAboutTailOptions = {};\n  didWarnAboutDefaultPropsOnFunctionComponent = {};\n}\n\nexport function reconcileChildren(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  nextChildren: any,\n  renderLanes: Lanes,\n) {\n  if (current === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    workInProgress.child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      current.child,\n      nextChildren,\n      renderLanes,\n    );\n  }\n}\n\nfunction forceUnmountCurrentAndReconcile(\n  current: Fiber,\n  workInProgress: Fiber,\n  nextChildren: any,\n  renderLanes: Lanes,\n) {\n  // This function is fork of reconcileChildren. It's used in cases where we\n  // want to reconcile without matching against the existing set. This has the\n  // effect of all current children being unmounted; even if the type and key\n  // are the same, the old child is unmounted and a new child is created.\n  //\n  // To do this, we're going to go through the reconcile algorithm twice. In\n  // the first pass, we schedule a deletion for all the current children by\n  // passing null.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    current.child,\n    null,\n    renderLanes,\n  );\n  // In the second pass, we mount the new children. The trick here is that we\n  // pass null in place of where we usually pass the current child set. This has\n  // the effect of remounting all children regardless of whether their\n  // identities match.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    null,\n    nextChildren,\n    renderLanes,\n  );\n}\n\nfunction updateForwardRef(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentNameFromType(Component),\n        );\n      }\n    }\n  }\n\n  const render = Component.render;\n  const ref = workInProgress.ref;\n\n  // The rest is a fork of updateFunctionComponent\n  let nextChildren;\n  let hasId;\n  prepareToReadContext(workInProgress, renderLanes);\n  if (enableSchedulingProfiler) {\n    markComponentRenderStarted(workInProgress);\n  }\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderLanes,\n    );\n    hasId = checkDidRenderIdHook();\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictLegacyMode\n    ) {\n      setIsStrictModeForDevtools(true);\n      try {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          render,\n          nextProps,\n          ref,\n          renderLanes,\n        );\n        hasId = checkDidRenderIdHook();\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderLanes,\n    );\n    hasId = checkDidRenderIdHook();\n  }\n  if (enableSchedulingProfiler) {\n    markComponentRenderStopped();\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  if (getIsHydrating() && hasId) {\n    pushMaterializedTreeId(workInProgress);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n): null | Fiber {\n  if (current === null) {\n    const type = Component.type;\n    if (\n      isSimpleFunctionComponent(type) &&\n      Component.compare === null &&\n      // SimpleMemoComponent codepath doesn't resolve outer props either.\n      Component.defaultProps === undefined\n    ) {\n      let resolvedType = type;\n      if (__DEV__) {\n        resolvedType = resolveFunctionForHotReloading(type);\n      }\n      // If this is a plain function component without default props,\n      // and with only the default shallow comparison, we upgrade it\n      // to a SimpleMemoComponent to allow fast path updates.\n      workInProgress.tag = SimpleMemoComponent;\n      workInProgress.type = resolvedType;\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, type);\n      }\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        resolvedType,\n        nextProps,\n        renderLanes,\n      );\n    }\n    if (__DEV__) {\n      const innerPropTypes = type.propTypes;\n      if (innerPropTypes) {\n        // Inner memo component props aren't currently validated in createElement.\n        // We could move it there, but we'd still need this for lazy code path.\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentNameFromType(type),\n        );\n      }\n      if (\n        warnAboutDefaultPropsOnFunctionComponents &&\n        Component.defaultProps !== undefined\n      ) {\n        const componentName = getComponentNameFromType(type) || 'Unknown';\n        if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {\n          console.error(\n            '%s: Support for defaultProps will be removed from memo components ' +\n              'in a future major release. Use JavaScript default parameters instead.',\n            componentName,\n          );\n          didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;\n        }\n      }\n    }\n    const child = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes,\n    );\n    child.ref = workInProgress.ref;\n    child.return = workInProgress;\n    workInProgress.child = child;\n    return child;\n  }\n  if (__DEV__) {\n    const type = Component.type;\n    const innerPropTypes = type.propTypes;\n    if (innerPropTypes) {\n      // Inner memo component props aren't currently validated in createElement.\n      // We could move it there, but we'd still need this for lazy code path.\n      checkPropTypes(\n        innerPropTypes,\n        nextProps, // Resolved props\n        'prop',\n        getComponentNameFromType(type),\n      );\n    }\n  }\n  const currentChild = ((current.child: any): Fiber); // This is always exactly one child\n  const hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(\n    current,\n    renderLanes,\n  );\n  if (!hasScheduledUpdateOrContext) {\n    // This will be the props with resolved defaultProps,\n    // unlike current.memoizedProps which will be the unresolved ones.\n    const prevProps = currentChild.memoizedProps;\n    // Default to shallow comparison\n    let compare = Component.compare;\n    compare = compare !== null ? compare : shallowEqual;\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n  }\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  const newChild = createWorkInProgress(currentChild, nextProps);\n  newChild.ref = workInProgress.ref;\n  newChild.return = workInProgress;\n  workInProgress.child = newChild;\n  return newChild;\n}\n\nfunction updateSimpleMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n): null | Fiber {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens when the inner render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      let outerMemoType = workInProgress.elementType;\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n        // We warn when you define propTypes on lazy()\n        // so let's just skip over it to find memo() outer wrapper.\n        // Inner props for memo are validated later.\n        const lazyComponent: LazyComponentType<any, any> = outerMemoType;\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          outerMemoType = init(payload);\n        } catch (x) {\n          outerMemoType = null;\n        }\n        // Inner propTypes will be validated in the function component path.\n        const outerPropTypes = outerMemoType && (outerMemoType: any).propTypes;\n        if (outerPropTypes) {\n          checkPropTypes(\n            outerPropTypes,\n            nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\n            'prop',\n            getComponentNameFromType(outerMemoType),\n          );\n        }\n      }\n    }\n  }\n  if (current !== null) {\n    const prevProps = current.memoizedProps;\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref &&\n      // Prevent bailout if the implementation changed due to hot reload.\n      (__DEV__ ? workInProgress.type === current.type : true)\n    ) {\n      didReceiveUpdate = false;\n\n      // The props are shallowly equal. Reuse the previous props object, like we\n      // would during a normal fiber bailout.\n      //\n      // We don't have strong guarantees that the props object is referentially\n      // equal during updates where we can't bail out anyway — like if the props\n      // are shallowly equal, but there's a local state or context update in the\n      // same batch.\n      //\n      // However, as a principle, we should aim to make the behavior consistent\n      // across different ways of memoizing a component. For example, React.memo\n      // has a different internal Fiber layout if you pass a normal function\n      // component (SimpleMemoComponent) versus if you pass a different type\n      // like forwardRef (MemoComponent). But this is an implementation detail.\n      // Wrapping a component in forwardRef (or React.lazy, etc) shouldn't\n      // affect whether the props object is reused during a bailout.\n      workInProgress.pendingProps = nextProps = prevProps;\n\n      if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n        // The pending lanes were cleared at the beginning of beginWork. We're\n        // about to bail out, but there might be other lanes that weren't\n        // included in the current render. Usually, the priority level of the\n        // remaining updates is accumulated during the evaluation of the\n        // component (i.e. when processing the update queue). But since since\n        // we're bailing out early *without* evaluating the component, we need\n        // to account for it here, too. Reset to the value of the current fiber.\n        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\n        // because a MemoComponent fiber does not have hooks or an update queue;\n        // rather, it wraps around an inner component, which may or may not\n        // contains hooks.\n        // TODO: Move the reset at in beginWork out of the common path so that\n        // this is no longer necessary.\n        workInProgress.lanes = current.lanes;\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      }\n    }\n  }\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes,\n  );\n}\n\nfunction updateOffscreenComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextProps: OffscreenProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  const prevState: OffscreenState | null =\n    current !== null ? current.memoizedState : null;\n\n  if (\n    nextProps.mode === 'hidden' ||\n    (enableLegacyHidden && nextProps.mode === 'unstable-defer-without-hiding')\n  ) {\n    // Rendering a hidden tree.\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      // In legacy sync mode, don't defer the subtree. Render it now.\n      // TODO: Consider how Offscreen should work with transitions in the future\n      const nextState: OffscreenState = {\n        baseLanes: NoLanes,\n        cachePool: null,\n        transitions: null,\n      };\n      workInProgress.memoizedState = nextState;\n      if (enableCache) {\n        // push the cache pool even though we're going to bail out\n        // because otherwise there'd be a context mismatch\n        if (current !== null) {\n          pushTransition(workInProgress, null, null);\n        }\n      }\n      pushRenderLanes(workInProgress, renderLanes);\n    } else if (!includesSomeLane(renderLanes, (OffscreenLane: Lane))) {\n      let spawnedCachePool: SpawnedCachePool | null = null;\n      // We're hidden, and we're not rendering at Offscreen. We will bail out\n      // and resume this tree later.\n      let nextBaseLanes;\n      if (prevState !== null) {\n        const prevBaseLanes = prevState.baseLanes;\n        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n        if (enableCache) {\n          // Save the cache pool so we can resume later.\n          spawnedCachePool = getOffscreenDeferredCache();\n        }\n      } else {\n        nextBaseLanes = renderLanes;\n      }\n\n      // Schedule this fiber to re-render at offscreen priority. Then bailout.\n      workInProgress.lanes = workInProgress.childLanes = laneToLanes(\n        OffscreenLane,\n      );\n      const nextState: OffscreenState = {\n        baseLanes: nextBaseLanes,\n        cachePool: spawnedCachePool,\n        transitions: null,\n      };\n      workInProgress.memoizedState = nextState;\n      workInProgress.updateQueue = null;\n      if (enableCache) {\n        // push the cache pool even though we're going to bail out\n        // because otherwise there'd be a context mismatch\n        if (current !== null) {\n          pushTransition(workInProgress, null, null);\n        }\n      }\n\n      // We're about to bail out, but we need to push this to the stack anyway\n      // to avoid a push/pop misalignment.\n      pushRenderLanes(workInProgress, nextBaseLanes);\n\n      if (enableLazyContextPropagation && current !== null) {\n        // Since this tree will resume rendering in a separate render, we need\n        // to propagate parent contexts now so we don't lose track of which\n        // ones changed.\n        propagateParentContextChangesToDeferredTree(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      }\n\n      return null;\n    } else {\n      // This is the second render. The surrounding visible content has already\n      // committed. Now we resume rendering the hidden tree.\n\n      // Rendering at offscreen, so we can clear the base lanes.\n      const nextState: OffscreenState = {\n        baseLanes: NoLanes,\n        cachePool: null,\n        transitions: null,\n      };\n      workInProgress.memoizedState = nextState;\n      // Push the lanes that were skipped when we bailed out.\n      const subtreeRenderLanes =\n        prevState !== null ? prevState.baseLanes : renderLanes;\n      if (enableCache && current !== null) {\n        // If the render that spawned this one accessed the cache pool, resume\n        // using the same cache. Unless the parent changed, since that means\n        // there was a refresh.\n        const prevCachePool = prevState !== null ? prevState.cachePool : null;\n        // TODO: Consider if and how Offscreen pre-rendering should\n        // be attributed to the transition that spawned it\n        pushTransition(workInProgress, prevCachePool, null);\n      }\n\n      pushRenderLanes(workInProgress, subtreeRenderLanes);\n    }\n  } else {\n    // Rendering a visible tree.\n    let subtreeRenderLanes;\n    if (prevState !== null) {\n      // We're going from hidden -> visible.\n\n      subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\n\n      let prevCachePool = null;\n      if (enableCache) {\n        // If the render that spawned this one accessed the cache pool, resume\n        // using the same cache. Unless the parent changed, since that means\n        // there was a refresh.\n        prevCachePool = prevState.cachePool;\n      }\n\n      pushTransition(workInProgress, prevCachePool, null);\n\n      // Since we're not hidden anymore, reset the state\n      workInProgress.memoizedState = null;\n    } else {\n      // We weren't previously hidden, and we still aren't, so there's nothing\n      // special to do. Need to push to the stack regardless, though, to avoid\n      // a push/pop misalignment.\n      subtreeRenderLanes = renderLanes;\n\n      if (enableCache) {\n        // If the render that spawned this one accessed the cache pool, resume\n        // using the same cache. Unless the parent changed, since that means\n        // there was a refresh.\n        if (current !== null) {\n          pushTransition(workInProgress, null, null);\n        }\n      }\n    }\n    pushRenderLanes(workInProgress, subtreeRenderLanes);\n  }\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\n// Note: These happen to have identical begin phases, for now. We shouldn't hold\n// ourselves to this constraint, though. If the behavior diverges, we should\n// fork the function.\nconst updateLegacyHiddenComponent = updateOffscreenComponent;\n\nfunction updateCacheComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  if (!enableCache) {\n    return null;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  const parentCache = readContext(CacheContext);\n\n  if (current === null) {\n    // Initial mount. Request a fresh cache from the pool.\n    const freshCache = requestCacheFromPool(renderLanes);\n    const initialState: CacheComponentState = {\n      parent: parentCache,\n      cache: freshCache,\n    };\n    workInProgress.memoizedState = initialState;\n    initializeUpdateQueue(workInProgress);\n    pushCacheProvider(workInProgress, freshCache);\n  } else {\n    // Check for updates\n    if (includesSomeLane(current.lanes, renderLanes)) {\n      cloneUpdateQueue(current, workInProgress);\n      processUpdateQueue(workInProgress, null, null, renderLanes);\n    }\n    const prevState: CacheComponentState = current.memoizedState;\n    const nextState: CacheComponentState = workInProgress.memoizedState;\n\n    // Compare the new parent cache to the previous to see detect there was\n    // a refresh.\n    if (prevState.parent !== parentCache) {\n      // Refresh in parent. Update the parent.\n      const derivedState: CacheComponentState = {\n        parent: parentCache,\n        cache: parentCache,\n      };\n\n      // Copied from getDerivedStateFromProps implementation. Once the update\n      // queue is empty, persist the derived state onto the base state.\n      workInProgress.memoizedState = derivedState;\n      if (workInProgress.lanes === NoLanes) {\n        const updateQueue: UpdateQueue<any> = (workInProgress.updateQueue: any);\n        workInProgress.memoizedState = updateQueue.baseState = derivedState;\n      }\n\n      pushCacheProvider(workInProgress, parentCache);\n      // No need to propagate a context change because the refreshed parent\n      // already did.\n    } else {\n      // The parent didn't refresh. Now check if this cache did.\n      const nextCache = nextState.cache;\n      pushCacheProvider(workInProgress, nextCache);\n      if (nextCache !== prevState.cache) {\n        // This cache refreshed. Propagate a context change.\n        propagateContextChange(workInProgress, CacheContext, renderLanes);\n      }\n    }\n  }\n\n  const nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\n// This should only be called if the name changes\nfunction updateTracingMarkerComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  if (!enableTransitionTracing) {\n    return null;\n  }\n\n  const nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateFragment(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextChildren = workInProgress.pendingProps;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMode(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateProfiler(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  if (enableProfilerTimer) {\n    workInProgress.flags |= Update;\n\n    if (enableProfilerCommitHooks) {\n      // Reset effect durations for the next eventual effect phase.\n      // These are reset during render to allow the DevTools commit hook a chance to read them,\n      const stateNode = workInProgress.stateNode;\n      stateNode.effectDuration = 0;\n      stateNode.passiveEffectDuration = 0;\n    }\n  }\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markRef(current: Fiber | null, workInProgress: Fiber) {\n  const ref = workInProgress.ref;\n  if (\n    (current === null && ref !== null) ||\n    (current !== null && current.ref !== ref)\n  ) {\n    // Schedule a Ref effect\n    workInProgress.flags |= Ref;\n    if (enableSuspenseLayoutEffectSemantics) {\n      workInProgress.flags |= RefStatic;\n    }\n  }\n}\n\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps: any,\n  renderLanes,\n) {\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentNameFromType(Component),\n        );\n      }\n    }\n  }\n\n  let context;\n  if (!disableLegacyContext) {\n    const unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  let nextChildren;\n  let hasId;\n  prepareToReadContext(workInProgress, renderLanes);\n  if (enableSchedulingProfiler) {\n    markComponentRenderStarted(workInProgress);\n  }\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderLanes,\n    );\n    hasId = checkDidRenderIdHook();\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictLegacyMode\n    ) {\n      setIsStrictModeForDevtools(true);\n      try {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          Component,\n          nextProps,\n          context,\n          renderLanes,\n        );\n        hasId = checkDidRenderIdHook();\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderLanes,\n    );\n    hasId = checkDidRenderIdHook();\n  }\n  if (enableSchedulingProfiler) {\n    markComponentRenderStopped();\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  if (getIsHydrating() && hasId) {\n    pushMaterializedTreeId(workInProgress);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n) {\n  if (__DEV__) {\n    // This is used by DevTools to force a boundary to error.\n    switch (shouldError(workInProgress)) {\n      case false: {\n        const instance = workInProgress.stateNode;\n        const ctor = workInProgress.type;\n        // TODO This way of resetting the error boundary state is a hack.\n        // Is there a better way to do this?\n        const tempInstance = new ctor(\n          workInProgress.memoizedProps,\n          instance.context,\n        );\n        const state = tempInstance.state;\n        instance.updater.enqueueSetState(instance, state, null);\n        break;\n      }\n      case true: {\n        workInProgress.flags |= DidCapture;\n        workInProgress.flags |= ShouldCapture;\n        // eslint-disable-next-line react-internal/prod-error-codes\n        const error = new Error('Simulated error coming from DevTools');\n        const lane = pickArbitraryLane(renderLanes);\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n        // Schedule the error boundary to re-render using updated state\n        const update = createClassErrorUpdate(\n          workInProgress,\n          createCapturedValueAtFiber(error, workInProgress),\n          lane,\n        );\n        enqueueCapturedUpdate(workInProgress, update);\n        break;\n      }\n    }\n\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentNameFromType(Component),\n        );\n      }\n    }\n  }\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderLanes);\n\n  const instance = workInProgress.stateNode;\n  let shouldUpdate;\n  if (instance === null) {\n    resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress);\n\n    // In the initial pass we might need to construct the instance.\n    constructClassInstance(workInProgress, Component, nextProps);\n    mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n    shouldUpdate = true;\n  } else if (current === null) {\n    // In a resume, we'll already have an instance we can reuse.\n    shouldUpdate = resumeMountClassInstance(\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes,\n    );\n  } else {\n    shouldUpdate = updateClassInstance(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes,\n    );\n  }\n  const nextUnitOfWork = finishClassComponent(\n    current,\n    workInProgress,\n    Component,\n    shouldUpdate,\n    hasContext,\n    renderLanes,\n  );\n  if (__DEV__) {\n    const inst = workInProgress.stateNode;\n    if (shouldUpdate && inst.props !== nextProps) {\n      if (!didWarnAboutReassigningProps) {\n        console.error(\n          'It looks like %s is reassigning its own `this.props` while rendering. ' +\n            'This is not supported and can lead to confusing bugs.',\n          getComponentNameFromFiber(workInProgress) || 'a component',\n        );\n      }\n      didWarnAboutReassigningProps = true;\n    }\n  }\n  return nextUnitOfWork;\n}\n\nfunction finishClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  shouldUpdate: boolean,\n  hasContext: boolean,\n  renderLanes: Lanes,\n) {\n  // Refs should update even if shouldComponentUpdate returns false\n  markRef(current, workInProgress);\n\n  const didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (!shouldUpdate && !didCaptureError) {\n    // Context providers should defer to sCU for rendering\n    if (hasContext) {\n      invalidateContextProvider(workInProgress, Component, false);\n    }\n\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  const instance = workInProgress.stateNode;\n\n  // Rerender\n  ReactCurrentOwner.current = workInProgress;\n  let nextChildren;\n  if (\n    didCaptureError &&\n    typeof Component.getDerivedStateFromError !== 'function'\n  ) {\n    // If we captured an error, but getDerivedStateFromError is not defined,\n    // unmount all the children. componentDidCatch will schedule an update to\n    // re-render a fallback. This is temporary until we migrate everyone to\n    // the new API.\n    // TODO: Warn in a future release.\n    nextChildren = null;\n\n    if (enableProfilerTimer) {\n      stopProfilerTimerIfRunning(workInProgress);\n    }\n  } else {\n    if (enableSchedulingProfiler) {\n      markComponentRenderStarted(workInProgress);\n    }\n    if (__DEV__) {\n      setIsRendering(true);\n      nextChildren = instance.render();\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictLegacyMode\n      ) {\n        setIsStrictModeForDevtools(true);\n        try {\n          instance.render();\n        } finally {\n          setIsStrictModeForDevtools(false);\n        }\n      }\n      setIsRendering(false);\n    } else {\n      nextChildren = instance.render();\n    }\n    if (enableSchedulingProfiler) {\n      markComponentRenderStopped();\n    }\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  if (current !== null && didCaptureError) {\n    // If we're recovering from an error, reconcile without reusing any of\n    // the existing children. Conceptually, the normal children and the children\n    // that are shown on error are two different sets, so we shouldn't reuse\n    // normal children even if their identities match.\n    forceUnmountCurrentAndReconcile(\n      current,\n      workInProgress,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  // Memoize state using the values we just used to render.\n  // TODO: Restructure so we never read values from the instance.\n  workInProgress.memoizedState = instance.state;\n\n  // The context might have changed so we need to recalculate it.\n  if (hasContext) {\n    invalidateContextProvider(workInProgress, Component, true);\n  }\n\n  return workInProgress.child;\n}\n\nfunction pushHostRootContext(workInProgress) {\n  const root = (workInProgress.stateNode: FiberRoot);\n  if (root.pendingContext) {\n    pushTopLevelContextObject(\n      workInProgress,\n      root.pendingContext,\n      root.pendingContext !== root.context,\n    );\n  } else if (root.context) {\n    // Should always be set\n    pushTopLevelContextObject(workInProgress, root.context, false);\n  }\n  pushHostContainer(workInProgress, root.containerInfo);\n}\n\nfunction updateHostRoot(current, workInProgress, renderLanes) {\n  pushHostRootContext(workInProgress);\n\n  if (current === null) {\n    throw new Error('Should have a current fiber. This is a bug in React.');\n  }\n\n  const nextProps = workInProgress.pendingProps;\n  const prevState = workInProgress.memoizedState;\n  const prevChildren = prevState.element;\n  cloneUpdateQueue(current, workInProgress);\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n\n  const nextState: RootState = workInProgress.memoizedState;\n  const root: FiberRoot = workInProgress.stateNode;\n  pushRootTransition(workInProgress, root, renderLanes);\n\n  if (enableCache) {\n    const nextCache: Cache = nextState.cache;\n    pushCacheProvider(workInProgress, nextCache);\n    if (nextCache !== prevState.cache) {\n      // The root cache refreshed.\n      propagateContextChange(workInProgress, CacheContext, renderLanes);\n    }\n  }\n\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  const nextChildren = nextState.element;\n  if (supportsHydration && prevState.isDehydrated) {\n    // This is a hydration root whose shell has not yet hydrated. We should\n    // attempt to hydrate.\n\n    // Flip isDehydrated to false to indicate that when this render\n    // finishes, the root will no longer be dehydrated.\n    const overrideState: RootState = {\n      element: nextChildren,\n      isDehydrated: false,\n      cache: nextState.cache,\n      pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,\n      transitions: nextState.transitions,\n    };\n    const updateQueue: UpdateQueue<RootState> = (workInProgress.updateQueue: any);\n    // `baseState` can always be the last state because the root doesn't\n    // have reducer functions so it doesn't need rebasing.\n    updateQueue.baseState = overrideState;\n    workInProgress.memoizedState = overrideState;\n\n    if (workInProgress.flags & ForceClientRender) {\n      // Something errored during a previous attempt to hydrate the shell, so we\n      // forced a client render.\n      const recoverableError = createCapturedValueAtFiber(\n        new Error(\n          'There was an error while hydrating. Because the error happened outside ' +\n            'of a Suspense boundary, the entire root will switch to ' +\n            'client rendering.',\n        ),\n        workInProgress,\n      );\n      return mountHostRootWithoutHydrating(\n        current,\n        workInProgress,\n        nextChildren,\n        renderLanes,\n        recoverableError,\n      );\n    } else if (nextChildren !== prevChildren) {\n      const recoverableError = createCapturedValueAtFiber(\n        new Error(\n          'This root received an early update, before anything was able ' +\n            'hydrate. Switched the entire root to client rendering.',\n        ),\n        workInProgress,\n      );\n      return mountHostRootWithoutHydrating(\n        current,\n        workInProgress,\n        nextChildren,\n        renderLanes,\n        recoverableError,\n      );\n    } else {\n      // The outermost shell has not hydrated yet. Start hydrating.\n      enterHydrationState(workInProgress);\n      if (enableUseMutableSource) {\n        const mutableSourceEagerHydrationData =\n          root.mutableSourceEagerHydrationData;\n        if (mutableSourceEagerHydrationData != null) {\n          for (let i = 0; i < mutableSourceEagerHydrationData.length; i += 2) {\n            const mutableSource = ((mutableSourceEagerHydrationData[\n              i\n            ]: any): MutableSource<any>);\n            const version = mutableSourceEagerHydrationData[i + 1];\n            setWorkInProgressVersion(mutableSource, version);\n          }\n        }\n      }\n\n      const child = mountChildFibers(\n        workInProgress,\n        null,\n        nextChildren,\n        renderLanes,\n      );\n      workInProgress.child = child;\n\n      let node = child;\n      while (node) {\n        // Mark each child as hydrating. This is a fast path to know whether this\n        // tree is part of a hydrating tree. This is used to determine if a child\n        // node has fully mounted yet, and for scheduling event replaying.\n        // Conceptually this is similar to Placement in that a new subtree is\n        // inserted into the React tree here. It just happens to not need DOM\n        // mutations because it already exists.\n        node.flags = (node.flags & ~Placement) | Hydrating;\n        node = node.sibling;\n      }\n    }\n  } else {\n    // Root is not dehydrated. Either this is a client-only root, or it\n    // already hydrated.\n    resetHydrationState();\n    if (nextChildren === prevChildren) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n  return workInProgress.child;\n}\n\nfunction mountHostRootWithoutHydrating(\n  current: Fiber,\n  workInProgress: Fiber,\n  nextChildren: ReactNodeList,\n  renderLanes: Lanes,\n  recoverableError: CapturedValue<mixed>,\n) {\n  // Revert to client rendering.\n  resetHydrationState();\n\n  queueHydrationError(recoverableError);\n\n  workInProgress.flags |= ForceClientRender;\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateHostComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  pushHostContext(workInProgress);\n\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n\n  const type = workInProgress.type;\n  const nextProps = workInProgress.pendingProps;\n  const prevProps = current !== null ? current.memoizedProps : null;\n\n  let nextChildren = nextProps.children;\n  const isDirectTextChild = shouldSetTextContent(type, nextProps);\n\n  if (isDirectTextChild) {\n    // We special case a direct text child of a host node. This is a common\n    // case. We won't handle it as a reified child. We will instead handle\n    // this in the host environment that also has access to this prop. That\n    // avoids allocating another HostText fiber and traversing it.\n    nextChildren = null;\n  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.flags |= ContentReset;\n  }\n\n  markRef(current, workInProgress);\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateHostText(current, workInProgress) {\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n  // Nothing to do here. This is terminal. We'll do the completion step\n  // immediately after.\n  return null;\n}\n\nfunction mountLazyComponent(\n  _current,\n  workInProgress,\n  elementType,\n  renderLanes,\n) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n\n  const props = workInProgress.pendingProps;\n  const lazyComponent: LazyComponentType<any, any> = elementType;\n  const payload = lazyComponent._payload;\n  const init = lazyComponent._init;\n  let Component = init(payload);\n  // Store the unwrapped component in the type.\n  workInProgress.type = Component;\n  const resolvedTag = (workInProgress.tag = resolveLazyComponentTag(Component));\n  const resolvedProps = resolveDefaultProps(Component, props);\n  let child;\n  switch (resolvedTag) {\n    case FunctionComponent: {\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, Component);\n        workInProgress.type = Component = resolveFunctionForHotReloading(\n          Component,\n        );\n      }\n      child = updateFunctionComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case ClassComponent: {\n      if (__DEV__) {\n        workInProgress.type = Component = resolveClassForHotReloading(\n          Component,\n        );\n      }\n      child = updateClassComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case ForwardRef: {\n      if (__DEV__) {\n        workInProgress.type = Component = resolveForwardRefForHotReloading(\n          Component,\n        );\n      }\n      child = updateForwardRef(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case MemoComponent: {\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = Component.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentNameFromType(Component),\n            );\n          }\n        }\n      }\n      child = updateMemoComponent(\n        null,\n        workInProgress,\n        Component,\n        resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n        renderLanes,\n      );\n      return child;\n    }\n  }\n  let hint = '';\n  if (__DEV__) {\n    if (\n      Component !== null &&\n      typeof Component === 'object' &&\n      Component.$$typeof === REACT_LAZY_TYPE\n    ) {\n      hint = ' Did you wrap a component in React.lazy() more than once?';\n    }\n  }\n\n  // This message intentionally doesn't mention ForwardRef or MemoComponent\n  // because the fact that it's a separate type of work is an\n  // implementation detail.\n  throw new Error(\n    `Element type is invalid. Received a promise that resolves to: ${Component}. ` +\n      `Lazy element type must resolve to a class or function.${hint}`,\n  );\n}\n\nfunction mountIncompleteClassComponent(\n  _current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes,\n) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n\n  // Promote the fiber to a class and try rendering again.\n  workInProgress.tag = ClassComponent;\n\n  // The rest of this function is a fork of `updateClassComponent`\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderLanes);\n\n  constructClassInstance(workInProgress, Component, nextProps);\n  mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n\n  return finishClassComponent(\n    null,\n    workInProgress,\n    Component,\n    true,\n    hasContext,\n    renderLanes,\n  );\n}\n\nfunction mountIndeterminateComponent(\n  _current,\n  workInProgress,\n  Component,\n  renderLanes,\n) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n\n  const props = workInProgress.pendingProps;\n  let context;\n  if (!disableLegacyContext) {\n    const unmaskedContext = getUnmaskedContext(\n      workInProgress,\n      Component,\n      false,\n    );\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  let value;\n  let hasId;\n\n  if (enableSchedulingProfiler) {\n    markComponentRenderStarted(workInProgress);\n  }\n  if (__DEV__) {\n    if (\n      Component.prototype &&\n      typeof Component.prototype.render === 'function'\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutBadClass[componentName]) {\n        console.error(\n          \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" +\n            'This is likely to cause errors. Change %s to extend React.Component instead.',\n          componentName,\n          componentName,\n        );\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n    }\n\n    setIsRendering(true);\n    ReactCurrentOwner.current = workInProgress;\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderLanes,\n    );\n    hasId = checkDidRenderIdHook();\n    setIsRendering(false);\n  } else {\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderLanes,\n    );\n    hasId = checkDidRenderIdHook();\n  }\n  if (enableSchedulingProfiler) {\n    markComponentRenderStopped();\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n\n  if (__DEV__) {\n    // Support for module components is deprecated and is removed behind a flag.\n    // Whether or not it would crash later, we want to show a good message in DEV first.\n    if (\n      typeof value === 'object' &&\n      value !== null &&\n      typeof value.render === 'function' &&\n      value.$$typeof === undefined\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n      if (!didWarnAboutModulePatternComponent[componentName]) {\n        console.error(\n          'The <%s /> component appears to be a function component that returns a class instance. ' +\n            'Change %s to a class that extends React.Component instead. ' +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            'cannot be called with `new` by React.',\n          componentName,\n          componentName,\n          componentName,\n        );\n        didWarnAboutModulePatternComponent[componentName] = true;\n      }\n    }\n  }\n\n  if (\n    // Run these checks in production only if the flag is off.\n    // Eventually we'll delete this branch altogether.\n    !disableModulePatternComponents &&\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.render === 'function' &&\n    value.$$typeof === undefined\n  ) {\n    if (__DEV__) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n      if (!didWarnAboutModulePatternComponent[componentName]) {\n        console.error(\n          'The <%s /> component appears to be a function component that returns a class instance. ' +\n            'Change %s to a class that extends React.Component instead. ' +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            'cannot be called with `new` by React.',\n          componentName,\n          componentName,\n          componentName,\n        );\n        didWarnAboutModulePatternComponent[componentName] = true;\n      }\n    }\n\n    // Proceed under the assumption that this is a class instance\n    workInProgress.tag = ClassComponent;\n\n    // Throw out any hooks that were used.\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n\n    // Push context providers early to prevent context stack mismatches.\n    // During mounting we don't know the child context yet as the instance doesn't exist.\n    // We will invalidate the child context in finishClassComponent() right after rendering.\n    let hasContext = false;\n    if (isLegacyContextProvider(Component)) {\n      hasContext = true;\n      pushLegacyContextProvider(workInProgress);\n    } else {\n      hasContext = false;\n    }\n\n    workInProgress.memoizedState =\n      value.state !== null && value.state !== undefined ? value.state : null;\n\n    initializeUpdateQueue(workInProgress);\n\n    adoptClassInstance(workInProgress, value);\n    mountClassInstance(workInProgress, Component, props, renderLanes);\n    return finishClassComponent(\n      null,\n      workInProgress,\n      Component,\n      true,\n      hasContext,\n      renderLanes,\n    );\n  } else {\n    // Proceed under the assumption that this is a function component\n    workInProgress.tag = FunctionComponent;\n    if (__DEV__) {\n      if (disableLegacyContext && Component.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with React.useContext() instead.',\n          getComponentNameFromType(Component) || 'Unknown',\n        );\n      }\n\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictLegacyMode\n      ) {\n        setIsStrictModeForDevtools(true);\n        try {\n          value = renderWithHooks(\n            null,\n            workInProgress,\n            Component,\n            props,\n            context,\n            renderLanes,\n          );\n          hasId = checkDidRenderIdHook();\n        } finally {\n          setIsStrictModeForDevtools(false);\n        }\n      }\n    }\n\n    if (getIsHydrating() && hasId) {\n      pushMaterializedTreeId(workInProgress);\n    }\n\n    reconcileChildren(null, workInProgress, value, renderLanes);\n    if (__DEV__) {\n      validateFunctionComponentInDev(workInProgress, Component);\n    }\n    return workInProgress.child;\n  }\n}\n\nfunction validateFunctionComponentInDev(workInProgress: Fiber, Component: any) {\n  if (__DEV__) {\n    if (Component) {\n      if (Component.childContextTypes) {\n        console.error(\n          '%s(...): childContextTypes cannot be defined on a function component.',\n          Component.displayName || Component.name || 'Component',\n        );\n      }\n    }\n    if (workInProgress.ref !== null) {\n      let info = '';\n      const ownerName = getCurrentFiberOwnerNameInDevOrNull();\n      if (ownerName) {\n        info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n      }\n\n      let warningKey = ownerName || '';\n      const debugSource = workInProgress._debugSource;\n      if (debugSource) {\n        warningKey = debugSource.fileName + ':' + debugSource.lineNumber;\n      }\n      if (!didWarnAboutFunctionRefs[warningKey]) {\n        didWarnAboutFunctionRefs[warningKey] = true;\n        console.error(\n          'Function components cannot be given refs. ' +\n            'Attempts to access this ref will fail. ' +\n            'Did you mean to use React.forwardRef()?%s',\n          info,\n        );\n      }\n    }\n\n    if (\n      warnAboutDefaultPropsOnFunctionComponents &&\n      Component.defaultProps !== undefined\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Support for defaultProps will be removed from function components ' +\n            'in a future major release. Use JavaScript default parameters instead.',\n          componentName,\n        );\n        didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (typeof Component.getDerivedStateFromProps === 'function') {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support getDerivedStateFromProps.',\n          componentName,\n        );\n        didWarnAboutGetDerivedStateOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (\n      typeof Component.contextType === 'object' &&\n      Component.contextType !== null\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutContextTypeOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support contextType.',\n          componentName,\n        );\n        didWarnAboutContextTypeOnFunctionComponent[componentName] = true;\n      }\n    }\n  }\n}\n\nconst SUSPENDED_MARKER: SuspenseState = {\n  dehydrated: null,\n  treeContext: null,\n  retryLane: NoLane,\n};\n\nfunction mountSuspenseOffscreenState(renderLanes: Lanes): OffscreenState {\n  return {\n    baseLanes: renderLanes,\n    cachePool: getSuspendedCache(),\n    transitions: null,\n  };\n}\n\nfunction updateSuspenseOffscreenState(\n  prevOffscreenState: OffscreenState,\n  renderLanes: Lanes,\n): OffscreenState {\n  let cachePool: SpawnedCachePool | null = null;\n  if (enableCache) {\n    const prevCachePool: SpawnedCachePool | null = prevOffscreenState.cachePool;\n    if (prevCachePool !== null) {\n      const parentCache = isPrimaryRenderer\n        ? CacheContext._currentValue\n        : CacheContext._currentValue2;\n      if (prevCachePool.parent !== parentCache) {\n        // Detected a refresh in the parent. This overrides any previously\n        // suspended cache.\n        cachePool = {\n          parent: parentCache,\n          pool: parentCache,\n        };\n      } else {\n        // We can reuse the cache from last time. The only thing that would have\n        // overridden it is a parent refresh, which we checked for above.\n        cachePool = prevCachePool;\n      }\n    } else {\n      // If there's no previous cache pool, grab the current one.\n      cachePool = getSuspendedCache();\n    }\n  }\n  return {\n    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\n    cachePool,\n    transitions: prevOffscreenState.transitions,\n  };\n}\n\n// TODO: Probably should inline this back\nfunction shouldRemainOnFallback(\n  suspenseContext: SuspenseContext,\n  current: null | Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // If we're already showing a fallback, there are cases where we need to\n  // remain on that fallback regardless of whether the content has resolved.\n  // For example, SuspenseList coordinates when nested content appears.\n  if (current !== null) {\n    const suspenseState: SuspenseState = current.memoizedState;\n    if (suspenseState === null) {\n      // Currently showing content. Don't hide it, even if ForceSuspenseFallback\n      // is true. More precise name might be \"ForceRemainSuspenseFallback\".\n      // Note: This is a factoring smell. Can't remain on a fallback if there's\n      // no fallback to remain on.\n      return false;\n    }\n  }\n\n  // Not currently showing content. Consult the Suspense context.\n  return hasSuspenseContext(\n    suspenseContext,\n    (ForceSuspenseFallback: SuspenseContext),\n  );\n}\n\nfunction getRemainingWorkInPrimaryTree(current: Fiber, renderLanes) {\n  // TODO: Should not remove render lanes that were pinged during this render\n  return removeLanes(current.childLanes, renderLanes);\n}\n\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  const nextProps = workInProgress.pendingProps;\n\n  // This is used by DevTools to force a boundary to suspend.\n  if (__DEV__) {\n    if (shouldSuspend(workInProgress)) {\n      workInProgress.flags |= DidCapture;\n    }\n  }\n\n  let suspenseContext: SuspenseContext = suspenseStackCursor.current;\n\n  let showFallback = false;\n  const didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (\n    didSuspend ||\n    shouldRemainOnFallback(\n      suspenseContext,\n      current,\n      workInProgress,\n      renderLanes,\n    )\n  ) {\n    // Something in this boundary's subtree already suspended. Switch to\n    // rendering the fallback children.\n    showFallback = true;\n    workInProgress.flags &= ~DidCapture;\n  } else {\n    // Attempting the main content\n    if (\n      current === null ||\n      (current.memoizedState: null | SuspenseState) !== null\n    ) {\n      // This is a new mount or this boundary is already showing a fallback state.\n      // Mark this subtree context as having at least one invisible parent that could\n      // handle the fallback state.\n      // Avoided boundaries are not considered since they cannot handle preferred fallback states.\n      if (\n        !enableSuspenseAvoidThisFallback ||\n        nextProps.unstable_avoidThisFallback !== true\n      ) {\n        suspenseContext = addSubtreeSuspenseContext(\n          suspenseContext,\n          InvisibleParentSuspenseContext,\n        );\n      }\n    }\n  }\n\n  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  // OK, the next part is confusing. We're about to reconcile the Suspense\n  // boundary's children. This involves some custom reconciliation logic. Two\n  // main reasons this is so complicated.\n  //\n  // First, Legacy Mode has different semantics for backwards compatibility. The\n  // primary tree will commit in an inconsistent state, so when we do the\n  // second pass to render the fallback, we do some exceedingly, uh, clever\n  // hacks to make that not totally break. Like transferring effects and\n  // deletions from hidden tree. In Concurrent Mode, it's much simpler,\n  // because we bailout on the primary tree completely and leave it in its old\n  // state, no effects. Same as what we do for Offscreen (except that\n  // Offscreen doesn't have the first render pass).\n  //\n  // Second is hydration. During hydration, the Suspense fiber has a slightly\n  // different layout, where the child points to a dehydrated fragment, which\n  // contains the DOM rendered by the server.\n  //\n  // Third, even if you set all that aside, Suspense is like error boundaries in\n  // that we first we try to render one tree, and if that fails, we render again\n  // and switch to a different tree. Like a try/catch block. So we have to track\n  // which branch we're currently rendering. Ideally we would model this using\n  // a stack.\n  if (current === null) {\n    // Initial mount\n\n    // Special path for hydration\n    // If we're currently hydrating, try to hydrate this boundary.\n    tryToClaimNextHydratableInstance(workInProgress);\n    // This could've been a dehydrated suspense component.\n    const suspenseState: null | SuspenseState = workInProgress.memoizedState;\n    if (suspenseState !== null) {\n      const dehydrated = suspenseState.dehydrated;\n      if (dehydrated !== null) {\n        return mountDehydratedSuspenseComponent(\n          workInProgress,\n          dehydrated,\n          renderLanes,\n        );\n      }\n    }\n\n    const nextPrimaryChildren = nextProps.children;\n    const nextFallbackChildren = nextProps.fallback;\n\n    if (showFallback) {\n      const fallbackFragment = mountSuspenseFallbackChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      if (enableTransitionTracing) {\n        const currentTransitions = getSuspendedTransitions();\n        if (currentTransitions !== null) {\n          const primaryChildUpdateQueue: OffscreenQueue = {\n            transitions: currentTransitions,\n          };\n          primaryChildFragment.updateQueue = primaryChildUpdateQueue;\n        }\n      }\n\n      return fallbackFragment;\n    } else if (\n      enableCPUSuspense &&\n      typeof nextProps.unstable_expectedLoadTime === 'number'\n    ) {\n      // This is a CPU-bound tree. Skip this tree and show a placeholder to\n      // unblock the surrounding content. Then immediately retry after the\n      // initial commit.\n      const fallbackFragment = mountSuspenseFallbackChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n\n      // Since nothing actually suspended, there will nothing to ping this to\n      // get it started back up to attempt the next item. While in terms of\n      // priority this work has the same priority as this current render, it's\n      // not part of the same transition once the transition has committed. If\n      // it's sync, we still want to yield so that it can be painted.\n      // Conceptually, this is really the same as pinging. We can use any\n      // RetryLane even if it's the one currently rendering since we're leaving\n      // it behind on this node.\n      workInProgress.lanes = SomeRetryLane;\n      return fallbackFragment;\n    } else {\n      return mountSuspensePrimaryChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        renderLanes,\n      );\n    }\n  } else {\n    // This is an update.\n\n    // Special path for hydration\n    const prevState: null | SuspenseState = current.memoizedState;\n    if (prevState !== null) {\n      const dehydrated = prevState.dehydrated;\n      if (dehydrated !== null) {\n        return updateDehydratedSuspenseComponent(\n          current,\n          workInProgress,\n          didSuspend,\n          nextProps,\n          dehydrated,\n          prevState,\n          renderLanes,\n        );\n      }\n    }\n\n    if (showFallback) {\n      const nextFallbackChildren = nextProps.fallback;\n      const nextPrimaryChildren = nextProps.children;\n      const fallbackChildFragment = updateSuspenseFallbackChildren(\n        current,\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      const prevOffscreenState: OffscreenState | null = (current.child: any)\n        .memoizedState;\n      primaryChildFragment.memoizedState =\n        prevOffscreenState === null\n          ? mountSuspenseOffscreenState(renderLanes)\n          : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n      if (enableTransitionTracing) {\n        const currentTransitions = getSuspendedTransitions();\n        if (currentTransitions !== null) {\n          const primaryChildUpdateQueue: OffscreenQueue = {\n            transitions: currentTransitions,\n          };\n          primaryChildFragment.updateQueue = primaryChildUpdateQueue;\n        }\n      }\n      primaryChildFragment.childLanes = getRemainingWorkInPrimaryTree(\n        current,\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackChildFragment;\n    } else {\n      const nextPrimaryChildren = nextProps.children;\n      const primaryChildFragment = updateSuspensePrimaryChildren(\n        current,\n        workInProgress,\n        nextPrimaryChildren,\n        renderLanes,\n      );\n      workInProgress.memoizedState = null;\n      return primaryChildFragment;\n    }\n  }\n}\n\nfunction mountSuspensePrimaryChildren(\n  workInProgress,\n  primaryChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const primaryChildProps: OffscreenProps = {\n    mode: 'visible',\n    children: primaryChildren,\n  };\n  const primaryChildFragment = mountWorkInProgressOffscreenFiber(\n    primaryChildProps,\n    mode,\n    renderLanes,\n  );\n  primaryChildFragment.return = workInProgress;\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackChildren(\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const progressedPrimaryFragment: Fiber | null = workInProgress.child;\n\n  const primaryChildProps: OffscreenProps = {\n    mode: 'hidden',\n    children: primaryChildren,\n  };\n\n  let primaryChildFragment;\n  let fallbackChildFragment;\n  if (\n    (mode & ConcurrentMode) === NoMode &&\n    progressedPrimaryFragment !== null\n  ) {\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = 0;\n      primaryChildFragment.treeBaseDuration = 0;\n    }\n\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n  } else {\n    primaryChildFragment = mountWorkInProgressOffscreenFiber(\n      primaryChildProps,\n      mode,\n      NoLanes,\n    );\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n  }\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction mountWorkInProgressOffscreenFiber(\n  offscreenProps: OffscreenProps,\n  mode: TypeOfMode,\n  renderLanes: Lanes,\n) {\n  // The props argument to `createFiberFromOffscreen` is `any` typed, so we use\n  // this wrapper function to constrain it.\n  return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);\n}\n\nfunction updateWorkInProgressOffscreenFiber(\n  current: Fiber,\n  offscreenProps: OffscreenProps,\n) {\n  // The props argument to `createWorkInProgress` is `any` typed, so we use this\n  // wrapper function to constrain it.\n  return createWorkInProgress(current, offscreenProps);\n}\n\nfunction updateSuspensePrimaryChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  renderLanes,\n) {\n  const currentPrimaryChildFragment: Fiber = (current.child: any);\n  const currentFallbackChildFragment: Fiber | null =\n    currentPrimaryChildFragment.sibling;\n\n  const primaryChildFragment = updateWorkInProgressOffscreenFiber(\n    currentPrimaryChildFragment,\n    {\n      mode: 'visible',\n      children: primaryChildren,\n    },\n  );\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    primaryChildFragment.lanes = renderLanes;\n  }\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = null;\n  if (currentFallbackChildFragment !== null) {\n    // Delete the fallback child fragment\n    const deletions = workInProgress.deletions;\n    if (deletions === null) {\n      workInProgress.deletions = [currentFallbackChildFragment];\n      workInProgress.flags |= ChildDeletion;\n    } else {\n      deletions.push(currentFallbackChildFragment);\n    }\n  }\n\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction updateSuspenseFallbackChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const currentPrimaryChildFragment: Fiber = (current.child: any);\n  const currentFallbackChildFragment: Fiber | null =\n    currentPrimaryChildFragment.sibling;\n\n  const primaryChildProps: OffscreenProps = {\n    mode: 'hidden',\n    children: primaryChildren,\n  };\n\n  let primaryChildFragment;\n  if (\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    (mode & ConcurrentMode) === NoMode &&\n    // Make sure we're on the second pass, i.e. the primary child fragment was\n    // already cloned. In legacy mode, the only case where this isn't true is\n    // when DevTools forces us to display a fallback; we skip the first render\n    // pass entirely and go straight to rendering the fallback. (In Concurrent\n    // Mode, SuspenseList can also trigger this scenario, but this is a legacy-\n    // only codepath.)\n    workInProgress.child !== currentPrimaryChildFragment\n  ) {\n    const progressedPrimaryFragment: Fiber = (workInProgress.child: any);\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration =\n        currentPrimaryChildFragment.selfBaseDuration;\n      primaryChildFragment.treeBaseDuration =\n        currentPrimaryChildFragment.treeBaseDuration;\n    }\n\n    // The fallback fiber was added as a deletion during the first pass.\n    // However, since we're going to remain on the fallback, we no longer want\n    // to delete it.\n    workInProgress.deletions = null;\n  } else {\n    primaryChildFragment = updateWorkInProgressOffscreenFiber(\n      currentPrimaryChildFragment,\n      primaryChildProps,\n    );\n    // Since we're reusing a current tree, we need to reuse the flags, too.\n    // (We don't do this in legacy mode, because in legacy mode we don't re-use\n    // the current tree; see previous branch.)\n    primaryChildFragment.subtreeFlags =\n      currentPrimaryChildFragment.subtreeFlags & StaticMask;\n  }\n  let fallbackChildFragment;\n  if (currentFallbackChildFragment !== null) {\n    fallbackChildFragment = createWorkInProgress(\n      currentFallbackChildFragment,\n      fallbackChildren,\n    );\n  } else {\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n    // Needs a placement effect because the parent (the Suspense boundary) already\n    // mounted but this is a new fiber.\n    fallbackChildFragment.flags |= Placement;\n  }\n\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  return fallbackChildFragment;\n}\n\nfunction retrySuspenseComponentWithoutHydrating(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n  recoverableError: CapturedValue<mixed> | null,\n) {\n  // Falling back to client rendering. Because this has performance\n  // implications, it's considered a recoverable error, even though the user\n  // likely won't observe anything wrong with the UI.\n  //\n  // The error is passed in as an argument to enforce that every caller provide\n  // a custom message, or explicitly opt out (currently the only path that opts\n  // out is legacy mode; every concurrent path provides an error).\n  if (recoverableError !== null) {\n    queueHydrationError(recoverableError);\n  }\n\n  // This will add the old fiber to the deletion list\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n\n  // We're now not suspended nor dehydrated.\n  const nextProps = workInProgress.pendingProps;\n  const primaryChildren = nextProps.children;\n  const primaryChildFragment = mountSuspensePrimaryChildren(\n    workInProgress,\n    primaryChildren,\n    renderLanes,\n  );\n  // Needs a placement effect because the parent (the Suspense boundary) already\n  // mounted but this is a new fiber.\n  primaryChildFragment.flags |= Placement;\n  workInProgress.memoizedState = null;\n\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackAfterRetryWithoutHydrating(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const fiberMode = workInProgress.mode;\n  const primaryChildProps: OffscreenProps = {\n    mode: 'visible',\n    children: primaryChildren,\n  };\n  const primaryChildFragment = mountWorkInProgressOffscreenFiber(\n    primaryChildProps,\n    fiberMode,\n    NoLanes,\n  );\n  const fallbackChildFragment = createFiberFromFragment(\n    fallbackChildren,\n    fiberMode,\n    renderLanes,\n    null,\n  );\n  // Needs a placement effect because the parent (the Suspense\n  // boundary) already mounted but this is a new fiber.\n  fallbackChildFragment.flags |= Placement;\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n    // We will have dropped the effect list which contains the\n    // deletion. We need to reconcile to delete the current child.\n    reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  }\n\n  return fallbackChildFragment;\n}\n\nfunction mountDehydratedSuspenseComponent(\n  workInProgress: Fiber,\n  suspenseInstance: SuspenseInstance,\n  renderLanes: Lanes,\n): null | Fiber {\n  // During the first pass, we'll bail out and not drill into the children.\n  // Instead, we'll leave the content in place and try to hydrate it later.\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    if (__DEV__) {\n      console.error(\n        'Cannot hydrate Suspense in legacy mode. Switch from ' +\n          'ReactDOM.hydrate(element, container) to ' +\n          'ReactDOMClient.hydrateRoot(container, <App />)' +\n          '.render(element) or remove the Suspense components from ' +\n          'the server rendered components.',\n      );\n    }\n    workInProgress.lanes = laneToLanes(SyncLane);\n  } else if (isSuspenseInstanceFallback(suspenseInstance)) {\n    // This is a client-only boundary. Since we won't get any content from the server\n    // for this, we need to schedule that at a higher priority based on when it would\n    // have timed out. In theory we could render it in this pass but it would have the\n    // wrong priority associated with it and will prevent hydration of parent path.\n    // Instead, we'll leave work left on it to render it in a separate commit.\n\n    // TODO This time should be the time at which the server rendered response that is\n    // a parent to this boundary was displayed. However, since we currently don't have\n    // a protocol to transfer that time, we'll just estimate it by using the current\n    // time. This will mean that Suspense timeouts are slightly shifted to later than\n    // they should be.\n    // Schedule a normal pri update to render this content.\n    workInProgress.lanes = laneToLanes(DefaultHydrationLane);\n  } else {\n    // We'll continue hydrating the rest at offscreen priority since we'll already\n    // be showing the right content coming from the server, it is no rush.\n    workInProgress.lanes = laneToLanes(OffscreenLane);\n  }\n  return null;\n}\n\nfunction updateDehydratedSuspenseComponent(\n  current: Fiber,\n  workInProgress: Fiber,\n  didSuspend: boolean,\n  nextProps: any,\n  suspenseInstance: SuspenseInstance,\n  suspenseState: SuspenseState,\n  renderLanes: Lanes,\n): null | Fiber {\n  if (!didSuspend) {\n    // This is the first render pass. Attempt to hydrate.\n\n    // We should never be hydrating at this point because it is the first pass,\n    // but after we've already committed once.\n    warnIfHydrating();\n\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes,\n        // TODO: When we delete legacy mode, we should make this error argument\n        // required — every concurrent mode path that causes hydration to\n        // de-opt to client rendering should have an error message.\n        null,\n      );\n    }\n\n    if (isSuspenseInstanceFallback(suspenseInstance)) {\n      // This boundary is in a permanent fallback state. In this case, we'll never\n      // get an update and we'll never be able to hydrate the final content. Let's just try the\n      // client side render instead.\n      let digest, message, stack;\n      if (__DEV__) {\n        ({digest, message, stack} = getSuspenseInstanceFallbackErrorDetails(\n          suspenseInstance,\n        ));\n      } else {\n        ({digest} = getSuspenseInstanceFallbackErrorDetails(suspenseInstance));\n      }\n\n      let error;\n      if (message) {\n        // eslint-disable-next-line react-internal/prod-error-codes\n        error = new Error(message);\n      } else {\n        error = new Error(\n          'The server could not finish this Suspense boundary, likely ' +\n            'due to an error during server rendering. Switched to ' +\n            'client rendering.',\n        );\n      }\n      const capturedValue = createCapturedValue(error, digest, stack);\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes,\n        capturedValue,\n      );\n    }\n\n    if (\n      enableLazyContextPropagation &&\n      // TODO: Factoring is a little weird, since we check this right below, too.\n      // But don't want to re-arrange the if-else chain until/unless this\n      // feature lands.\n      !didReceiveUpdate\n    ) {\n      // We need to check if any children have context before we decide to bail\n      // out, so propagate the changes now.\n      lazilyPropagateParentContextChanges(current, workInProgress, renderLanes);\n    }\n\n    // We use lanes to indicate that a child might depend on context, so if\n    // any context has changed, we need to treat is as if the input might have changed.\n    const hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\n    if (didReceiveUpdate || hasContextChanged) {\n      // This boundary has changed since the first render. This means that we are now unable to\n      // hydrate it. We might still be able to hydrate it using a higher priority lane.\n      const root = getWorkInProgressRoot();\n      if (root !== null) {\n        const attemptHydrationAtLane = getBumpedLaneForHydration(\n          root,\n          renderLanes,\n        );\n        if (\n          attemptHydrationAtLane !== NoLane &&\n          attemptHydrationAtLane !== suspenseState.retryLane\n        ) {\n          // Intentionally mutating since this render will get interrupted. This\n          // is one of the very rare times where we mutate the current tree\n          // during the render phase.\n          suspenseState.retryLane = attemptHydrationAtLane;\n          // TODO: Ideally this would inherit the event time of the current render\n          const eventTime = NoTimestamp;\n          enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);\n          scheduleUpdateOnFiber(\n            root,\n            current,\n            attemptHydrationAtLane,\n            eventTime,\n          );\n        } else {\n          // We have already tried to ping at a higher priority than we're rendering with\n          // so if we got here, we must have failed to hydrate at those levels. We must\n          // now give up. Instead, we're going to delete the whole subtree and instead inject\n          // a new real Suspense boundary to take its place, which may render content\n          // or fallback. This might suspend for a while and if it does we might still have\n          // an opportunity to hydrate before this pass commits.\n        }\n      }\n\n      // If we have scheduled higher pri work above, this will probably just abort the render\n      // since we now have higher priority work, but in case it doesn't, we need to prepare to\n      // render something, if we time out. Even if that requires us to delete everything and\n      // skip hydration.\n      // Delay having to do this as long as the suspense timeout allows us.\n      renderDidSuspendDelayIfPossible();\n      const capturedValue = createCapturedValue(\n        new Error(\n          'This Suspense boundary received an update before it finished ' +\n            'hydrating. This caused the boundary to switch to client rendering. ' +\n            'The usual way to fix this is to wrap the original update ' +\n            'in startTransition.',\n        ),\n      );\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes,\n        capturedValue,\n      );\n    } else if (isSuspenseInstancePending(suspenseInstance)) {\n      // This component is still pending more data from the server, so we can't hydrate its\n      // content. We treat it as if this component suspended itself. It might seem as if\n      // we could just try to render it client-side instead. However, this will perform a\n      // lot of unnecessary work and is unlikely to complete since it often will suspend\n      // on missing data anyway. Additionally, the server might be able to render more\n      // than we can on the client yet. In that case we'd end up with more fallback states\n      // on the client than if we just leave it alone. If the server times out or errors\n      // these should update this boundary to the permanent Fallback state instead.\n      // Mark it as having captured (i.e. suspended).\n      workInProgress.flags |= DidCapture;\n      // Leave the child in place. I.e. the dehydrated fragment.\n      workInProgress.child = current.child;\n      // Register a callback to retry this boundary once the server has sent the result.\n      const retry = retryDehydratedSuspenseBoundary.bind(null, current);\n      registerSuspenseInstanceRetry(suspenseInstance, retry);\n      return null;\n    } else {\n      // This is the first attempt.\n      reenterHydrationStateFromDehydratedSuspenseInstance(\n        workInProgress,\n        suspenseInstance,\n        suspenseState.treeContext,\n      );\n      const primaryChildren = nextProps.children;\n      const primaryChildFragment = mountSuspensePrimaryChildren(\n        workInProgress,\n        primaryChildren,\n        renderLanes,\n      );\n      // Mark the children as hydrating. This is a fast path to know whether this\n      // tree is part of a hydrating tree. This is used to determine if a child\n      // node has fully mounted yet, and for scheduling event replaying.\n      // Conceptually this is similar to Placement in that a new subtree is\n      // inserted into the React tree here. It just happens to not need DOM\n      // mutations because it already exists.\n      primaryChildFragment.flags |= Hydrating;\n      return primaryChildFragment;\n    }\n  } else {\n    // This is the second render pass. We already attempted to hydrated, but\n    // something either suspended or errored.\n\n    if (workInProgress.flags & ForceClientRender) {\n      // Something errored during hydration. Try again without hydrating.\n      workInProgress.flags &= ~ForceClientRender;\n      const capturedValue = createCapturedValue(\n        new Error(\n          'There was an error while hydrating this Suspense boundary. ' +\n            'Switched to client rendering.',\n        ),\n      );\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes,\n        capturedValue,\n      );\n    } else if ((workInProgress.memoizedState: null | SuspenseState) !== null) {\n      // Something suspended and we should still be in dehydrated mode.\n      // Leave the existing child in place.\n      workInProgress.child = current.child;\n      // The dehydrated completion pass expects this flag to be there\n      // but the normal suspense pass doesn't.\n      workInProgress.flags |= DidCapture;\n      return null;\n    } else {\n      // Suspended but we should no longer be in dehydrated mode.\n      // Therefore we now have to render the fallback.\n      const nextPrimaryChildren = nextProps.children;\n      const nextFallbackChildren = nextProps.fallback;\n      const fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(\n        current,\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackChildFragment;\n    }\n  }\n}\n\nfunction scheduleSuspenseWorkOnFiber(\n  fiber: Fiber,\n  renderLanes: Lanes,\n  propagationRoot: Fiber,\n) {\n  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n  const alternate = fiber.alternate;\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n  }\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n}\n\nfunction propagateSuspenseContextChange(\n  workInProgress: Fiber,\n  firstChild: null | Fiber,\n  renderLanes: Lanes,\n): void {\n  // Mark any Suspense boundaries with fallbacks as having work to do.\n  // If they were previously forced into fallbacks, they may now be able\n  // to unblock.\n  let node = firstChild;\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state: SuspenseState | null = node.memoizedState;\n      if (state !== null) {\n        scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n      }\n    } else if (node.tag === SuspenseListComponent) {\n      // If the tail is hidden there might not be an Suspense boundaries\n      // to schedule work on. In this case we have to schedule it on the\n      // list itself.\n      // We don't have to traverse to the children of the list since\n      // the list will propagate the change when it rerenders.\n      scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === workInProgress) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === workInProgress) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction findLastContentRow(firstChild: null | Fiber): null | Fiber {\n  // This is going to find the last row among these children that is already\n  // showing content on the screen, as opposed to being in fallback state or\n  // new. If a row has multiple Suspense boundaries, any of them being in the\n  // fallback state, counts as the whole row being in a fallback state.\n  // Note that the \"rows\" will be workInProgress, but any nested children\n  // will still be current since we haven't rendered them yet. The mounted\n  // order may not be the same as the new order. We use the new order.\n  let row = firstChild;\n  let lastContentRow: null | Fiber = null;\n  while (row !== null) {\n    const currentRow = row.alternate;\n    // New rows can't be content rows.\n    if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n      lastContentRow = row;\n    }\n    row = row.sibling;\n  }\n  return lastContentRow;\n}\n\ntype SuspenseListRevealOrder = 'forwards' | 'backwards' | 'together' | void;\n\nfunction validateRevealOrder(revealOrder: SuspenseListRevealOrder) {\n  if (__DEV__) {\n    if (\n      revealOrder !== undefined &&\n      revealOrder !== 'forwards' &&\n      revealOrder !== 'backwards' &&\n      revealOrder !== 'together' &&\n      !didWarnAboutRevealOrder[revealOrder]\n    ) {\n      didWarnAboutRevealOrder[revealOrder] = true;\n      if (typeof revealOrder === 'string') {\n        switch (revealOrder.toLowerCase()) {\n          case 'together':\n          case 'forwards':\n          case 'backwards': {\n            console.error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'Use lowercase \"%s\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase(),\n            );\n            break;\n          }\n          case 'forward':\n          case 'backward': {\n            console.error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'React uses the -s suffix in the spelling. Use \"%ss\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase(),\n            );\n            break;\n          }\n          default:\n            console.error(\n              '\"%s\" is not a supported revealOrder on <SuspenseList />. ' +\n                'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n              revealOrder,\n            );\n            break;\n        }\n      } else {\n        console.error(\n          '%s is not a supported value for revealOrder on <SuspenseList />. ' +\n            'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n          revealOrder,\n        );\n      }\n    }\n  }\n}\n\nfunction validateTailOptions(\n  tailMode: SuspenseListTailMode,\n  revealOrder: SuspenseListRevealOrder,\n) {\n  if (__DEV__) {\n    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {\n        didWarnAboutTailOptions[tailMode] = true;\n        console.error(\n          '\"%s\" is not a supported value for tail on <SuspenseList />. ' +\n            'Did you mean \"collapsed\" or \"hidden\"?',\n          tailMode,\n        );\n      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {\n        didWarnAboutTailOptions[tailMode] = true;\n        console.error(\n          '<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' +\n            '\"forwards\" or \"backwards\". ' +\n            'Did you mean to specify revealOrder=\"forwards\"?',\n          tailMode,\n        );\n      }\n    }\n  }\n}\n\nfunction validateSuspenseListNestedChild(childSlot: mixed, index: number) {\n  if (__DEV__) {\n    const isAnArray = isArray(childSlot);\n    const isIterable =\n      !isAnArray && typeof getIteratorFn(childSlot) === 'function';\n    if (isAnArray || isIterable) {\n      const type = isAnArray ? 'array' : 'iterable';\n      console.error(\n        'A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' +\n          'an additional SuspenseList to configure its revealOrder: ' +\n          '<SuspenseList revealOrder=...> ... ' +\n          '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' +\n          '</SuspenseList>',\n        type,\n        index,\n        type,\n      );\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction validateSuspenseListChildren(\n  children: mixed,\n  revealOrder: SuspenseListRevealOrder,\n) {\n  if (__DEV__) {\n    if (\n      (revealOrder === 'forwards' || revealOrder === 'backwards') &&\n      children !== undefined &&\n      children !== null &&\n      children !== false\n    ) {\n      if (isArray(children)) {\n        for (let i = 0; i < children.length; i++) {\n          if (!validateSuspenseListNestedChild(children[i], i)) {\n            return;\n          }\n        }\n      } else {\n        const iteratorFn = getIteratorFn(children);\n        if (typeof iteratorFn === 'function') {\n          const childrenIterator = iteratorFn.call(children);\n          if (childrenIterator) {\n            let step = childrenIterator.next();\n            let i = 0;\n            for (; !step.done; step = childrenIterator.next()) {\n              if (!validateSuspenseListNestedChild(step.value, i)) {\n                return;\n              }\n              i++;\n            }\n          }\n        } else {\n          console.error(\n            'A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' +\n              'This is not useful since it needs multiple rows. ' +\n              'Did you mean to pass multiple children or an array?',\n            revealOrder,\n          );\n        }\n      }\n    }\n  }\n}\n\nfunction initSuspenseListRenderState(\n  workInProgress: Fiber,\n  isBackwards: boolean,\n  tail: null | Fiber,\n  lastContentRow: null | Fiber,\n  tailMode: SuspenseListTailMode,\n): void {\n  const renderState: null | SuspenseListRenderState =\n    workInProgress.memoizedState;\n  if (renderState === null) {\n    workInProgress.memoizedState = ({\n      isBackwards: isBackwards,\n      rendering: null,\n      renderingStartTime: 0,\n      last: lastContentRow,\n      tail: tail,\n      tailMode: tailMode,\n    }: SuspenseListRenderState);\n  } else {\n    // We can reuse the existing object from previous renders.\n    renderState.isBackwards = isBackwards;\n    renderState.rendering = null;\n    renderState.renderingStartTime = 0;\n    renderState.last = lastContentRow;\n    renderState.tail = tail;\n    renderState.tailMode = tailMode;\n  }\n}\n\n// This can end up rendering this component multiple passes.\n// The first pass splits the children fibers into two sets. A head and tail.\n// We first render the head. If anything is in fallback state, we do another\n// pass through beginWork to rerender all children (including the tail) with\n// the force suspend context. If the first render didn't have anything in\n// in fallback state. Then we render each row in the tail one-by-one.\n// That happens in the completeWork phase without going back to beginWork.\nfunction updateSuspenseListComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextProps = workInProgress.pendingProps;\n  const revealOrder: SuspenseListRevealOrder = nextProps.revealOrder;\n  const tailMode: SuspenseListTailMode = nextProps.tail;\n  const newChildren = nextProps.children;\n\n  validateRevealOrder(revealOrder);\n  validateTailOptions(tailMode, revealOrder);\n  validateSuspenseListChildren(newChildren, revealOrder);\n\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n\n  let suspenseContext: SuspenseContext = suspenseStackCursor.current;\n\n  const shouldForceFallback = hasSuspenseContext(\n    suspenseContext,\n    (ForceSuspenseFallback: SuspenseContext),\n  );\n  if (shouldForceFallback) {\n    suspenseContext = setShallowSuspenseContext(\n      suspenseContext,\n      ForceSuspenseFallback,\n    );\n    workInProgress.flags |= DidCapture;\n  } else {\n    const didSuspendBefore =\n      current !== null && (current.flags & DidCapture) !== NoFlags;\n    if (didSuspendBefore) {\n      // If we previously forced a fallback, we need to schedule work\n      // on any nested boundaries to let them know to try to render\n      // again. This is the same as context updating.\n      propagateSuspenseContextChange(\n        workInProgress,\n        workInProgress.child,\n        renderLanes,\n      );\n    }\n    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  }\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    // In legacy mode, SuspenseList doesn't work so we just\n    // use make it a noop by treating it as the default revealOrder.\n    workInProgress.memoizedState = null;\n  } else {\n    switch (revealOrder) {\n      case 'forwards': {\n        const lastContentRow = findLastContentRow(workInProgress.child);\n        let tail;\n        if (lastContentRow === null) {\n          // The whole list is part of the tail.\n          // TODO: We could fast path by just rendering the tail now.\n          tail = workInProgress.child;\n          workInProgress.child = null;\n        } else {\n          // Disconnect the tail rows after the content row.\n          // We're going to render them separately later.\n          tail = lastContentRow.sibling;\n          lastContentRow.sibling = null;\n        }\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          tail,\n          lastContentRow,\n          tailMode,\n        );\n        break;\n      }\n      case 'backwards': {\n        // We're going to find the first row that has existing content.\n        // At the same time we're going to reverse the list of everything\n        // we pass in the meantime. That's going to be our tail in reverse\n        // order.\n        let tail = null;\n        let row = workInProgress.child;\n        workInProgress.child = null;\n        while (row !== null) {\n          const currentRow = row.alternate;\n          // New rows can't be content rows.\n          if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n            // This is the beginning of the main content.\n            workInProgress.child = row;\n            break;\n          }\n          const nextRow = row.sibling;\n          row.sibling = tail;\n          tail = row;\n          row = nextRow;\n        }\n        // TODO: If workInProgress.child is null, we can continue on the tail immediately.\n        initSuspenseListRenderState(\n          workInProgress,\n          true, // isBackwards\n          tail,\n          null, // last\n          tailMode,\n        );\n        break;\n      }\n      case 'together': {\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          null, // tail\n          null, // last\n          undefined,\n        );\n        break;\n      }\n      default: {\n        // The default reveal order is the same as not having\n        // a boundary.\n        workInProgress.memoizedState = null;\n      }\n    }\n  }\n  return workInProgress.child;\n}\n\nfunction updatePortalComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n  const nextChildren = workInProgress.pendingProps;\n  if (current === null) {\n    // Portals are special because we don't append the children during mount\n    // but at commit. Therefore we need to track insertions which the normal\n    // flow doesn't do during mount. This doesn't happen at the root because\n    // the root always starts with a \"current\" with a null child.\n    // TODO: Consider unifying this with how the root works.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n  return workInProgress.child;\n}\n\nlet hasWarnedAboutUsingNoValuePropOnContextProvider = false;\n\nfunction updateContextProvider(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const providerType: ReactProviderType<any> = workInProgress.type;\n  const context: ReactContext<any> = providerType._context;\n\n  const newProps = workInProgress.pendingProps;\n  const oldProps = workInProgress.memoizedProps;\n\n  const newValue = newProps.value;\n\n  if (__DEV__) {\n    if (!('value' in newProps)) {\n      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\n        hasWarnedAboutUsingNoValuePropOnContextProvider = true;\n        console.error(\n          'The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?',\n        );\n      }\n    }\n    const providerPropTypes = workInProgress.type.propTypes;\n\n    if (providerPropTypes) {\n      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');\n    }\n  }\n\n  pushProvider(workInProgress, context, newValue);\n\n  if (enableLazyContextPropagation) {\n    // In the lazy propagation implementation, we don't scan for matching\n    // consumers until something bails out, because until something bails out\n    // we're going to visit those nodes, anyway. The trade-off is that it shifts\n    // responsibility to the consumer to track whether something has changed.\n  } else {\n    if (oldProps !== null) {\n      const oldValue = oldProps.value;\n      if (is(oldValue, newValue)) {\n        // No change. Bailout early if children are the same.\n        if (\n          oldProps.children === newProps.children &&\n          !hasLegacyContextChanged()\n        ) {\n          return bailoutOnAlreadyFinishedWork(\n            current,\n            workInProgress,\n            renderLanes,\n          );\n        }\n      } else {\n        // The context value changed. Search for matching consumers and schedule\n        // them to update.\n        propagateContextChange(workInProgress, context, renderLanes);\n      }\n    }\n  }\n\n  const newChildren = newProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nlet hasWarnedAboutUsingContextAsConsumer = false;\n\nfunction updateContextConsumer(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  let context: ReactContext<any> = workInProgress.type;\n  // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n  if (__DEV__) {\n    if ((context: any)._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n          console.error(\n            'Rendering <Context> directly is not supported and will be removed in ' +\n              'a future major release. Did you mean to render <Context.Consumer> instead?',\n          );\n        }\n      }\n    } else {\n      context = (context: any)._context;\n    }\n  }\n  const newProps = workInProgress.pendingProps;\n  const render = newProps.children;\n\n  if (__DEV__) {\n    if (typeof render !== 'function') {\n      console.error(\n        'A context consumer was rendered with multiple children, or a child ' +\n          \"that isn't a function. A context consumer expects a single child \" +\n          'that is a function. If you did pass a function, make sure there ' +\n          'is no trailing or leading whitespace around it.',\n      );\n    }\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  const newValue = readContext(context);\n  if (enableSchedulingProfiler) {\n    markComponentRenderStarted(workInProgress);\n  }\n  let newChildren;\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    newChildren = render(newValue);\n    setIsRendering(false);\n  } else {\n    newChildren = render(newValue);\n  }\n  if (enableSchedulingProfiler) {\n    markComponentRenderStopped();\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateScopeComponent(current, workInProgress, renderLanes) {\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nexport function markWorkInProgressReceivedUpdate() {\n  didReceiveUpdate = true;\n}\n\nexport function checkIfWorkInProgressReceivedUpdate() {\n  return didReceiveUpdate;\n}\n\nfunction resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    if (current !== null) {\n      // A lazy component only mounts if it suspended inside a non-\n      // concurrent tree, in an inconsistent state. We want to treat it like\n      // a new mount, even though an empty version of it already committed.\n      // Disconnect the alternate pointers.\n      current.alternate = null;\n      workInProgress.alternate = null;\n      // Since this is conceptually a new fiber, schedule a Placement effect\n      workInProgress.flags |= Placement;\n    }\n  }\n}\n\nfunction bailoutOnAlreadyFinishedWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  if (current !== null) {\n    // Reuse previous dependencies\n    workInProgress.dependencies = current.dependencies;\n  }\n\n  if (enableProfilerTimer) {\n    // Don't update \"base\" render times for bailouts.\n    stopProfilerTimerIfRunning(workInProgress);\n  }\n\n  markSkippedUpdateLanes(workInProgress.lanes);\n\n  // Check if the children have any pending work.\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n    // The children don't have any work either. We can skip them.\n    // TODO: Once we add back resuming, we should check if the children are\n    // a work-in-progress set. If so, we need to transfer their effects.\n\n    if (enableLazyContextPropagation && current !== null) {\n      // Before bailing out, check if there are any context changes in\n      // the children.\n      lazilyPropagateParentContextChanges(current, workInProgress, renderLanes);\n      if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  // This fiber doesn't have work, but its subtree does. Clone the child\n  // fibers and continue.\n  cloneChildFibers(current, workInProgress);\n  return workInProgress.child;\n}\n\nfunction remountFiber(\n  current: Fiber,\n  oldWorkInProgress: Fiber,\n  newWorkInProgress: Fiber,\n): Fiber | null {\n  if (__DEV__) {\n    const returnFiber = oldWorkInProgress.return;\n    if (returnFiber === null) {\n      // eslint-disable-next-line react-internal/prod-error-codes\n      throw new Error('Cannot swap the root fiber.');\n    }\n\n    // Disconnect from the old current.\n    // It will get deleted.\n    current.alternate = null;\n    oldWorkInProgress.alternate = null;\n\n    // Connect to the new tree.\n    newWorkInProgress.index = oldWorkInProgress.index;\n    newWorkInProgress.sibling = oldWorkInProgress.sibling;\n    newWorkInProgress.return = oldWorkInProgress.return;\n    newWorkInProgress.ref = oldWorkInProgress.ref;\n\n    // Replace the child/sibling pointers above it.\n    if (oldWorkInProgress === returnFiber.child) {\n      returnFiber.child = newWorkInProgress;\n    } else {\n      let prevSibling = returnFiber.child;\n      if (prevSibling === null) {\n        // eslint-disable-next-line react-internal/prod-error-codes\n        throw new Error('Expected parent to have a child.');\n      }\n      while (prevSibling.sibling !== oldWorkInProgress) {\n        prevSibling = prevSibling.sibling;\n        if (prevSibling === null) {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          throw new Error('Expected to find the previous sibling.');\n        }\n      }\n      prevSibling.sibling = newWorkInProgress;\n    }\n\n    // Delete the old fiber and place the new one.\n    // Since the old fiber is disconnected, we have to schedule it manually.\n    const deletions = returnFiber.deletions;\n    if (deletions === null) {\n      returnFiber.deletions = [current];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(current);\n    }\n\n    newWorkInProgress.flags |= Placement;\n\n    // Restart work from the new fiber.\n    return newWorkInProgress;\n  } else {\n    throw new Error(\n      'Did not expect this call in production. ' +\n        'This is a bug in React. Please file an issue.',\n    );\n  }\n}\n\nfunction checkScheduledUpdateOrContext(\n  current: Fiber,\n  renderLanes: Lanes,\n): boolean {\n  // Before performing an early bailout, we must check if there are pending\n  // updates or context.\n  const updateLanes = current.lanes;\n  if (includesSomeLane(updateLanes, renderLanes)) {\n    return true;\n  }\n  // No pending update, but because context is propagated lazily, we need\n  // to check for a context change before we bail out.\n  if (enableLazyContextPropagation) {\n    const dependencies = current.dependencies;\n    if (dependencies !== null && checkIfContextChanged(dependencies)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction attemptEarlyBailoutIfNoScheduledUpdate(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // This fiber does not have any pending work. Bailout without entering\n  // the begin phase. There's still some bookkeeping we that needs to be done\n  // in this optimized path, mostly pushing stuff onto the stack.\n  switch (workInProgress.tag) {\n    case HostRoot:\n      pushHostRootContext(workInProgress);\n      const root: FiberRoot = workInProgress.stateNode;\n      pushRootTransition(workInProgress, root, renderLanes);\n\n      if (enableCache) {\n        const cache: Cache = current.memoizedState.cache;\n        pushCacheProvider(workInProgress, cache);\n      }\n      resetHydrationState();\n      break;\n    case HostComponent:\n      pushHostContext(workInProgress);\n      break;\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        pushLegacyContextProvider(workInProgress);\n      }\n      break;\n    }\n    case HostPortal:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n    case ContextProvider: {\n      const newValue = workInProgress.memoizedProps.value;\n      const context: ReactContext<any> = workInProgress.type._context;\n      pushProvider(workInProgress, context, newValue);\n      break;\n    }\n    case Profiler:\n      if (enableProfilerTimer) {\n        // Profiler should only call onRender when one of its descendants actually rendered.\n        const hasChildWork = includesSomeLane(\n          renderLanes,\n          workInProgress.childLanes,\n        );\n        if (hasChildWork) {\n          workInProgress.flags |= Update;\n        }\n\n        if (enableProfilerCommitHooks) {\n          // Reset effect durations for the next eventual effect phase.\n          // These are reset during render to allow the DevTools commit hook a chance to read them,\n          const stateNode = workInProgress.stateNode;\n          stateNode.effectDuration = 0;\n          stateNode.passiveEffectDuration = 0;\n        }\n      }\n      break;\n    case SuspenseComponent: {\n      const state: SuspenseState | null = workInProgress.memoizedState;\n      if (state !== null) {\n        if (state.dehydrated !== null) {\n          pushSuspenseContext(\n            workInProgress,\n            setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n          );\n          // We know that this component will suspend again because if it has\n          // been unsuspended it has committed as a resolved Suspense component.\n          // If it needs to be retried, it should have work scheduled on it.\n          workInProgress.flags |= DidCapture;\n          // We should never render the children of a dehydrated boundary until we\n          // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.\n          return null;\n        }\n\n        // If this boundary is currently timed out, we need to decide\n        // whether to retry the primary children, or to skip over it and\n        // go straight to the fallback. Check the priority of the primary\n        // child fragment.\n        const primaryChildFragment: Fiber = (workInProgress.child: any);\n        const primaryChildLanes = primaryChildFragment.childLanes;\n        if (includesSomeLane(renderLanes, primaryChildLanes)) {\n          // The primary children have pending work. Use the normal path\n          // to attempt to render the primary children again.\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        } else {\n          // The primary child fragment does not have pending work marked\n          // on it\n          pushSuspenseContext(\n            workInProgress,\n            setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n          );\n          // The primary children do not have pending work with sufficient\n          // priority. Bailout.\n          const child = bailoutOnAlreadyFinishedWork(\n            current,\n            workInProgress,\n            renderLanes,\n          );\n          if (child !== null) {\n            // The fallback children have pending work. Skip over the\n            // primary children and work on the fallback.\n            return child.sibling;\n          } else {\n            // Note: We can return `null` here because we already checked\n            // whether there were nested context consumers, via the call to\n            // `bailoutOnAlreadyFinishedWork` above.\n            return null;\n          }\n        }\n      } else {\n        pushSuspenseContext(\n          workInProgress,\n          setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n        );\n      }\n      break;\n    }\n    case SuspenseListComponent: {\n      const didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n\n      let hasChildWork = includesSomeLane(\n        renderLanes,\n        workInProgress.childLanes,\n      );\n\n      if (enableLazyContextPropagation && !hasChildWork) {\n        // Context changes may not have been propagated yet. We need to do\n        // that now, before we can decide whether to bail out.\n        // TODO: We use `childLanes` as a heuristic for whether there is\n        // remaining work in a few places, including\n        // `bailoutOnAlreadyFinishedWork` and\n        // `updateDehydratedSuspenseComponent`. We should maybe extract this\n        // into a dedicated function.\n        lazilyPropagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n        hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n      }\n\n      if (didSuspendBefore) {\n        if (hasChildWork) {\n          // If something was in fallback state last time, and we have all the\n          // same children then we're still in progressive loading state.\n          // Something might get unblocked by state updates or retries in the\n          // tree which will affect the tail. So we need to use the normal\n          // path to compute the correct tail.\n          return updateSuspenseListComponent(\n            current,\n            workInProgress,\n            renderLanes,\n          );\n        }\n        // If none of the children had any work, that means that none of\n        // them got retried so they'll still be blocked in the same way\n        // as before. We can fast bail out.\n        workInProgress.flags |= DidCapture;\n      }\n\n      // If nothing suspended before and we're rendering the same children,\n      // then the tail doesn't matter. Anything new that suspends will work\n      // in the \"together\" mode, so we can continue from the state we had.\n      const renderState = workInProgress.memoizedState;\n      if (renderState !== null) {\n        // Reset to the \"together\" mode in case we've started a different\n        // update in the past but didn't complete it.\n        renderState.rendering = null;\n        renderState.tail = null;\n        renderState.lastEffect = null;\n      }\n      pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n\n      if (hasChildWork) {\n        break;\n      } else {\n        // If none of the children had any work, that means that none of\n        // them got retried so they'll still be blocked in the same way\n        // as before. We can fast bail out.\n        return null;\n      }\n    }\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      // Need to check if the tree still needs to be deferred. This is\n      // almost identical to the logic used in the normal update path,\n      // so we'll just enter that. The only difference is we'll bail out\n      // at the next level instead of this one, because the child props\n      // have not changed. Which is fine.\n      // TODO: Probably should refactor `beginWork` to split the bailout\n      // path from the normal path. I'm tempted to do a labeled break here\n      // but I won't :)\n      workInProgress.lanes = NoLanes;\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    }\n    case CacheComponent: {\n      if (enableCache) {\n        const cache: Cache = current.memoizedState.cache;\n        pushCacheProvider(workInProgress, cache);\n      }\n      break;\n    }\n  }\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\n\nfunction beginWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  if (__DEV__) {\n    if (workInProgress._debugNeedsRemount && current !== null) {\n      // This will restart the begin phase with a new fiber.\n      return remountFiber(\n        current,\n        workInProgress,\n        createFiberFromTypeAndProps(\n          workInProgress.type,\n          workInProgress.key,\n          workInProgress.pendingProps,\n          workInProgress._debugOwner || null,\n          workInProgress.mode,\n          workInProgress.lanes,\n        ),\n      );\n    }\n  }\n\n  if (current !== null) {\n    const oldProps = current.memoizedProps;\n    const newProps = workInProgress.pendingProps;\n\n    if (\n      oldProps !== newProps ||\n      hasLegacyContextChanged() ||\n      // Force a re-render if the implementation changed due to hot reload:\n      (__DEV__ ? workInProgress.type !== current.type : false)\n    ) {\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n    } else {\n      // Neither props nor legacy context changes. Check if there's a pending\n      // update or context change.\n      const hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(\n        current,\n        renderLanes,\n      );\n      if (\n        !hasScheduledUpdateOrContext &&\n        // If this is the second pass of an error or suspense boundary, there\n        // may not be work scheduled on `current`, so we check for this flag.\n        (workInProgress.flags & DidCapture) === NoFlags\n      ) {\n        // No pending updates or context. Bail out now.\n        didReceiveUpdate = false;\n        return attemptEarlyBailoutIfNoScheduledUpdate(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      }\n      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      } else {\n        // An update was scheduled on this fiber, but there are no new props\n        // nor legacy context. Set this to false. If an update queue or context\n        // consumer produces a changed value, it will set this to true. Otherwise,\n        // the component will assume the children have not changed and bail out.\n        didReceiveUpdate = false;\n      }\n    }\n  } else {\n    didReceiveUpdate = false;\n\n    if (getIsHydrating() && isForkedChild(workInProgress)) {\n      // Check if this child belongs to a list of muliple children in\n      // its parent.\n      //\n      // In a true multi-threaded implementation, we would render children on\n      // parallel threads. This would represent the beginning of a new render\n      // thread for this subtree.\n      //\n      // We only use this for id generation during hydration, which is why the\n      // logic is located in this special branch.\n      const slotIndex = workInProgress.index;\n      const numberOfForks = getForksAtLevel(workInProgress);\n      pushTreeId(workInProgress, numberOfForks, slotIndex);\n    }\n  }\n\n  // Before entering the begin phase, clear pending update priority.\n  // TODO: This assumes that we're about to evaluate the component and process\n  // the update queue. However, there's an exception: SimpleMemoComponent\n  // sometimes bails out later in the begin phase. This indicates that we should\n  // move this assignment out of the common path and into each branch.\n  workInProgress.lanes = NoLanes;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent: {\n      return mountIndeterminateComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        renderLanes,\n      );\n    }\n    case LazyComponent: {\n      const elementType = workInProgress.elementType;\n      return mountLazyComponent(\n        current,\n        workInProgress,\n        elementType,\n        renderLanes,\n      );\n    }\n    case FunctionComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes);\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderLanes);\n    case HostText:\n      return updateHostText(current, workInProgress);\n    case SuspenseComponent:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n    case HostPortal:\n      return updatePortalComponent(current, workInProgress, renderLanes);\n    case ForwardRef: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === type\n          ? unresolvedProps\n          : resolveDefaultProps(type, unresolvedProps);\n      return updateForwardRef(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes);\n    case Mode:\n      return updateMode(current, workInProgress, renderLanes);\n    case Profiler:\n      return updateProfiler(current, workInProgress, renderLanes);\n    case ContextProvider:\n      return updateContextProvider(current, workInProgress, renderLanes);\n    case ContextConsumer:\n      return updateContextConsumer(current, workInProgress, renderLanes);\n    case MemoComponent: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      // Resolve outer props first, then resolve inner props.\n      let resolvedProps = resolveDefaultProps(type, unresolvedProps);\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = type.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentNameFromType(type),\n            );\n          }\n        }\n      }\n      resolvedProps = resolveDefaultProps(type.type, resolvedProps);\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case SimpleMemoComponent: {\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes,\n      );\n    }\n    case IncompleteClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return mountIncompleteClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case SuspenseListComponent: {\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        return updateScopeComponent(current, workInProgress, renderLanes);\n      }\n      break;\n    }\n    case OffscreenComponent: {\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    }\n    case LegacyHiddenComponent: {\n      if (enableLegacyHidden) {\n        return updateLegacyHiddenComponent(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      }\n      break;\n    }\n    case CacheComponent: {\n      if (enableCache) {\n        return updateCacheComponent(current, workInProgress, renderLanes);\n      }\n      break;\n    }\n    case TracingMarkerComponent: {\n      if (enableTransitionTracing) {\n        return updateTracingMarkerComponent(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      }\n      break;\n    }\n  }\n\n  throw new Error(\n    `Unknown unit of work tag (${workInProgress.tag}). This error is likely caused by a bug in ` +\n      'React. Please file an issue.',\n  );\n}\n\nexport {beginWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {RootState} from './ReactFiberRoot.old';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\nimport type {\n  ReactScopeInstance,\n  ReactContext,\n  Wakeable,\n} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {\n  Instance,\n  Type,\n  Props,\n  Container,\n  ChildSet,\n} from './ReactFiberHostConfig';\nimport type {\n  SuspenseState,\n  SuspenseListRenderState,\n} from './ReactFiberSuspenseComponent.old';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\nimport type {OffscreenState} from './ReactFiberOffscreenComponent';\nimport type {Cache} from './ReactFiberCacheComponent.old';\nimport {\n  enableSuspenseAvoidThisFallback,\n  enableLegacyHidden,\n} from 'shared/ReactFeatureFlags';\n\nimport {resetWorkInProgressVersions as resetMutableSourceWorkInProgressVersions} from './ReactMutableSource.old';\n\nimport {now} from './Scheduler';\n\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ContextProvider,\n  ContextConsumer,\n  ForwardRef,\n  Fragment,\n  Mode,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n  TracingMarkerComponent,\n} from './ReactWorkTags';\nimport {NoMode, ConcurrentMode, ProfileMode} from './ReactTypeOfMode';\nimport {\n  Ref,\n  RefStatic,\n  Placement,\n  Update,\n  Visibility,\n  NoFlags,\n  DidCapture,\n  Snapshot,\n  ChildDeletion,\n  StaticMask,\n  MutationMask,\n  Passive,\n  Incomplete,\n  ShouldCapture,\n  ForceClientRender,\n} from './ReactFiberFlags';\n\nimport {\n  createInstance,\n  createTextInstance,\n  appendInitialChild,\n  finalizeInitialChildren,\n  prepareUpdate,\n  supportsMutation,\n  supportsPersistence,\n  cloneInstance,\n  cloneHiddenInstance,\n  cloneHiddenTextInstance,\n  createContainerChildSet,\n  appendChildToContainerChildSet,\n  finalizeContainerChildren,\n  preparePortalMount,\n  prepareScopeUpdate,\n} from './ReactFiberHostConfig';\nimport {\n  getRootHostContainer,\n  popHostContext,\n  getHostContext,\n  popHostContainer,\n} from './ReactFiberHostContext.old';\nimport {\n  suspenseStackCursor,\n  InvisibleParentSuspenseContext,\n  hasSuspenseContext,\n  popSuspenseContext,\n  pushSuspenseContext,\n  setShallowSuspenseContext,\n  ForceSuspenseFallback,\n  setDefaultShallowSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {findFirstSuspended} from './ReactFiberSuspenseComponent.old';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext.old';\nimport {popProvider} from './ReactFiberNewContext.old';\nimport {\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  prepareToHydrateHostSuspenseInstance,\n  warnIfUnhydratedTailNodes,\n  popHydrationState,\n  resetHydrationState,\n  getIsHydrating,\n  hasUnhydratedTailNodes,\n  upgradeHydrationErrorsToRecoverable,\n} from './ReactFiberHydrationContext.old';\nimport {\n  enableSuspenseCallback,\n  enableScopeAPI,\n  enableProfilerTimer,\n  enableCache,\n  enableSuspenseLayoutEffectSemantics,\n  enableTransitionTracing,\n} from 'shared/ReactFeatureFlags';\nimport {\n  renderDidSuspend,\n  renderDidSuspendDelayIfPossible,\n  renderHasNotSuspendedYet,\n  popRenderLanes,\n  getRenderTargetTime,\n  subtreeRenderLanes,\n  getWorkInProgressTransitions,\n} from './ReactFiberWorkLoop.old';\nimport {\n  OffscreenLane,\n  SomeRetryLane,\n  NoLanes,\n  includesSomeLane,\n  mergeLanes,\n} from './ReactFiberLane.old';\nimport {resetChildFibers} from './ReactChildFiber.old';\nimport {createScopeInstance} from './ReactFiberScope.old';\nimport {transferActualDuration} from './ReactProfilerTimer.old';\nimport {popCacheProvider} from './ReactFiberCacheComponent.old';\nimport {popTreeContext} from './ReactFiberTreeContext.old';\nimport {popRootTransition, popTransition} from './ReactFiberTransition.old';\n\nfunction markUpdate(workInProgress: Fiber) {\n  // Tag the fiber with an update effect. This turns a Placement into\n  // a PlacementAndUpdate.\n  workInProgress.flags |= Update;\n}\n\nfunction markRef(workInProgress: Fiber) {\n  workInProgress.flags |= Ref;\n  if (enableSuspenseLayoutEffectSemantics) {\n    workInProgress.flags |= RefStatic;\n  }\n}\n\nfunction hadNoMutationsEffects(current: null | Fiber, completedWork: Fiber) {\n  const didBailout = current !== null && current.child === completedWork.child;\n  if (didBailout) {\n    return true;\n  }\n\n  if ((completedWork.flags & ChildDeletion) !== NoFlags) {\n    return false;\n  }\n\n  // TODO: If we move the `hadNoMutationsEffects` call after `bubbleProperties`\n  // then we only have to check the `completedWork.subtreeFlags`.\n  let child = completedWork.child;\n  while (child !== null) {\n    if (\n      (child.flags & MutationMask) !== NoFlags ||\n      (child.subtreeFlags & MutationMask) !== NoFlags\n    ) {\n      return false;\n    }\n    child = child.sibling;\n  }\n  return true;\n}\n\nlet appendAllChildren;\nlet updateHostContainer;\nlet updateHostComponent;\nlet updateHostText;\nif (supportsMutation) {\n  // Mutation mode\n\n  appendAllChildren = function(\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        appendInitialChild(parent, node.stateNode);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  updateHostContainer = function(current: null | Fiber, workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // If we have an alternate, that means this is an update and we need to\n    // schedule a side-effect to do the updates.\n    const oldProps = current.memoizedProps;\n    if (oldProps === newProps) {\n      // In mutation mode, this is sufficient for a bailout because\n      // we won't touch this node even if children changed.\n      return;\n    }\n\n    // If we get updated because one of our children updated, we don't\n    // have newProps so we'll have to reuse them.\n    // TODO: Split the update API as separate for the props vs. children.\n    // Even better would be if children weren't special cased at all tho.\n    const instance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    // TODO: Experiencing an error where oldProps is null. Suggests a host\n    // component is hitting the resume path. Figure out why. Possibly\n    // related to `hidden`.\n    const updatePayload = prepareUpdate(\n      instance,\n      type,\n      oldProps,\n      newProps,\n      rootContainerInstance,\n      currentHostContext,\n    );\n    // TODO: Type this specific to this type of component.\n    workInProgress.updateQueue = (updatePayload: any);\n    // If the update payload indicates that there is a change or if there\n    // is a new ref we mark this as an update. All the work is done in commitWork.\n    if (updatePayload) {\n      markUpdate(workInProgress);\n    }\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // If the text differs, mark it as an update. All the work in done in commitWork.\n    if (oldText !== newText) {\n      markUpdate(workInProgress);\n    }\n  };\n} else if (supportsPersistence) {\n  // Persistent host tree mode\n\n  appendAllChildren = function(\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const text = node.memoizedProps;\n          instance = cloneHiddenTextInstance(instance, text, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (\n        node.tag === OffscreenComponent &&\n        node.memoizedState !== null\n      ) {\n        // The children in this boundary are hidden. Toggle their visibility\n        // before appending.\n        const child = node.child;\n        if (child !== null) {\n          child.return = node;\n        }\n        appendAllChildren(parent, node, true, true);\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  // An unfortunate fork of appendAllChildren because we have two different parent types.\n  const appendAllChildrenToContainer = function(\n    containerChildSet: ChildSet,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const text = node.memoizedProps;\n          instance = cloneHiddenTextInstance(instance, text, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (\n        node.tag === OffscreenComponent &&\n        node.memoizedState !== null\n      ) {\n        // The children in this boundary are hidden. Toggle their visibility\n        // before appending.\n        const child = node.child;\n        if (child !== null) {\n          child.return = node;\n        }\n        appendAllChildrenToContainer(containerChildSet, node, true, true);\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n  updateHostContainer = function(current: null | Fiber, workInProgress: Fiber) {\n    const portalOrRoot: {\n      containerInfo: Container,\n      pendingChildren: ChildSet,\n      ...\n    } = workInProgress.stateNode;\n    const childrenUnchanged = hadNoMutationsEffects(current, workInProgress);\n    if (childrenUnchanged) {\n      // No changes, just reuse the existing instance.\n    } else {\n      const container = portalOrRoot.containerInfo;\n      const newChildSet = createContainerChildSet(container);\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);\n      portalOrRoot.pendingChildren = newChildSet;\n      // Schedule an update on the container to swap out the container.\n      markUpdate(workInProgress);\n      finalizeContainerChildren(container, newChildSet);\n    }\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    const currentInstance = current.stateNode;\n    const oldProps = current.memoizedProps;\n    // If there are no effects associated with this node, then none of our children had any updates.\n    // This guarantees that we can reuse all of them.\n    const childrenUnchanged = hadNoMutationsEffects(current, workInProgress);\n    if (childrenUnchanged && oldProps === newProps) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    const recyclableInstance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    let updatePayload = null;\n    if (oldProps !== newProps) {\n      updatePayload = prepareUpdate(\n        recyclableInstance,\n        type,\n        oldProps,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      );\n    }\n    if (childrenUnchanged && updatePayload === null) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    const newInstance = cloneInstance(\n      currentInstance,\n      updatePayload,\n      type,\n      oldProps,\n      newProps,\n      workInProgress,\n      childrenUnchanged,\n      recyclableInstance,\n    );\n    if (\n      finalizeInitialChildren(\n        newInstance,\n        type,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      )\n    ) {\n      markUpdate(workInProgress);\n    }\n    workInProgress.stateNode = newInstance;\n    if (childrenUnchanged) {\n      // If there are no other effects in this tree, we need to flag this node as having one.\n      // Even though we're not going to use it for anything.\n      // Otherwise parents won't know that there are new children to propagate upwards.\n      markUpdate(workInProgress);\n    } else {\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildren(newInstance, workInProgress, false, false);\n    }\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    if (oldText !== newText) {\n      // If the text content differs, we'll create a new text instance for it.\n      const rootContainerInstance = getRootHostContainer();\n      const currentHostContext = getHostContext();\n      workInProgress.stateNode = createTextInstance(\n        newText,\n        rootContainerInstance,\n        currentHostContext,\n        workInProgress,\n      );\n      // We'll have to mark it as having an effect, even though we won't use the effect for anything.\n      // This lets the parents know that at least one of their children has changed.\n      markUpdate(workInProgress);\n    } else {\n      workInProgress.stateNode = current.stateNode;\n    }\n  };\n} else {\n  // No host operations\n  updateHostContainer = function(current: null | Fiber, workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // Noop\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // Noop\n  };\n}\n\nfunction cutOffTailIfNeeded(\n  renderState: SuspenseListRenderState,\n  hasRenderedATailFallback: boolean,\n) {\n  if (getIsHydrating()) {\n    // If we're hydrating, we should consume as many items as we can\n    // so we don't leave any behind.\n    return;\n  }\n  switch (renderState.tailMode) {\n    case 'hidden': {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      let tailNode = renderState.tail;\n      let lastTailNode = null;\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n        tailNode = tailNode.sibling;\n      }\n      // Next we're simply going to delete all insertions after the\n      // last rendered item.\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        renderState.tail = null;\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n      break;\n    }\n    case 'collapsed': {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      let tailNode = renderState.tail;\n      let lastTailNode = null;\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n        tailNode = tailNode.sibling;\n      }\n      // Next we're simply going to delete all insertions after the\n      // last rendered item.\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        if (!hasRenderedATailFallback && renderState.tail !== null) {\n          // We suspended during the head. We want to show at least one\n          // row at the tail. So we'll keep on and cut off the rest.\n          renderState.tail.sibling = null;\n        } else {\n          renderState.tail = null;\n        }\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n      break;\n    }\n  }\n}\n\nfunction bubbleProperties(completedWork: Fiber) {\n  const didBailout =\n    completedWork.alternate !== null &&\n    completedWork.alternate.child === completedWork.child;\n\n  let newChildLanes = NoLanes;\n  let subtreeFlags = NoFlags;\n\n  if (!didBailout) {\n    // Bubble up the earliest expiration time.\n    if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      let actualDuration = completedWork.actualDuration;\n      let treeBaseDuration = ((completedWork.selfBaseDuration: any): number);\n\n      let child = completedWork.child;\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes),\n        );\n\n        subtreeFlags |= child.subtreeFlags;\n        subtreeFlags |= child.flags;\n\n        // When a fiber is cloned, its actualDuration is reset to 0. This value will\n        // only be updated if work is done on the fiber (i.e. it doesn't bailout).\n        // When work is done, it should bubble to the parent's actualDuration. If\n        // the fiber has not been cloned though, (meaning no work was done), then\n        // this value will reflect the amount of time spent working on a previous\n        // render. In that case it should not bubble. We determine whether it was\n        // cloned by comparing the child pointer.\n        actualDuration += child.actualDuration;\n\n        treeBaseDuration += child.treeBaseDuration;\n        child = child.sibling;\n      }\n\n      completedWork.actualDuration = actualDuration;\n      completedWork.treeBaseDuration = treeBaseDuration;\n    } else {\n      let child = completedWork.child;\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes),\n        );\n\n        subtreeFlags |= child.subtreeFlags;\n        subtreeFlags |= child.flags;\n\n        // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n        child.return = completedWork;\n\n        child = child.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  } else {\n    // Bubble up the earliest expiration time.\n    if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      let treeBaseDuration = ((completedWork.selfBaseDuration: any): number);\n\n      let child = completedWork.child;\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes),\n        );\n\n        // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n        subtreeFlags |= child.subtreeFlags & StaticMask;\n        subtreeFlags |= child.flags & StaticMask;\n\n        treeBaseDuration += child.treeBaseDuration;\n        child = child.sibling;\n      }\n\n      completedWork.treeBaseDuration = treeBaseDuration;\n    } else {\n      let child = completedWork.child;\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes),\n        );\n\n        // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n        subtreeFlags |= child.subtreeFlags & StaticMask;\n        subtreeFlags |= child.flags & StaticMask;\n\n        // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n        child.return = completedWork;\n\n        child = child.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  }\n\n  completedWork.childLanes = newChildLanes;\n\n  return didBailout;\n}\n\nfunction completeDehydratedSuspenseBoundary(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  nextState: SuspenseState | null,\n): boolean {\n  if (\n    hasUnhydratedTailNodes() &&\n    (workInProgress.mode & ConcurrentMode) !== NoMode &&\n    (workInProgress.flags & DidCapture) === NoFlags\n  ) {\n    warnIfUnhydratedTailNodes(workInProgress);\n    resetHydrationState();\n    workInProgress.flags |= ForceClientRender | Incomplete | ShouldCapture;\n\n    return false;\n  }\n\n  const wasHydrated = popHydrationState(workInProgress);\n\n  if (nextState !== null && nextState.dehydrated !== null) {\n    // We might be inside a hydration state the first time we're picking up this\n    // Suspense boundary, and also after we've reentered it for further hydration.\n    if (current === null) {\n      if (!wasHydrated) {\n        throw new Error(\n          'A dehydrated suspense component was completed without a hydrated node. ' +\n            'This is probably a bug in React.',\n        );\n      }\n      prepareToHydrateHostSuspenseInstance(workInProgress);\n      bubbleProperties(workInProgress);\n      if (enableProfilerTimer) {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          const isTimedOutSuspense = nextState !== null;\n          if (isTimedOutSuspense) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            const primaryChildFragment = workInProgress.child;\n            if (primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -= ((primaryChildFragment.treeBaseDuration: any): number);\n            }\n          }\n        }\n      }\n      return false;\n    } else {\n      // We might have reentered this boundary to hydrate it. If so, we need to reset the hydration\n      // state since we're now exiting out of it. popHydrationState doesn't do that for us.\n      resetHydrationState();\n      if ((workInProgress.flags & DidCapture) === NoFlags) {\n        // This boundary did not suspend so it's now hydrated and unsuspended.\n        workInProgress.memoizedState = null;\n      }\n      // If nothing suspended, we need to schedule an effect to mark this boundary\n      // as having hydrated so events know that they're free to be invoked.\n      // It's also a signal to replay events and the suspense callback.\n      // If something suspended, schedule an effect to attach retry listeners.\n      // So we might as well always mark this.\n      workInProgress.flags |= Update;\n      bubbleProperties(workInProgress);\n      if (enableProfilerTimer) {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          const isTimedOutSuspense = nextState !== null;\n          if (isTimedOutSuspense) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            const primaryChildFragment = workInProgress.child;\n            if (primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -= ((primaryChildFragment.treeBaseDuration: any): number);\n            }\n          }\n        }\n      }\n      return false;\n    }\n  } else {\n    // Successfully completed this tree. If this was a forced client render,\n    // there may have been recoverable errors during first hydration\n    // attempt. If so, add them to a queue so we can log them in the\n    // commit phase.\n    upgradeHydrationErrorsToRecoverable();\n\n    // Fall through to normal Suspense path\n    return true;\n  }\n}\n\nfunction completeWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  const newProps = workInProgress.pendingProps;\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n    case LazyComponent:\n    case SimpleMemoComponent:\n    case FunctionComponent:\n    case ForwardRef:\n    case Fragment:\n    case Mode:\n    case Profiler:\n    case ContextConsumer:\n    case MemoComponent:\n      bubbleProperties(workInProgress);\n      return null;\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case HostRoot: {\n      const fiberRoot = (workInProgress.stateNode: FiberRoot);\n\n      if (enableTransitionTracing) {\n        const transitions = getWorkInProgressTransitions();\n        // We set the Passive flag here because if there are new transitions,\n        // we will need to schedule callbacks and process the transitions,\n        // which we do in the passive phase\n        if (transitions !== null) {\n          workInProgress.flags |= Passive;\n        }\n      }\n\n      if (enableCache) {\n        let previousCache: Cache | null = null;\n        if (current !== null) {\n          previousCache = current.memoizedState.cache;\n        }\n        const cache: Cache = workInProgress.memoizedState.cache;\n        if (cache !== previousCache) {\n          // Run passive effects to retain/release the cache.\n          workInProgress.flags |= Passive;\n        }\n        popCacheProvider(workInProgress, cache);\n      }\n      popRootTransition(workInProgress, fiberRoot, renderLanes);\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      resetMutableSourceWorkInProgressVersions();\n      if (fiberRoot.pendingContext) {\n        fiberRoot.context = fiberRoot.pendingContext;\n        fiberRoot.pendingContext = null;\n      }\n      if (current === null || current.child === null) {\n        // If we hydrated, pop so that we can delete any remaining children\n        // that weren't hydrated.\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          // If we hydrated, then we'll need to schedule an update for\n          // the commit side-effects on the root.\n          markUpdate(workInProgress);\n        } else {\n          if (current !== null) {\n            const prevState: RootState = current.memoizedState;\n            if (\n              // Check if this is a client root\n              !prevState.isDehydrated ||\n              // Check if we reverted to client rendering (e.g. due to an error)\n              (workInProgress.flags & ForceClientRender) !== NoFlags\n            ) {\n              // Schedule an effect to clear this container at the start of the\n              // next commit. This handles the case of React rendering into a\n              // container with previous children. It's also safe to do for\n              // updates too, because current.child would only be null if the\n              // previous render was null (so the container would already\n              // be empty).\n              workInProgress.flags |= Snapshot;\n\n              // If this was a forced client render, there may have been\n              // recoverable errors during first hydration attempt. If so, add\n              // them to a queue so we can log them in the commit phase.\n              upgradeHydrationErrorsToRecoverable();\n            }\n          }\n        }\n      }\n      updateHostContainer(current, workInProgress);\n      bubbleProperties(workInProgress);\n      if (enableTransitionTracing) {\n        if ((workInProgress.subtreeFlags & Visibility) !== NoFlags) {\n          // If any of our suspense children toggle visibility, this means that\n          // the pending boundaries array needs to be updated, which we only\n          // do in the passive phase.\n          workInProgress.flags |= Passive;\n        }\n      }\n      return null;\n    }\n    case HostComponent: {\n      popHostContext(workInProgress);\n      const rootContainerInstance = getRootHostContainer();\n      const type = workInProgress.type;\n      if (current !== null && workInProgress.stateNode != null) {\n        updateHostComponent(\n          current,\n          workInProgress,\n          type,\n          newProps,\n          rootContainerInstance,\n        );\n\n        if (current.ref !== workInProgress.ref) {\n          markRef(workInProgress);\n        }\n      } else {\n        if (!newProps) {\n          if (workInProgress.stateNode === null) {\n            throw new Error(\n              'We must have new props for new mounts. This error is likely ' +\n                'caused by a bug in React. Please file an issue.',\n            );\n          }\n\n          // This can happen when we abort work.\n          bubbleProperties(workInProgress);\n          return null;\n        }\n\n        const currentHostContext = getHostContext();\n        // TODO: Move createInstance to beginWork and keep it on a context\n        // \"stack\" as the parent. Then append children as we go in beginWork\n        // or completeWork depending on whether we want to add them top->down or\n        // bottom->up. Top->down is faster in IE11.\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          // TODO: Move this and createInstance step into the beginPhase\n          // to consolidate.\n          if (\n            prepareToHydrateHostInstance(\n              workInProgress,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            // If changes to the hydrated node need to be applied at the\n            // commit-phase we mark this as such.\n            markUpdate(workInProgress);\n          }\n        } else {\n          const instance = createInstance(\n            type,\n            newProps,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n\n          appendAllChildren(instance, workInProgress, false, false);\n\n          workInProgress.stateNode = instance;\n\n          // Certain renderers require commit-time effects for initial mount.\n          // (eg DOM renderer supports auto-focus for certain elements).\n          // Make sure such renderers get scheduled for later work.\n          if (\n            finalizeInitialChildren(\n              instance,\n              type,\n              newProps,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            markUpdate(workInProgress);\n          }\n        }\n\n        if (workInProgress.ref !== null) {\n          // If there is a ref on a host node we need to schedule a callback\n          markRef(workInProgress);\n        }\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case HostText: {\n      const newText = newProps;\n      if (current && workInProgress.stateNode != null) {\n        const oldText = current.memoizedProps;\n        // If we have an alternate, that means this is an update and we need\n        // to schedule a side-effect to do the updates.\n        updateHostText(current, workInProgress, oldText, newText);\n      } else {\n        if (typeof newText !== 'string') {\n          if (workInProgress.stateNode === null) {\n            throw new Error(\n              'We must have new props for new mounts. This error is likely ' +\n                'caused by a bug in React. Please file an issue.',\n            );\n          }\n          // This can happen when we abort work.\n        }\n        const rootContainerInstance = getRootHostContainer();\n        const currentHostContext = getHostContext();\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          if (prepareToHydrateHostTextInstance(workInProgress)) {\n            markUpdate(workInProgress);\n          }\n        } else {\n          workInProgress.stateNode = createTextInstance(\n            newText,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n        }\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      const nextState: null | SuspenseState = workInProgress.memoizedState;\n\n      // Special path for dehydrated boundaries. We may eventually move this\n      // to its own fiber type so that we can add other kinds of hydration\n      // boundaries that aren't associated with a Suspense tree. In anticipation\n      // of such a refactor, all the hydration logic is contained in\n      // this branch.\n      if (\n        current === null ||\n        (current.memoizedState !== null &&\n          current.memoizedState.dehydrated !== null)\n      ) {\n        const fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(\n          current,\n          workInProgress,\n          nextState,\n        );\n        if (!fallthroughToNormalSuspensePath) {\n          if (workInProgress.flags & ShouldCapture) {\n            // Special case. There were remaining unhydrated nodes. We treat\n            // this as a mismatch. Revert to client rendering.\n            return workInProgress;\n          } else {\n            // Did not finish hydrating, either because this is the initial\n            // render or because something suspended.\n            return null;\n          }\n        }\n\n        // Continue with the normal Suspense path.\n      }\n\n      if ((workInProgress.flags & DidCapture) !== NoFlags) {\n        // Something suspended. Re-render with the fallback children.\n        workInProgress.lanes = renderLanes;\n        // Do not reset the effect list.\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        // Don't bubble properties in this case.\n        return workInProgress;\n      }\n\n      const nextDidTimeout = nextState !== null;\n      const prevDidTimeout =\n        current !== null &&\n        (current.memoizedState: null | SuspenseState) !== null;\n\n      if (enableCache && nextDidTimeout) {\n        const offscreenFiber: Fiber = (workInProgress.child: any);\n        let previousCache: Cache | null = null;\n        if (\n          offscreenFiber.alternate !== null &&\n          offscreenFiber.alternate.memoizedState !== null &&\n          offscreenFiber.alternate.memoizedState.cachePool !== null\n        ) {\n          previousCache = offscreenFiber.alternate.memoizedState.cachePool.pool;\n        }\n        let cache: Cache | null = null;\n        if (\n          offscreenFiber.memoizedState !== null &&\n          offscreenFiber.memoizedState.cachePool !== null\n        ) {\n          cache = offscreenFiber.memoizedState.cachePool.pool;\n        }\n        if (cache !== previousCache) {\n          // Run passive effects to retain/release the cache.\n          offscreenFiber.flags |= Passive;\n        }\n      }\n\n      // If the suspended state of the boundary changes, we need to schedule\n      // a passive effect, which is when we process the transitions\n      if (nextDidTimeout !== prevDidTimeout) {\n        if (enableTransitionTracing) {\n          const offscreenFiber: Fiber = (workInProgress.child: any);\n          offscreenFiber.flags |= Passive;\n        }\n\n        // If the suspended state of the boundary changes, we need to schedule\n        // an effect to toggle the subtree's visibility. When we switch from\n        // fallback -> primary, the inner Offscreen fiber schedules this effect\n        // as part of its normal complete phase. But when we switch from\n        // primary -> fallback, the inner Offscreen fiber does not have a complete\n        // phase. So we need to schedule its effect here.\n        //\n        // We also use this flag to connect/disconnect the effects, but the same\n        // logic applies: when re-connecting, the Offscreen fiber's complete\n        // phase will handle scheduling the effect. It's only when the fallback\n        // is active that we have to do anything special.\n        if (nextDidTimeout) {\n          const offscreenFiber: Fiber = (workInProgress.child: any);\n          offscreenFiber.flags |= Visibility;\n\n          // TODO: This will still suspend a synchronous tree if anything\n          // in the concurrent tree already suspended during this render.\n          // This is a known bug.\n          if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n            // TODO: Move this back to throwException because this is too late\n            // if this is a large tree which is common for initial loads. We\n            // don't know if we should restart a render or not until we get\n            // this marker, and this is too late.\n            // If this render already had a ping or lower pri updates,\n            // and this is the first time we know we're going to suspend we\n            // should be able to immediately restart from within throwException.\n            const hasInvisibleChildContext =\n              current === null &&\n              (workInProgress.memoizedProps.unstable_avoidThisFallback !==\n                true ||\n                !enableSuspenseAvoidThisFallback);\n            if (\n              hasInvisibleChildContext ||\n              hasSuspenseContext(\n                suspenseStackCursor.current,\n                (InvisibleParentSuspenseContext: SuspenseContext),\n              )\n            ) {\n              // If this was in an invisible tree or a new render, then showing\n              // this boundary is ok.\n              renderDidSuspend();\n            } else {\n              // Otherwise, we're going to have to hide content so we should\n              // suspend for longer if possible.\n              renderDidSuspendDelayIfPossible();\n            }\n          }\n        }\n      }\n\n      const wakeables: Set<Wakeable> | null = (workInProgress.updateQueue: any);\n      if (wakeables !== null) {\n        // Schedule an effect to attach a retry listener to the promise.\n        // TODO: Move to passive phase\n        workInProgress.flags |= Update;\n      }\n\n      if (\n        enableSuspenseCallback &&\n        workInProgress.updateQueue !== null &&\n        workInProgress.memoizedProps.suspenseCallback != null\n      ) {\n        // Always notify the callback\n        // TODO: Move to passive phase\n        workInProgress.flags |= Update;\n      }\n      bubbleProperties(workInProgress);\n      if (enableProfilerTimer) {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          if (nextDidTimeout) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            const primaryChildFragment = workInProgress.child;\n            if (primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -= ((primaryChildFragment.treeBaseDuration: any): number);\n            }\n          }\n        }\n      }\n      return null;\n    }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      updateHostContainer(current, workInProgress);\n      if (current === null) {\n        preparePortalMount(workInProgress.stateNode.containerInfo);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case ContextProvider:\n      // Pop provider fiber\n      const context: ReactContext<any> = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      bubbleProperties(workInProgress);\n      return null;\n    case IncompleteClassComponent: {\n      // Same as class component case. I put it down here so that the tags are\n      // sequential to ensure this switch is compiled to a jump table.\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n\n      const renderState: null | SuspenseListRenderState =\n        workInProgress.memoizedState;\n\n      if (renderState === null) {\n        // We're running in the default, \"independent\" mode.\n        // We don't do anything in this mode.\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n      let didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n\n      const renderedTail = renderState.rendering;\n      if (renderedTail === null) {\n        // We just rendered the head.\n        if (!didSuspendAlready) {\n          // This is the first pass. We need to figure out if anything is still\n          // suspended in the rendered set.\n\n          // If new content unsuspended, but there's still some content that\n          // didn't. Then we need to do a second pass that forces everything\n          // to keep showing their fallbacks.\n\n          // We might be suspended if something in this render pass suspended, or\n          // something in the previous committed pass suspended. Otherwise,\n          // there's no chance so we can skip the expensive call to\n          // findFirstSuspended.\n          const cannotBeSuspended =\n            renderHasNotSuspendedYet() &&\n            (current === null || (current.flags & DidCapture) === NoFlags);\n          if (!cannotBeSuspended) {\n            let row = workInProgress.child;\n            while (row !== null) {\n              const suspended = findFirstSuspended(row);\n              if (suspended !== null) {\n                didSuspendAlready = true;\n                workInProgress.flags |= DidCapture;\n                cutOffTailIfNeeded(renderState, false);\n\n                // If this is a newly suspended tree, it might not get committed as\n                // part of the second pass. In that case nothing will subscribe to\n                // its thenables. Instead, we'll transfer its thenables to the\n                // SuspenseList so that it can retry if they resolve.\n                // There might be multiple of these in the list but since we're\n                // going to wait for all of them anyway, it doesn't really matter\n                // which ones gets to ping. In theory we could get clever and keep\n                // track of how many dependencies remain but it gets tricky because\n                // in the meantime, we can add/remove/change items and dependencies.\n                // We might bail out of the loop before finding any but that\n                // doesn't matter since that means that the other boundaries that\n                // we did find already has their listeners attached.\n                const newThenables = suspended.updateQueue;\n                if (newThenables !== null) {\n                  workInProgress.updateQueue = newThenables;\n                  workInProgress.flags |= Update;\n                }\n\n                // Rerender the whole list, but this time, we'll force fallbacks\n                // to stay in place.\n                // Reset the effect flags before doing the second pass since that's now invalid.\n                // Reset the child fibers to their original state.\n                workInProgress.subtreeFlags = NoFlags;\n                resetChildFibers(workInProgress, renderLanes);\n\n                // Set up the Suspense Context to force suspense and immediately\n                // rerender the children.\n                pushSuspenseContext(\n                  workInProgress,\n                  setShallowSuspenseContext(\n                    suspenseStackCursor.current,\n                    ForceSuspenseFallback,\n                  ),\n                );\n                // Don't bubble properties in this case.\n                return workInProgress.child;\n              }\n              row = row.sibling;\n            }\n          }\n\n          if (renderState.tail !== null && now() > getRenderTargetTime()) {\n            // We have already passed our CPU deadline but we still have rows\n            // left in the tail. We'll just give up further attempts to render\n            // the main content and only render fallbacks.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            cutOffTailIfNeeded(renderState, false);\n\n            // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n            workInProgress.lanes = SomeRetryLane;\n          }\n        } else {\n          cutOffTailIfNeeded(renderState, false);\n        }\n        // Next we're going to render the tail.\n      } else {\n        // Append the rendered row to the child list.\n        if (!didSuspendAlready) {\n          const suspended = findFirstSuspended(renderedTail);\n          if (suspended !== null) {\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            // Ensure we transfer the update queue to the parent so that it doesn't\n            // get lost if this row ends up dropped during a second pass.\n            const newThenables = suspended.updateQueue;\n            if (newThenables !== null) {\n              workInProgress.updateQueue = newThenables;\n              workInProgress.flags |= Update;\n            }\n\n            cutOffTailIfNeeded(renderState, true);\n            // This might have been modified.\n            if (\n              renderState.tail === null &&\n              renderState.tailMode === 'hidden' &&\n              !renderedTail.alternate &&\n              !getIsHydrating() // We don't cut it if we're hydrating.\n            ) {\n              // We're done.\n              bubbleProperties(workInProgress);\n              return null;\n            }\n          } else if (\n            // The time it took to render last row is greater than the remaining\n            // time we have to render. So rendering one more row would likely\n            // exceed it.\n            now() * 2 - renderState.renderingStartTime >\n              getRenderTargetTime() &&\n            renderLanes !== OffscreenLane\n          ) {\n            // We have now passed our CPU deadline and we'll just give up further\n            // attempts to render the main content and only render fallbacks.\n            // The assumption is that this is usually faster.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            cutOffTailIfNeeded(renderState, false);\n\n            // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n            workInProgress.lanes = SomeRetryLane;\n          }\n        }\n        if (renderState.isBackwards) {\n          // The effect list of the backwards tail will have been added\n          // to the end. This breaks the guarantee that life-cycles fire in\n          // sibling order but that isn't a strong guarantee promised by React.\n          // Especially since these might also just pop in during future commits.\n          // Append to the beginning of the list.\n          renderedTail.sibling = workInProgress.child;\n          workInProgress.child = renderedTail;\n        } else {\n          const previousSibling = renderState.last;\n          if (previousSibling !== null) {\n            previousSibling.sibling = renderedTail;\n          } else {\n            workInProgress.child = renderedTail;\n          }\n          renderState.last = renderedTail;\n        }\n      }\n\n      if (renderState.tail !== null) {\n        // We still have tail rows to render.\n        // Pop a row.\n        const next = renderState.tail;\n        renderState.rendering = next;\n        renderState.tail = next.sibling;\n        renderState.renderingStartTime = now();\n        next.sibling = null;\n\n        // Restore the context.\n        // TODO: We can probably just avoid popping it instead and only\n        // setting it the first time we go from not suspended to suspended.\n        let suspenseContext = suspenseStackCursor.current;\n        if (didSuspendAlready) {\n          suspenseContext = setShallowSuspenseContext(\n            suspenseContext,\n            ForceSuspenseFallback,\n          );\n        } else {\n          suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n        }\n        pushSuspenseContext(workInProgress, suspenseContext);\n        // Do a pass over the next row.\n        // Don't bubble properties in this case.\n        return next;\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        if (current === null) {\n          const scopeInstance: ReactScopeInstance = createScopeInstance();\n          workInProgress.stateNode = scopeInstance;\n          prepareScopeUpdate(scopeInstance, workInProgress);\n          if (workInProgress.ref !== null) {\n            markRef(workInProgress);\n            markUpdate(workInProgress);\n          }\n        } else {\n          if (workInProgress.ref !== null) {\n            markUpdate(workInProgress);\n          }\n          if (current.ref !== workInProgress.ref) {\n            markRef(workInProgress);\n          }\n        }\n        bubbleProperties(workInProgress);\n        return null;\n      }\n      break;\n    }\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      popRenderLanes(workInProgress);\n      const nextState: OffscreenState | null = workInProgress.memoizedState;\n      const nextIsHidden = nextState !== null;\n\n      if (current !== null) {\n        const prevState: OffscreenState | null = current.memoizedState;\n        const prevIsHidden = prevState !== null;\n        if (\n          prevIsHidden !== nextIsHidden &&\n          // LegacyHidden doesn't do any hiding — it only pre-renders.\n          (!enableLegacyHidden || workInProgress.tag !== LegacyHiddenComponent)\n        ) {\n          workInProgress.flags |= Visibility;\n        }\n      }\n\n      if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {\n        bubbleProperties(workInProgress);\n      } else {\n        // Don't bubble properties for hidden children unless we're rendering\n        // at offscreen priority.\n        if (includesSomeLane(subtreeRenderLanes, (OffscreenLane: Lane))) {\n          bubbleProperties(workInProgress);\n          if (supportsMutation) {\n            // Check if there was an insertion or update in the hidden subtree.\n            // If so, we need to hide those nodes in the commit phase, so\n            // schedule a visibility effect.\n            if (\n              (!enableLegacyHidden ||\n                workInProgress.tag !== LegacyHiddenComponent) &&\n              workInProgress.subtreeFlags & (Placement | Update)\n            ) {\n              workInProgress.flags |= Visibility;\n            }\n          }\n        }\n      }\n\n      if (enableCache) {\n        let previousCache: Cache | null = null;\n        if (\n          current !== null &&\n          current.memoizedState !== null &&\n          current.memoizedState.cachePool !== null\n        ) {\n          previousCache = current.memoizedState.cachePool.pool;\n        }\n        let cache: Cache | null = null;\n        if (\n          workInProgress.memoizedState !== null &&\n          workInProgress.memoizedState.cachePool !== null\n        ) {\n          cache = workInProgress.memoizedState.cachePool.pool;\n        }\n        if (cache !== previousCache) {\n          // Run passive effects to retain/release the cache.\n          workInProgress.flags |= Passive;\n        }\n      }\n\n      popTransition(workInProgress, current);\n\n      return null;\n    }\n    case CacheComponent: {\n      if (enableCache) {\n        let previousCache: Cache | null = null;\n        if (current !== null) {\n          previousCache = current.memoizedState.cache;\n        }\n        const cache: Cache = workInProgress.memoizedState.cache;\n        if (cache !== previousCache) {\n          // Run passive effects to retain/release the cache.\n          workInProgress.flags |= Passive;\n        }\n        popCacheProvider(workInProgress, cache);\n        bubbleProperties(workInProgress);\n      }\n      return null;\n    }\n    case TracingMarkerComponent: {\n      if (enableTransitionTracing) {\n        // Bubble subtree flags before so we can set the flag property\n        bubbleProperties(workInProgress);\n      }\n      return null;\n    }\n  }\n\n  throw new Error(\n    `Unknown unit of work tag (${workInProgress.tag}). This error is likely caused by a bug in ` +\n      'React. Please file an issue.',\n  );\n}\n\nexport {completeWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {Cache} from './ReactFiberCacheComponent.old';\n\nimport {resetWorkInProgressVersions as resetMutableSourceWorkInProgressVersions} from './ReactMutableSource.old';\nimport {\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostPortal,\n  ContextProvider,\n  SuspenseComponent,\n  SuspenseListComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n} from './ReactWorkTags';\nimport {DidCapture, NoFlags, ShouldCapture} from './ReactFiberFlags';\nimport {NoMode, ProfileMode} from './ReactTypeOfMode';\nimport {enableProfilerTimer, enableCache} from 'shared/ReactFeatureFlags';\n\nimport {popHostContainer, popHostContext} from './ReactFiberHostContext.old';\nimport {popSuspenseContext} from './ReactFiberSuspenseContext.old';\nimport {resetHydrationState} from './ReactFiberHydrationContext.old';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext.old';\nimport {popProvider} from './ReactFiberNewContext.old';\nimport {popRenderLanes} from './ReactFiberWorkLoop.old';\nimport {popCacheProvider} from './ReactFiberCacheComponent.old';\nimport {transferActualDuration} from './ReactProfilerTimer.old';\nimport {popTreeContext} from './ReactFiberTreeContext.old';\nimport {popRootTransition, popTransition} from './ReactFiberTransition.old';\n\nfunction unwindWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      const flags = workInProgress.flags;\n      if (flags & ShouldCapture) {\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        return workInProgress;\n      }\n      return null;\n    }\n    case HostRoot: {\n      const root: FiberRoot = workInProgress.stateNode;\n      if (enableCache) {\n        const cache: Cache = workInProgress.memoizedState.cache;\n        popCacheProvider(workInProgress, cache);\n      }\n      popRootTransition(workInProgress, root, renderLanes);\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      resetMutableSourceWorkInProgressVersions();\n      const flags = workInProgress.flags;\n      if (\n        (flags & ShouldCapture) !== NoFlags &&\n        (flags & DidCapture) === NoFlags\n      ) {\n        // There was an error during render that wasn't captured by a suspense\n        // boundary. Do a second pass on the root to unmount the children.\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n        return workInProgress;\n      }\n      // We unwound to the root without completing it. Exit.\n      return null;\n    }\n    case HostComponent: {\n      // TODO: popHydrationState\n      popHostContext(workInProgress);\n      return null;\n    }\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      const suspenseState: null | SuspenseState = workInProgress.memoizedState;\n      if (suspenseState !== null && suspenseState.dehydrated !== null) {\n        if (workInProgress.alternate === null) {\n          throw new Error(\n            'Threw in newly mounted dehydrated component. This is likely a bug in ' +\n              'React. Please file an issue.',\n          );\n        }\n\n        resetHydrationState();\n      }\n\n      const flags = workInProgress.flags;\n      if (flags & ShouldCapture) {\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n        // Captured a suspense effect. Re-render the boundary.\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        return workInProgress;\n      }\n      return null;\n    }\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n      // SuspenseList doesn't actually catch anything. It should've been\n      // caught by a nested boundary. If not, it should bubble through.\n      return null;\n    }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      return null;\n    case ContextProvider:\n      const context: ReactContext<any> = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      return null;\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(workInProgress);\n      popTransition(workInProgress, current);\n      return null;\n    case CacheComponent:\n      if (enableCache) {\n        const cache: Cache = workInProgress.memoizedState.cache;\n        popCacheProvider(workInProgress, cache);\n      }\n      return null;\n    default:\n      return null;\n  }\n}\n\nfunction unwindInterruptedWork(\n  current: Fiber | null,\n  interruptedWork: Fiber,\n  renderLanes: Lanes,\n) {\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(interruptedWork);\n  switch (interruptedWork.tag) {\n    case ClassComponent: {\n      const childContextTypes = interruptedWork.type.childContextTypes;\n      if (childContextTypes !== null && childContextTypes !== undefined) {\n        popLegacyContext(interruptedWork);\n      }\n      break;\n    }\n    case HostRoot: {\n      const root: FiberRoot = interruptedWork.stateNode;\n      if (enableCache) {\n        const cache: Cache = interruptedWork.memoizedState.cache;\n        popCacheProvider(interruptedWork, cache);\n      }\n      popRootTransition(interruptedWork, root, renderLanes);\n      popHostContainer(interruptedWork);\n      popTopLevelLegacyContextObject(interruptedWork);\n      resetMutableSourceWorkInProgressVersions();\n      break;\n    }\n    case HostComponent: {\n      popHostContext(interruptedWork);\n      break;\n    }\n    case HostPortal:\n      popHostContainer(interruptedWork);\n      break;\n    case SuspenseComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n    case SuspenseListComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n    case ContextProvider:\n      const context: ReactContext<any> = interruptedWork.type._context;\n      popProvider(context, interruptedWork);\n      break;\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(interruptedWork);\n      popTransition(interruptedWork, current);\n      break;\n    case CacheComponent:\n      if (enableCache) {\n        const cache: Cache = interruptedWork.memoizedState.cache;\n        popCacheProvider(interruptedWork, cache);\n      }\n      break;\n    default:\n      break;\n  }\n}\n\nexport {unwindWork, unwindInterruptedWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  Instance,\n  TextInstance,\n  SuspenseInstance,\n  Container,\n  ChildSet,\n  UpdatePayload,\n} from './ReactFiberHostConfig';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {UpdateQueue} from './ReactFiberClassUpdateQueue.old';\nimport type {FunctionComponentUpdateQueue} from './ReactFiberHooks.old';\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {\n  OffscreenState,\n  OffscreenInstance,\n} from './ReactFiberOffscreenComponent';\nimport type {HookFlags} from './ReactHookEffectTags';\nimport type {Cache} from './ReactFiberCacheComponent.old';\nimport type {RootState} from './ReactFiberRoot.old';\nimport type {Transition} from './ReactFiberTracingMarkerComponent.old';\n\nimport {\n  enableCreateEventHandleAPI,\n  enableProfilerTimer,\n  enableProfilerCommitHooks,\n  enableProfilerNestedUpdatePhase,\n  enableSchedulingProfiler,\n  enableSuspenseCallback,\n  enableScopeAPI,\n  enableStrictEffects,\n  deletedTreeCleanUpLevel,\n  enableSuspenseLayoutEffectSemantics,\n  enableUpdaterTracking,\n  enableCache,\n  enableTransitionTracing,\n} from 'shared/ReactFeatureFlags';\nimport {\n  FunctionComponent,\n  ForwardRef,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  Profiler,\n  SuspenseComponent,\n  DehydratedFragment,\n  IncompleteClassComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  SuspenseListComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n  TracingMarkerComponent,\n} from './ReactWorkTags';\nimport {detachDeletedInstance} from './ReactFiberHostConfig';\nimport {\n  NoFlags,\n  ContentReset,\n  Placement,\n  ChildDeletion,\n  Snapshot,\n  Update,\n  Ref,\n  Hydrating,\n  Passive,\n  BeforeMutationMask,\n  MutationMask,\n  LayoutMask,\n  PassiveMask,\n  Visibility,\n} from './ReactFiberFlags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n  getCurrentFiber as getCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  isCurrentUpdateNested,\n  getCommitTime,\n  recordLayoutEffectDuration,\n  startLayoutEffectTimer,\n  recordPassiveEffectDuration,\n  startPassiveEffectTimer,\n} from './ReactProfilerTimer.old';\nimport {ConcurrentMode, NoMode, ProfileMode} from './ReactTypeOfMode';\nimport {commitUpdateQueue} from './ReactFiberClassUpdateQueue.old';\nimport {\n  getPublicInstance,\n  supportsMutation,\n  supportsPersistence,\n  supportsHydration,\n  commitMount,\n  commitUpdate,\n  resetTextContent,\n  commitTextUpdate,\n  appendChild,\n  appendChildToContainer,\n  insertBefore,\n  insertInContainerBefore,\n  removeChild,\n  removeChildFromContainer,\n  clearSuspenseBoundary,\n  clearSuspenseBoundaryFromContainer,\n  replaceContainerChildren,\n  createContainerChildSet,\n  hideInstance,\n  hideTextInstance,\n  unhideInstance,\n  unhideTextInstance,\n  commitHydratedContainer,\n  commitHydratedSuspenseInstance,\n  clearContainer,\n  prepareScopeUpdate,\n  prepareForCommit,\n  beforeActiveInstanceBlur,\n} from './ReactFiberHostConfig';\nimport {\n  captureCommitPhaseError,\n  resolveRetryWakeable,\n  markCommitTimeOfFallback,\n  enqueuePendingPassiveProfilerEffect,\n  restorePendingUpdaters,\n  addTransitionStartCallbackToPendingTransition,\n  addTransitionCompleteCallbackToPendingTransition,\n  setIsRunningInsertionEffect,\n} from './ReactFiberWorkLoop.old';\nimport {\n  NoFlags as NoHookEffect,\n  HasEffect as HookHasEffect,\n  Layout as HookLayout,\n  Insertion as HookInsertion,\n  Passive as HookPassive,\n} from './ReactHookEffectTags';\nimport {didWarnAboutReassigningProps} from './ReactFiberBeginWork.old';\nimport {doesFiberContain} from './ReactFiberTreeReflection';\nimport {invokeGuardedCallback, clearCaughtError} from 'shared/ReactErrorUtils';\nimport {\n  isDevToolsPresent,\n  markComponentPassiveEffectMountStarted,\n  markComponentPassiveEffectMountStopped,\n  markComponentPassiveEffectUnmountStarted,\n  markComponentPassiveEffectUnmountStopped,\n  markComponentLayoutEffectMountStarted,\n  markComponentLayoutEffectMountStopped,\n  markComponentLayoutEffectUnmountStarted,\n  markComponentLayoutEffectUnmountStopped,\n  onCommitUnmount,\n} from './ReactFiberDevToolsHook.old';\nimport {releaseCache, retainCache} from './ReactFiberCacheComponent.old';\nimport {clearTransitionsForLanes} from './ReactFiberLane.old';\n\nlet didWarnAboutUndefinedSnapshotBeforeUpdate: Set<mixed> | null = null;\nif (__DEV__) {\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n}\n\n// Used during the commit phase to track the state of the Offscreen component stack.\n// Allows us to avoid traversing the return path to find the nearest Offscreen ancestor.\n// Only used when enableSuspenseLayoutEffectSemantics is enabled.\nlet offscreenSubtreeIsHidden: boolean = false;\nlet offscreenSubtreeWasHidden: boolean = false;\n\nconst PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\n\nlet nextEffect: Fiber | null = null;\n\n// Used for Profiling builds to track updaters.\nlet inProgressLanes: Lanes | null = null;\nlet inProgressRoot: FiberRoot | null = null;\n\nexport function reportUncaughtErrorInDEV(error: mixed) {\n  // Wrapping each small part of the commit phase into a guarded\n  // callback is a bit too slow (https://github.com/facebook/react/pull/21666).\n  // But we rely on it to surface errors to DEV tools like overlays\n  // (https://github.com/facebook/react/issues/21712).\n  // As a compromise, rethrow only caught errors in a guard.\n  if (__DEV__) {\n    invokeGuardedCallback(null, () => {\n      throw error;\n    });\n    clearCaughtError();\n  }\n}\n\nconst callComponentWillUnmountWithTimer = function(current, instance) {\n  instance.props = current.memoizedProps;\n  instance.state = current.memoizedState;\n  if (\n    enableProfilerTimer &&\n    enableProfilerCommitHooks &&\n    current.mode & ProfileMode\n  ) {\n    try {\n      startLayoutEffectTimer();\n      instance.componentWillUnmount();\n    } finally {\n      recordLayoutEffectDuration(current);\n    }\n  } else {\n    instance.componentWillUnmount();\n  }\n};\n\n// Capture errors so they don't interrupt mounting.\nfunction safelyCallCommitHookLayoutEffectListMount(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n) {\n  try {\n    commitHookEffectListMount(HookLayout, current);\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\n// Capture errors so they don't interrupt unmounting.\nfunction safelyCallComponentWillUnmount(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n  instance: any,\n) {\n  try {\n    callComponentWillUnmountWithTimer(current, instance);\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\n// Capture errors so they don't interrupt mounting.\nfunction safelyCallComponentDidMount(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n  instance: any,\n) {\n  try {\n    instance.componentDidMount();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\n// Capture errors so they don't interrupt mounting.\nfunction safelyAttachRef(current: Fiber, nearestMountedAncestor: Fiber | null) {\n  try {\n    commitAttachRef(current);\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\nfunction safelyDetachRef(current: Fiber, nearestMountedAncestor: Fiber | null) {\n  const ref = current.ref;\n  if (ref !== null) {\n    if (typeof ref === 'function') {\n      let retVal;\n      try {\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          current.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            retVal = ref(null);\n          } finally {\n            recordLayoutEffectDuration(current);\n          }\n        } else {\n          retVal = ref(null);\n        }\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n      if (__DEV__) {\n        if (typeof retVal === 'function') {\n          console.error(\n            'Unexpected return value from a callback ref in %s. ' +\n              'A callback ref should not return a function.',\n            getComponentNameFromFiber(current),\n          );\n        }\n      }\n    } else {\n      ref.current = null;\n    }\n  }\n}\n\nfunction safelyCallDestroy(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n  destroy: () => void,\n) {\n  try {\n    destroy();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\nlet focusedInstanceHandle: null | Fiber = null;\nlet shouldFireAfterActiveInstanceBlur: boolean = false;\n\nexport function commitBeforeMutationEffects(\n  root: FiberRoot,\n  firstChild: Fiber,\n) {\n  focusedInstanceHandle = prepareForCommit(root.containerInfo);\n\n  nextEffect = firstChild;\n  commitBeforeMutationEffects_begin();\n\n  // We no longer need to track the active instance fiber\n  const shouldFire = shouldFireAfterActiveInstanceBlur;\n  shouldFireAfterActiveInstanceBlur = false;\n  focusedInstanceHandle = null;\n\n  return shouldFire;\n}\n\nfunction commitBeforeMutationEffects_begin() {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    // This phase is only used for beforeActiveInstanceBlur.\n    // Let's skip the whole loop if it's off.\n    if (enableCreateEventHandleAPI) {\n      // TODO: Should wrap this in flags check, too, as optimization\n      const deletions = fiber.deletions;\n      if (deletions !== null) {\n        for (let i = 0; i < deletions.length; i++) {\n          const deletion = deletions[i];\n          commitBeforeMutationEffectsDeletion(deletion);\n        }\n      }\n    }\n\n    const child = fiber.child;\n    if (\n      (fiber.subtreeFlags & BeforeMutationMask) !== NoFlags &&\n      child !== null\n    ) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitBeforeMutationEffects_complete();\n    }\n  }\n}\n\nfunction commitBeforeMutationEffects_complete() {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    setCurrentDebugFiberInDEV(fiber);\n    try {\n      commitBeforeMutationEffectsOnFiber(fiber);\n    } catch (error) {\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n    resetCurrentDebugFiberInDEV();\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitBeforeMutationEffectsOnFiber(finishedWork: Fiber) {\n  const current = finishedWork.alternate;\n  const flags = finishedWork.flags;\n\n  if (enableCreateEventHandleAPI) {\n    if (!shouldFireAfterActiveInstanceBlur && focusedInstanceHandle !== null) {\n      // Check to see if the focused element was inside of a hidden (Suspense) subtree.\n      // TODO: Move this out of the hot path using a dedicated effect tag.\n      if (\n        finishedWork.tag === SuspenseComponent &&\n        isSuspenseBoundaryBeingHidden(current, finishedWork) &&\n        doesFiberContain(finishedWork, focusedInstanceHandle)\n      ) {\n        shouldFireAfterActiveInstanceBlur = true;\n        beforeActiveInstanceBlur(finishedWork);\n      }\n    }\n  }\n\n  if ((flags & Snapshot) !== NoFlags) {\n    setCurrentDebugFiberInDEV(finishedWork);\n\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        break;\n      }\n      case ClassComponent: {\n        if (current !== null) {\n          const prevProps = current.memoizedProps;\n          const prevState = current.memoizedState;\n          const instance = finishedWork.stateNode;\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'getSnapshotBeforeUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentNameFromFiber(finishedWork) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'getSnapshotBeforeUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.state`. ' +\n                    'Please file an issue.',\n                  getComponentNameFromFiber(finishedWork) || 'instance',\n                );\n              }\n            }\n          }\n          const snapshot = instance.getSnapshotBeforeUpdate(\n            finishedWork.elementType === finishedWork.type\n              ? prevProps\n              : resolveDefaultProps(finishedWork.type, prevProps),\n            prevState,\n          );\n          if (__DEV__) {\n            const didWarnSet = ((didWarnAboutUndefinedSnapshotBeforeUpdate: any): Set<mixed>);\n            if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n              didWarnSet.add(finishedWork.type);\n              console.error(\n                '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' +\n                  'must be returned. You have returned undefined.',\n                getComponentNameFromFiber(finishedWork),\n              );\n            }\n          }\n          instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n        }\n        break;\n      }\n      case HostRoot: {\n        if (supportsMutation) {\n          const root = finishedWork.stateNode;\n          clearContainer(root.containerInfo);\n        }\n        break;\n      }\n      case HostComponent:\n      case HostText:\n      case HostPortal:\n      case IncompleteClassComponent:\n        // Nothing to do for these component types\n        break;\n      default: {\n        throw new Error(\n          'This unit of work tag should not have side-effects. This error is ' +\n            'likely caused by a bug in React. Please file an issue.',\n        );\n      }\n    }\n\n    resetCurrentDebugFiberInDEV();\n  }\n}\n\nfunction commitBeforeMutationEffectsDeletion(deletion: Fiber) {\n  if (enableCreateEventHandleAPI) {\n    // TODO (effects) It would be nice to avoid calling doesFiberContain()\n    // Maybe we can repurpose one of the subtreeFlags positions for this instead?\n    // Use it to store which part of the tree the focused instance is in?\n    // This assumes we can safely determine that instance during the \"render\" phase.\n    if (doesFiberContain(deletion, ((focusedInstanceHandle: any): Fiber))) {\n      shouldFireAfterActiveInstanceBlur = true;\n      beforeActiveInstanceBlur(deletion);\n    }\n  }\n}\n\nfunction commitHookEffectListUnmount(\n  flags: HookFlags,\n  finishedWork: Fiber,\n  nearestMountedAncestor: Fiber | null,\n) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      if ((effect.tag & flags) === flags) {\n        // Unmount\n        const destroy = effect.destroy;\n        effect.destroy = undefined;\n        if (destroy !== undefined) {\n          if (enableSchedulingProfiler) {\n            if ((flags & HookPassive) !== NoHookEffect) {\n              markComponentPassiveEffectUnmountStarted(finishedWork);\n            } else if ((flags & HookLayout) !== NoHookEffect) {\n              markComponentLayoutEffectUnmountStarted(finishedWork);\n            }\n          }\n\n          if (__DEV__) {\n            if ((flags & HookInsertion) !== NoHookEffect) {\n              setIsRunningInsertionEffect(true);\n            }\n          }\n          safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);\n          if (__DEV__) {\n            if ((flags & HookInsertion) !== NoHookEffect) {\n              setIsRunningInsertionEffect(false);\n            }\n          }\n\n          if (enableSchedulingProfiler) {\n            if ((flags & HookPassive) !== NoHookEffect) {\n              markComponentPassiveEffectUnmountStopped();\n            } else if ((flags & HookLayout) !== NoHookEffect) {\n              markComponentLayoutEffectUnmountStopped();\n            }\n          }\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitHookEffectListMount(flags: HookFlags, finishedWork: Fiber) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      if ((effect.tag & flags) === flags) {\n        if (enableSchedulingProfiler) {\n          if ((flags & HookPassive) !== NoHookEffect) {\n            markComponentPassiveEffectMountStarted(finishedWork);\n          } else if ((flags & HookLayout) !== NoHookEffect) {\n            markComponentLayoutEffectMountStarted(finishedWork);\n          }\n        }\n\n        // Mount\n        const create = effect.create;\n        if (__DEV__) {\n          if ((flags & HookInsertion) !== NoHookEffect) {\n            setIsRunningInsertionEffect(true);\n          }\n        }\n        effect.destroy = create();\n        if (__DEV__) {\n          if ((flags & HookInsertion) !== NoHookEffect) {\n            setIsRunningInsertionEffect(false);\n          }\n        }\n\n        if (enableSchedulingProfiler) {\n          if ((flags & HookPassive) !== NoHookEffect) {\n            markComponentPassiveEffectMountStopped();\n          } else if ((flags & HookLayout) !== NoHookEffect) {\n            markComponentLayoutEffectMountStopped();\n          }\n        }\n\n        if (__DEV__) {\n          const destroy = effect.destroy;\n          if (destroy !== undefined && typeof destroy !== 'function') {\n            let hookName;\n            if ((effect.tag & HookLayout) !== NoFlags) {\n              hookName = 'useLayoutEffect';\n            } else if ((effect.tag & HookInsertion) !== NoFlags) {\n              hookName = 'useInsertionEffect';\n            } else {\n              hookName = 'useEffect';\n            }\n            let addendum;\n            if (destroy === null) {\n              addendum =\n                ' You returned null. If your effect does not require clean ' +\n                'up, return undefined (or nothing).';\n            } else if (typeof destroy.then === 'function') {\n              addendum =\n                '\\n\\nIt looks like you wrote ' +\n                hookName +\n                '(async () => ...) or returned a Promise. ' +\n                'Instead, write the async function inside your effect ' +\n                'and call it immediately:\\n\\n' +\n                hookName +\n                '(() => {\\n' +\n                '  async function fetchData() {\\n' +\n                '    // You can await here\\n' +\n                '    const response = await MyAPI.getData(someId);\\n' +\n                '    // ...\\n' +\n                '  }\\n' +\n                '  fetchData();\\n' +\n                `}, [someId]); // Or [] if effect doesn't need props or state\\n\\n` +\n                'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';\n            } else {\n              addendum = ' You returned: ' + destroy;\n            }\n            console.error(\n              '%s must not return anything besides a function, ' +\n                'which is used for clean-up.%s',\n              hookName,\n              addendum,\n            );\n          }\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nexport function commitPassiveEffectDurations(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n): void {\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    // Only Profilers with work in their subtree will have an Update effect scheduled.\n    if ((finishedWork.flags & Update) !== NoFlags) {\n      switch (finishedWork.tag) {\n        case Profiler: {\n          const {passiveEffectDuration} = finishedWork.stateNode;\n          const {id, onPostCommit} = finishedWork.memoizedProps;\n\n          // This value will still reflect the previous commit phase.\n          // It does not get reset until the start of the next commit phase.\n          const commitTime = getCommitTime();\n\n          let phase = finishedWork.alternate === null ? 'mount' : 'update';\n          if (enableProfilerNestedUpdatePhase) {\n            if (isCurrentUpdateNested()) {\n              phase = 'nested-update';\n            }\n          }\n\n          if (typeof onPostCommit === 'function') {\n            onPostCommit(id, phase, passiveEffectDuration, commitTime);\n          }\n\n          // Bubble times to the next nearest ancestor Profiler.\n          // After we process that Profiler, we'll bubble further up.\n          let parentFiber = finishedWork.return;\n          outer: while (parentFiber !== null) {\n            switch (parentFiber.tag) {\n              case HostRoot:\n                const root = parentFiber.stateNode;\n                root.passiveEffectDuration += passiveEffectDuration;\n                break outer;\n              case Profiler:\n                const parentStateNode = parentFiber.stateNode;\n                parentStateNode.passiveEffectDuration += passiveEffectDuration;\n                break outer;\n            }\n            parentFiber = parentFiber.return;\n          }\n          break;\n        }\n        default:\n          break;\n      }\n    }\n  }\n}\n\nfunction commitLayoutEffectOnFiber(\n  finishedRoot: FiberRoot,\n  current: Fiber | null,\n  finishedWork: Fiber,\n  committedLanes: Lanes,\n): void {\n  if ((finishedWork.flags & LayoutMask) !== NoFlags) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        if (\n          !enableSuspenseLayoutEffectSemantics ||\n          !offscreenSubtreeWasHidden\n        ) {\n          // At this point layout effects have already been destroyed (during mutation phase).\n          // This is done to prevent sibling component effects from interfering with each other,\n          // e.g. a destroy function in one component should never override a ref set\n          // by a create function in another component during the same commit.\n          if (\n            enableProfilerTimer &&\n            enableProfilerCommitHooks &&\n            finishedWork.mode & ProfileMode\n          ) {\n            try {\n              startLayoutEffectTimer();\n              commitHookEffectListMount(\n                HookLayout | HookHasEffect,\n                finishedWork,\n              );\n            } finally {\n              recordLayoutEffectDuration(finishedWork);\n            }\n          } else {\n            commitHookEffectListMount(HookLayout | HookHasEffect, finishedWork);\n          }\n        }\n        break;\n      }\n      case ClassComponent: {\n        const instance = finishedWork.stateNode;\n        if (finishedWork.flags & Update) {\n          if (!offscreenSubtreeWasHidden) {\n            if (current === null) {\n              // We could update instance props and state here,\n              // but instead we rely on them being set during last render.\n              // TODO: revisit this when we implement resuming.\n              if (__DEV__) {\n                if (\n                  finishedWork.type === finishedWork.elementType &&\n                  !didWarnAboutReassigningProps\n                ) {\n                  if (instance.props !== finishedWork.memoizedProps) {\n                    console.error(\n                      'Expected %s props to match memoized props before ' +\n                        'componentDidMount. ' +\n                        'This might either be because of a bug in React, or because ' +\n                        'a component reassigns its own `this.props`. ' +\n                        'Please file an issue.',\n                      getComponentNameFromFiber(finishedWork) || 'instance',\n                    );\n                  }\n                  if (instance.state !== finishedWork.memoizedState) {\n                    console.error(\n                      'Expected %s state to match memoized state before ' +\n                        'componentDidMount. ' +\n                        'This might either be because of a bug in React, or because ' +\n                        'a component reassigns its own `this.state`. ' +\n                        'Please file an issue.',\n                      getComponentNameFromFiber(finishedWork) || 'instance',\n                    );\n                  }\n                }\n              }\n              if (\n                enableProfilerTimer &&\n                enableProfilerCommitHooks &&\n                finishedWork.mode & ProfileMode\n              ) {\n                try {\n                  startLayoutEffectTimer();\n                  instance.componentDidMount();\n                } finally {\n                  recordLayoutEffectDuration(finishedWork);\n                }\n              } else {\n                instance.componentDidMount();\n              }\n            } else {\n              const prevProps =\n                finishedWork.elementType === finishedWork.type\n                  ? current.memoizedProps\n                  : resolveDefaultProps(\n                      finishedWork.type,\n                      current.memoizedProps,\n                    );\n              const prevState = current.memoizedState;\n              // We could update instance props and state here,\n              // but instead we rely on them being set during last render.\n              // TODO: revisit this when we implement resuming.\n              if (__DEV__) {\n                if (\n                  finishedWork.type === finishedWork.elementType &&\n                  !didWarnAboutReassigningProps\n                ) {\n                  if (instance.props !== finishedWork.memoizedProps) {\n                    console.error(\n                      'Expected %s props to match memoized props before ' +\n                        'componentDidUpdate. ' +\n                        'This might either be because of a bug in React, or because ' +\n                        'a component reassigns its own `this.props`. ' +\n                        'Please file an issue.',\n                      getComponentNameFromFiber(finishedWork) || 'instance',\n                    );\n                  }\n                  if (instance.state !== finishedWork.memoizedState) {\n                    console.error(\n                      'Expected %s state to match memoized state before ' +\n                        'componentDidUpdate. ' +\n                        'This might either be because of a bug in React, or because ' +\n                        'a component reassigns its own `this.state`. ' +\n                        'Please file an issue.',\n                      getComponentNameFromFiber(finishedWork) || 'instance',\n                    );\n                  }\n                }\n              }\n              if (\n                enableProfilerTimer &&\n                enableProfilerCommitHooks &&\n                finishedWork.mode & ProfileMode\n              ) {\n                try {\n                  startLayoutEffectTimer();\n                  instance.componentDidUpdate(\n                    prevProps,\n                    prevState,\n                    instance.__reactInternalSnapshotBeforeUpdate,\n                  );\n                } finally {\n                  recordLayoutEffectDuration(finishedWork);\n                }\n              } else {\n                instance.componentDidUpdate(\n                  prevProps,\n                  prevState,\n                  instance.__reactInternalSnapshotBeforeUpdate,\n                );\n              }\n            }\n          }\n        }\n\n        // TODO: I think this is now always non-null by the time it reaches the\n        // commit phase. Consider removing the type check.\n        const updateQueue: UpdateQueue<\n          *,\n        > | null = (finishedWork.updateQueue: any);\n        if (updateQueue !== null) {\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'processing the update queue. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentNameFromFiber(finishedWork) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'processing the update queue. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.state`. ' +\n                    'Please file an issue.',\n                  getComponentNameFromFiber(finishedWork) || 'instance',\n                );\n              }\n            }\n          }\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          commitUpdateQueue(finishedWork, updateQueue, instance);\n        }\n        break;\n      }\n      case HostRoot: {\n        // TODO: I think this is now always non-null by the time it reaches the\n        // commit phase. Consider removing the type check.\n        const updateQueue: UpdateQueue<\n          *,\n        > | null = (finishedWork.updateQueue: any);\n        if (updateQueue !== null) {\n          let instance = null;\n          if (finishedWork.child !== null) {\n            switch (finishedWork.child.tag) {\n              case HostComponent:\n                instance = getPublicInstance(finishedWork.child.stateNode);\n                break;\n              case ClassComponent:\n                instance = finishedWork.child.stateNode;\n                break;\n            }\n          }\n          commitUpdateQueue(finishedWork, updateQueue, instance);\n        }\n        break;\n      }\n      case HostComponent: {\n        const instance: Instance = finishedWork.stateNode;\n\n        // Renderers may schedule work to be done after host components are mounted\n        // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n        // These effects should only be committed when components are first mounted,\n        // aka when there is no current/alternate.\n        if (current === null && finishedWork.flags & Update) {\n          const type = finishedWork.type;\n          const props = finishedWork.memoizedProps;\n          commitMount(instance, type, props, finishedWork);\n        }\n\n        break;\n      }\n      case HostText: {\n        // We have no life-cycles associated with text.\n        break;\n      }\n      case HostPortal: {\n        // We have no life-cycles associated with portals.\n        break;\n      }\n      case Profiler: {\n        if (enableProfilerTimer) {\n          const {onCommit, onRender} = finishedWork.memoizedProps;\n          const {effectDuration} = finishedWork.stateNode;\n\n          const commitTime = getCommitTime();\n\n          let phase = current === null ? 'mount' : 'update';\n          if (enableProfilerNestedUpdatePhase) {\n            if (isCurrentUpdateNested()) {\n              phase = 'nested-update';\n            }\n          }\n\n          if (typeof onRender === 'function') {\n            onRender(\n              finishedWork.memoizedProps.id,\n              phase,\n              finishedWork.actualDuration,\n              finishedWork.treeBaseDuration,\n              finishedWork.actualStartTime,\n              commitTime,\n            );\n          }\n\n          if (enableProfilerCommitHooks) {\n            if (typeof onCommit === 'function') {\n              onCommit(\n                finishedWork.memoizedProps.id,\n                phase,\n                effectDuration,\n                commitTime,\n              );\n            }\n\n            // Schedule a passive effect for this Profiler to call onPostCommit hooks.\n            // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,\n            // because the effect is also where times bubble to parent Profilers.\n            enqueuePendingPassiveProfilerEffect(finishedWork);\n\n            // Propagate layout effect durations to the next nearest Profiler ancestor.\n            // Do not reset these values until the next render so DevTools has a chance to read them first.\n            let parentFiber = finishedWork.return;\n            outer: while (parentFiber !== null) {\n              switch (parentFiber.tag) {\n                case HostRoot:\n                  const root = parentFiber.stateNode;\n                  root.effectDuration += effectDuration;\n                  break outer;\n                case Profiler:\n                  const parentStateNode = parentFiber.stateNode;\n                  parentStateNode.effectDuration += effectDuration;\n                  break outer;\n              }\n              parentFiber = parentFiber.return;\n            }\n          }\n        }\n        break;\n      }\n      case SuspenseComponent: {\n        commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n        break;\n      }\n      case SuspenseListComponent:\n      case IncompleteClassComponent:\n      case ScopeComponent:\n      case OffscreenComponent:\n      case LegacyHiddenComponent:\n      case TracingMarkerComponent: {\n        break;\n      }\n\n      default:\n        throw new Error(\n          'This unit of work tag should not have side-effects. This error is ' +\n            'likely caused by a bug in React. Please file an issue.',\n        );\n    }\n  }\n\n  if (!enableSuspenseLayoutEffectSemantics || !offscreenSubtreeWasHidden) {\n    if (enableScopeAPI) {\n      // TODO: This is a temporary solution that allowed us to transition away\n      // from React Flare on www.\n      if (finishedWork.flags & Ref && finishedWork.tag !== ScopeComponent) {\n        commitAttachRef(finishedWork);\n      }\n    } else {\n      if (finishedWork.flags & Ref) {\n        commitAttachRef(finishedWork);\n      }\n    }\n  }\n}\n\nfunction reappearLayoutEffectsOnFiber(node: Fiber) {\n  // Turn on layout effects in a tree that previously disappeared.\n  // TODO (Offscreen) Check: flags & LayoutStatic\n  switch (node.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        node.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          safelyCallCommitHookLayoutEffectListMount(node, node.return);\n        } finally {\n          recordLayoutEffectDuration(node);\n        }\n      } else {\n        safelyCallCommitHookLayoutEffectListMount(node, node.return);\n      }\n      break;\n    }\n    case ClassComponent: {\n      const instance = node.stateNode;\n      if (typeof instance.componentDidMount === 'function') {\n        safelyCallComponentDidMount(node, node.return, instance);\n      }\n      safelyAttachRef(node, node.return);\n      break;\n    }\n    case HostComponent: {\n      safelyAttachRef(node, node.return);\n      break;\n    }\n  }\n}\n\nfunction commitTransitionProgress(\n  finishedRoot: FiberRoot,\n  offscreenFiber: Fiber,\n) {\n  if (enableTransitionTracing) {\n    // This function adds suspense boundaries to the root\n    // or tracing marker's pendingSuspenseBoundaries map.\n    // When a suspense boundary goes from a resolved to a fallback\n    // state we add the boundary to the map, and when it goes from\n    // a fallback to a resolved state, we remove the boundary from\n    // the map.\n\n    // We use stateNode on the Offscreen component as a stable object\n    // that doesnt change from render to render. This way we can\n    // distinguish between different Offscreen instances (vs. the same\n    // Offscreen instance with different fibers)\n    const offscreenInstance: OffscreenInstance = offscreenFiber.stateNode;\n\n    let prevState: SuspenseState | null = null;\n    const previousFiber = offscreenFiber.alternate;\n    if (previousFiber !== null && previousFiber.memoizedState !== null) {\n      prevState = previousFiber.memoizedState;\n    }\n    const nextState: SuspenseState | null = offscreenFiber.memoizedState;\n\n    const wasHidden = prevState !== null;\n    const isHidden = nextState !== null;\n\n    const rootState: RootState = finishedRoot.current.memoizedState;\n    // TODO(luna) move pendingSuspenseBoundaries and transitions from\n    // HostRoot fiber to FiberRoot\n    const rootPendingBoundaries = rootState.pendingSuspenseBoundaries;\n    const rootTransitions = rootState.transitions;\n\n    // If there is a name on the suspense boundary, store that in\n    // the pending boundaries.\n    let name = null;\n    const parent = offscreenFiber.return;\n    if (\n      parent !== null &&\n      parent.tag === SuspenseComponent &&\n      parent.memoizedProps.unstable_name\n    ) {\n      name = parent.memoizedProps.unstable_name;\n    }\n\n    if (rootPendingBoundaries !== null) {\n      if (previousFiber === null) {\n        // Initial mount\n        if (isHidden) {\n          rootPendingBoundaries.set(offscreenInstance, {\n            name,\n          });\n        }\n      } else {\n        if (wasHidden && !isHidden) {\n          // The suspense boundary went from hidden to visible. Remove\n          // the boundary from the pending suspense boundaries set\n          // if it's there\n          if (rootPendingBoundaries.has(offscreenInstance)) {\n            rootPendingBoundaries.delete(offscreenInstance);\n\n            if (rootPendingBoundaries.size === 0 && rootTransitions !== null) {\n              rootTransitions.forEach(transition => {\n                addTransitionCompleteCallbackToPendingTransition({\n                  transitionName: transition.name,\n                  startTime: transition.startTime,\n                });\n              });\n            }\n          }\n        } else if (!wasHidden && isHidden) {\n          // The suspense boundaries was just hidden. Add the boundary\n          // to the pending boundary set if it's there\n          rootPendingBoundaries.set(offscreenInstance, {\n            name,\n          });\n        }\n      }\n    }\n  }\n}\n\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\n  // Only hide or unhide the top-most host nodes.\n  let hostSubtreeRoot = null;\n\n  if (supportsMutation) {\n    // We only have the top Fiber that was inserted but we need to recurse down its\n    // children to find all the terminal nodes.\n    let node: Fiber = finishedWork;\n    while (true) {\n      if (node.tag === HostComponent) {\n        if (hostSubtreeRoot === null) {\n          hostSubtreeRoot = node;\n          try {\n            const instance = node.stateNode;\n            if (isHidden) {\n              hideInstance(instance);\n            } else {\n              unhideInstance(node.stateNode, node.memoizedProps);\n            }\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      } else if (node.tag === HostText) {\n        if (hostSubtreeRoot === null) {\n          try {\n            const instance = node.stateNode;\n            if (isHidden) {\n              hideTextInstance(instance);\n            } else {\n              unhideTextInstance(instance, node.memoizedProps);\n            }\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      } else if (\n        (node.tag === OffscreenComponent ||\n          node.tag === LegacyHiddenComponent) &&\n        (node.memoizedState: OffscreenState) !== null &&\n        node !== finishedWork\n      ) {\n        // Found a nested Offscreen component that is hidden.\n        // Don't search any deeper. This tree should remain hidden.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === finishedWork) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === finishedWork) {\n          return;\n        }\n\n        if (hostSubtreeRoot === node) {\n          hostSubtreeRoot = null;\n        }\n\n        node = node.return;\n      }\n\n      if (hostSubtreeRoot === node) {\n        hostSubtreeRoot = null;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n}\n\nfunction commitAttachRef(finishedWork: Fiber) {\n  const ref = finishedWork.ref;\n  if (ref !== null) {\n    const instance = finishedWork.stateNode;\n    let instanceToUse;\n    switch (finishedWork.tag) {\n      case HostComponent:\n        instanceToUse = getPublicInstance(instance);\n        break;\n      default:\n        instanceToUse = instance;\n    }\n    // Moved outside to ensure DCE works with this flag\n    if (enableScopeAPI && finishedWork.tag === ScopeComponent) {\n      instanceToUse = instance;\n    }\n    if (typeof ref === 'function') {\n      let retVal;\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          retVal = ref(instanceToUse);\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        retVal = ref(instanceToUse);\n      }\n      if (__DEV__) {\n        if (typeof retVal === 'function') {\n          console.error(\n            'Unexpected return value from a callback ref in %s. ' +\n              'A callback ref should not return a function.',\n            getComponentNameFromFiber(finishedWork),\n          );\n        }\n      }\n    } else {\n      if (__DEV__) {\n        if (!ref.hasOwnProperty('current')) {\n          console.error(\n            'Unexpected ref object provided for %s. ' +\n              'Use either a ref-setter function or React.createRef().',\n            getComponentNameFromFiber(finishedWork),\n          );\n        }\n      }\n\n      ref.current = instanceToUse;\n    }\n  }\n}\n\nfunction commitDetachRef(current: Fiber) {\n  const currentRef = current.ref;\n  if (currentRef !== null) {\n    if (typeof currentRef === 'function') {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        current.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          currentRef(null);\n        } finally {\n          recordLayoutEffectDuration(current);\n        }\n      } else {\n        currentRef(null);\n      }\n    } else {\n      currentRef.current = null;\n    }\n  }\n}\n\nfunction detachFiberMutation(fiber: Fiber) {\n  // Cut off the return pointer to disconnect it from the tree.\n  // This enables us to detect and warn against state updates on an unmounted component.\n  // It also prevents events from bubbling from within disconnected components.\n  //\n  // Ideally, we should also clear the child pointer of the parent alternate to let this\n  // get GC:ed but we don't know which for sure which parent is the current\n  // one so we'll settle for GC:ing the subtree of this child.\n  // This child itself will be GC:ed when the parent updates the next time.\n  //\n  // Note that we can't clear child or sibling pointers yet.\n  // They're needed for passive effects and for findDOMNode.\n  // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).\n  //\n  // Don't reset the alternate yet, either. We need that so we can detach the\n  // alternate's fields in the passive phase. Clearing the return pointer is\n  // sufficient for findDOMNode semantics.\n  const alternate = fiber.alternate;\n  if (alternate !== null) {\n    alternate.return = null;\n  }\n  fiber.return = null;\n}\n\nfunction detachFiberAfterEffects(fiber: Fiber) {\n  const alternate = fiber.alternate;\n  if (alternate !== null) {\n    fiber.alternate = null;\n    detachFiberAfterEffects(alternate);\n  }\n\n  // Note: Defensively using negation instead of < in case\n  // `deletedTreeCleanUpLevel` is undefined.\n  if (!(deletedTreeCleanUpLevel >= 2)) {\n    // This is the default branch (level 0).\n    fiber.child = null;\n    fiber.deletions = null;\n    fiber.dependencies = null;\n    fiber.memoizedProps = null;\n    fiber.memoizedState = null;\n    fiber.pendingProps = null;\n    fiber.sibling = null;\n    fiber.stateNode = null;\n    fiber.updateQueue = null;\n\n    if (__DEV__) {\n      fiber._debugOwner = null;\n    }\n  } else {\n    // Clear cyclical Fiber fields. This level alone is designed to roughly\n    // approximate the planned Fiber refactor. In that world, `setState` will be\n    // bound to a special \"instance\" object instead of a Fiber. The Instance\n    // object will not have any of these fields. It will only be connected to\n    // the fiber tree via a single link at the root. So if this level alone is\n    // sufficient to fix memory issues, that bodes well for our plans.\n    fiber.child = null;\n    fiber.deletions = null;\n    fiber.sibling = null;\n\n    // The `stateNode` is cyclical because on host nodes it points to the host\n    // tree, which has its own pointers to children, parents, and siblings.\n    // The other host nodes also point back to fibers, so we should detach that\n    // one, too.\n    if (fiber.tag === HostComponent) {\n      const hostInstance: Instance = fiber.stateNode;\n      if (hostInstance !== null) {\n        detachDeletedInstance(hostInstance);\n      }\n    }\n    fiber.stateNode = null;\n\n    // I'm intentionally not clearing the `return` field in this level. We\n    // already disconnect the `return` pointer at the root of the deleted\n    // subtree (in `detachFiberMutation`). Besides, `return` by itself is not\n    // cyclical — it's only cyclical when combined with `child`, `sibling`, and\n    // `alternate`. But we'll clear it in the next level anyway, just in case.\n\n    if (__DEV__) {\n      fiber._debugOwner = null;\n    }\n\n    if (deletedTreeCleanUpLevel >= 3) {\n      // Theoretically, nothing in here should be necessary, because we already\n      // disconnected the fiber from the tree. So even if something leaks this\n      // particular fiber, it won't leak anything else\n      //\n      // The purpose of this branch is to be super aggressive so we can measure\n      // if there's any difference in memory impact. If there is, that could\n      // indicate a React leak we don't know about.\n      fiber.return = null;\n      fiber.dependencies = null;\n      fiber.memoizedProps = null;\n      fiber.memoizedState = null;\n      fiber.pendingProps = null;\n      fiber.stateNode = null;\n      // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.\n      fiber.updateQueue = null;\n    }\n  }\n}\n\nfunction emptyPortalContainer(current: Fiber) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  const portal: {\n    containerInfo: Container,\n    pendingChildren: ChildSet,\n    ...\n  } = current.stateNode;\n  const {containerInfo} = portal;\n  const emptyChildSet = createContainerChildSet(containerInfo);\n  replaceContainerChildren(containerInfo, emptyChildSet);\n}\n\nfunction getHostParentFiber(fiber: Fiber): Fiber {\n  let parent = fiber.return;\n  while (parent !== null) {\n    if (isHostParent(parent)) {\n      return parent;\n    }\n    parent = parent.return;\n  }\n\n  throw new Error(\n    'Expected to find a host parent. This error is likely caused by a bug ' +\n      'in React. Please file an issue.',\n  );\n}\n\nfunction isHostParent(fiber: Fiber): boolean {\n  return (\n    fiber.tag === HostComponent ||\n    fiber.tag === HostRoot ||\n    fiber.tag === HostPortal\n  );\n}\n\nfunction getHostSibling(fiber: Fiber): ?Instance {\n  // We're going to search forward into the tree until we find a sibling host\n  // node. Unfortunately, if multiple insertions are done in a row we have to\n  // search past them. This leads to exponential search for the next sibling.\n  // TODO: Find a more efficient way to do this.\n  let node: Fiber = fiber;\n  siblings: while (true) {\n    // If we didn't find anything, let's try the next sibling.\n    while (node.sibling === null) {\n      if (node.return === null || isHostParent(node.return)) {\n        // If we pop out of the root or hit the parent the fiber we are the\n        // last sibling.\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n    while (\n      node.tag !== HostComponent &&\n      node.tag !== HostText &&\n      node.tag !== DehydratedFragment\n    ) {\n      // If it is not host node and, we might have a host node inside it.\n      // Try to search down until we find one.\n      if (node.flags & Placement) {\n        // If we don't have a child, try the siblings instead.\n        continue siblings;\n      }\n      // If we don't have a child, try the siblings instead.\n      // We also skip portals because they are not part of this host tree.\n      if (node.child === null || node.tag === HostPortal) {\n        continue siblings;\n      } else {\n        node.child.return = node;\n        node = node.child;\n      }\n    }\n    // Check if this host node is stable or about to be placed.\n    if (!(node.flags & Placement)) {\n      // Found it!\n      return node.stateNode;\n    }\n  }\n}\n\nfunction commitPlacement(finishedWork: Fiber): void {\n  if (!supportsMutation) {\n    return;\n  }\n\n  // Recursively insert all host nodes into the parent.\n  const parentFiber = getHostParentFiber(finishedWork);\n\n  // Note: these two variables *must* always be updated together.\n  switch (parentFiber.tag) {\n    case HostComponent: {\n      const parent: Instance = parentFiber.stateNode;\n      if (parentFiber.flags & ContentReset) {\n        // Reset the text content of the parent before doing any insertions\n        resetTextContent(parent);\n        // Clear ContentReset from the effect tag\n        parentFiber.flags &= ~ContentReset;\n      }\n\n      const before = getHostSibling(finishedWork);\n      // We only have the top Fiber that was inserted but we need to recurse down its\n      // children to find all the terminal nodes.\n      insertOrAppendPlacementNode(finishedWork, before, parent);\n      break;\n    }\n    case HostRoot:\n    case HostPortal: {\n      const parent: Container = parentFiber.stateNode.containerInfo;\n      const before = getHostSibling(finishedWork);\n      insertOrAppendPlacementNodeIntoContainer(finishedWork, before, parent);\n      break;\n    }\n    // eslint-disable-next-line-no-fallthrough\n    default:\n      throw new Error(\n        'Invalid host parent fiber. This error is likely caused by a bug ' +\n          'in React. Please file an issue.',\n      );\n  }\n}\n\nfunction insertOrAppendPlacementNodeIntoContainer(\n  node: Fiber,\n  before: ?Instance,\n  parent: Container,\n): void {\n  const {tag} = node;\n  const isHost = tag === HostComponent || tag === HostText;\n  if (isHost) {\n    const stateNode = node.stateNode;\n    if (before) {\n      insertInContainerBefore(parent, stateNode, before);\n    } else {\n      appendChildToContainer(parent, stateNode);\n    }\n  } else if (tag === HostPortal) {\n    // If the insertion itself is a portal, then we don't want to traverse\n    // down its children. Instead, we'll get insertions from each child in\n    // the portal directly.\n  } else {\n    const child = node.child;\n    if (child !== null) {\n      insertOrAppendPlacementNodeIntoContainer(child, before, parent);\n      let sibling = child.sibling;\n      while (sibling !== null) {\n        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction insertOrAppendPlacementNode(\n  node: Fiber,\n  before: ?Instance,\n  parent: Instance,\n): void {\n  const {tag} = node;\n  const isHost = tag === HostComponent || tag === HostText;\n  if (isHost) {\n    const stateNode = node.stateNode;\n    if (before) {\n      insertBefore(parent, stateNode, before);\n    } else {\n      appendChild(parent, stateNode);\n    }\n  } else if (tag === HostPortal) {\n    // If the insertion itself is a portal, then we don't want to traverse\n    // down its children. Instead, we'll get insertions from each child in\n    // the portal directly.\n  } else {\n    const child = node.child;\n    if (child !== null) {\n      insertOrAppendPlacementNode(child, before, parent);\n      let sibling = child.sibling;\n      while (sibling !== null) {\n        insertOrAppendPlacementNode(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\n// These are tracked on the stack as we recursively traverse a\n// deleted subtree.\n// TODO: Update these during the whole mutation phase, not just during\n// a deletion.\nlet hostParent: Instance | Container | null = null;\nlet hostParentIsContainer: boolean = false;\n\nfunction commitDeletionEffects(\n  root: FiberRoot,\n  returnFiber: Fiber,\n  deletedFiber: Fiber,\n) {\n  if (supportsMutation) {\n    // We only have the top Fiber that was deleted but we need to recurse down its\n    // children to find all the terminal nodes.\n\n    // Recursively delete all host nodes from the parent, detach refs, clean\n    // up mounted layout effects, and call componentWillUnmount.\n\n    // We only need to remove the topmost host child in each branch. But then we\n    // still need to keep traversing to unmount effects, refs, and cWU. TODO: We\n    // could split this into two separate traversals functions, where the second\n    // one doesn't include any removeChild logic. This is maybe the same\n    // function as \"disappearLayoutEffects\" (or whatever that turns into after\n    // the layout phase is refactored to use recursion).\n\n    // Before starting, find the nearest host parent on the stack so we know\n    // which instance/container to remove the children from.\n    // TODO: Instead of searching up the fiber return path on every deletion, we\n    // can track the nearest host component on the JS stack as we traverse the\n    // tree during the commit phase. This would make insertions faster, too.\n    let parent = returnFiber;\n    findParent: while (parent !== null) {\n      switch (parent.tag) {\n        case HostComponent: {\n          hostParent = parent.stateNode;\n          hostParentIsContainer = false;\n          break findParent;\n        }\n        case HostRoot: {\n          hostParent = parent.stateNode.containerInfo;\n          hostParentIsContainer = true;\n          break findParent;\n        }\n        case HostPortal: {\n          hostParent = parent.stateNode.containerInfo;\n          hostParentIsContainer = true;\n          break findParent;\n        }\n      }\n      parent = parent.return;\n    }\n    if (hostParent === null) {\n      throw new Error(\n        'Expected to find a host parent. This error is likely caused by ' +\n          'a bug in React. Please file an issue.',\n      );\n    }\n    commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\n    hostParent = null;\n    hostParentIsContainer = false;\n  } else {\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\n  }\n\n  detachFiberMutation(deletedFiber);\n}\n\nfunction recursivelyTraverseDeletionEffects(\n  finishedRoot,\n  nearestMountedAncestor,\n  parent,\n) {\n  // TODO: Use a static flag to skip trees that don't have unmount effects\n  let child = parent.child;\n  while (child !== null) {\n    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);\n    child = child.sibling;\n  }\n}\n\nfunction commitDeletionEffectsOnFiber(\n  finishedRoot: FiberRoot,\n  nearestMountedAncestor: Fiber,\n  deletedFiber: Fiber,\n) {\n  onCommitUnmount(deletedFiber);\n\n  // The cases in this outer switch modify the stack before they traverse\n  // into their subtree. There are simpler cases in the inner switch\n  // that don't modify the stack.\n  switch (deletedFiber.tag) {\n    case HostComponent: {\n      if (!offscreenSubtreeWasHidden) {\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      }\n      // Intentional fallthrough to next branch\n    }\n    // eslint-disable-next-line-no-fallthrough\n    case HostText: {\n      // We only need to remove the nearest host child. Set the host parent\n      // to `null` on the stack to indicate that nested children don't\n      // need to be removed.\n      if (supportsMutation) {\n        const prevHostParent = hostParent;\n        const prevHostParentIsContainer = hostParentIsContainer;\n        hostParent = null;\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber,\n        );\n        hostParent = prevHostParent;\n        hostParentIsContainer = prevHostParentIsContainer;\n\n        if (hostParent !== null) {\n          // Now that all the child effects have unmounted, we can remove the\n          // node from the tree.\n          if (hostParentIsContainer) {\n            removeChildFromContainer(\n              ((hostParent: any): Container),\n              (deletedFiber.stateNode: Instance | TextInstance),\n            );\n          } else {\n            removeChild(\n              ((hostParent: any): Instance),\n              (deletedFiber.stateNode: Instance | TextInstance),\n            );\n          }\n        }\n      } else {\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber,\n        );\n      }\n      return;\n    }\n    case DehydratedFragment: {\n      if (enableSuspenseCallback) {\n        const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n        if (hydrationCallbacks !== null) {\n          const onDeleted = hydrationCallbacks.onDeleted;\n          if (onDeleted) {\n            onDeleted((deletedFiber.stateNode: SuspenseInstance));\n          }\n        }\n      }\n\n      // Dehydrated fragments don't have any children\n\n      // Delete the dehydrated suspense boundary and all of its content.\n      if (supportsMutation) {\n        if (hostParent !== null) {\n          if (hostParentIsContainer) {\n            clearSuspenseBoundaryFromContainer(\n              ((hostParent: any): Container),\n              (deletedFiber.stateNode: SuspenseInstance),\n            );\n          } else {\n            clearSuspenseBoundary(\n              ((hostParent: any): Instance),\n              (deletedFiber.stateNode: SuspenseInstance),\n            );\n          }\n        }\n      }\n      return;\n    }\n    case HostPortal: {\n      if (supportsMutation) {\n        // When we go into a portal, it becomes the parent to remove from.\n        const prevHostParent = hostParent;\n        const prevHostParentIsContainer = hostParentIsContainer;\n        hostParent = deletedFiber.stateNode.containerInfo;\n        hostParentIsContainer = true;\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber,\n        );\n        hostParent = prevHostParent;\n        hostParentIsContainer = prevHostParentIsContainer;\n      } else {\n        emptyPortalContainer(deletedFiber);\n\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber,\n        );\n      }\n      return;\n    }\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent: {\n      if (!offscreenSubtreeWasHidden) {\n        const updateQueue: FunctionComponentUpdateQueue | null = (deletedFiber.updateQueue: any);\n        if (updateQueue !== null) {\n          const lastEffect = updateQueue.lastEffect;\n          if (lastEffect !== null) {\n            const firstEffect = lastEffect.next;\n\n            let effect = firstEffect;\n            do {\n              const {destroy, tag} = effect;\n              if (destroy !== undefined) {\n                if ((tag & HookInsertion) !== NoHookEffect) {\n                  safelyCallDestroy(\n                    deletedFiber,\n                    nearestMountedAncestor,\n                    destroy,\n                  );\n                } else if ((tag & HookLayout) !== NoHookEffect) {\n                  if (enableSchedulingProfiler) {\n                    markComponentLayoutEffectUnmountStarted(deletedFiber);\n                  }\n\n                  if (\n                    enableProfilerTimer &&\n                    enableProfilerCommitHooks &&\n                    deletedFiber.mode & ProfileMode\n                  ) {\n                    startLayoutEffectTimer();\n                    safelyCallDestroy(\n                      deletedFiber,\n                      nearestMountedAncestor,\n                      destroy,\n                    );\n                    recordLayoutEffectDuration(deletedFiber);\n                  } else {\n                    safelyCallDestroy(\n                      deletedFiber,\n                      nearestMountedAncestor,\n                      destroy,\n                    );\n                  }\n\n                  if (enableSchedulingProfiler) {\n                    markComponentLayoutEffectUnmountStopped();\n                  }\n                }\n              }\n              effect = effect.next;\n            } while (effect !== firstEffect);\n          }\n        }\n      }\n\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber,\n      );\n      return;\n    }\n    case ClassComponent: {\n      if (!offscreenSubtreeWasHidden) {\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n        const instance = deletedFiber.stateNode;\n        if (typeof instance.componentWillUnmount === 'function') {\n          safelyCallComponentWillUnmount(\n            deletedFiber,\n            nearestMountedAncestor,\n            instance,\n          );\n        }\n      }\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber,\n      );\n      return;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      }\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber,\n      );\n      return;\n    }\n    case OffscreenComponent: {\n      if (\n        // TODO: Remove this dead flag\n        enableSuspenseLayoutEffectSemantics &&\n        deletedFiber.mode & ConcurrentMode\n      ) {\n        // If this offscreen component is hidden, we already unmounted it. Before\n        // deleting the children, track that it's already unmounted so that we\n        // don't attempt to unmount the effects again.\n        // TODO: If the tree is hidden, in most cases we should be able to skip\n        // over the nested children entirely. An exception is we haven't yet found\n        // the topmost host node to delete, which we already track on the stack.\n        // But the other case is portals, which need to be detached no matter how\n        // deeply they are nested. We should use a subtree flag to track whether a\n        // subtree includes a nested portal.\n        const prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n        offscreenSubtreeWasHidden =\n          prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null;\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber,\n        );\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n      } else {\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber,\n        );\n      }\n      break;\n    }\n    default: {\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber,\n      );\n      return;\n    }\n  }\n}\nfunction commitSuspenseCallback(finishedWork: Fiber) {\n  // TODO: Move this to passive phase\n  const newState: SuspenseState | null = finishedWork.memoizedState;\n  if (enableSuspenseCallback && newState !== null) {\n    const suspenseCallback = finishedWork.memoizedProps.suspenseCallback;\n    if (typeof suspenseCallback === 'function') {\n      const wakeables: Set<Wakeable> | null = (finishedWork.updateQueue: any);\n      if (wakeables !== null) {\n        suspenseCallback(new Set(wakeables));\n      }\n    } else if (__DEV__) {\n      if (suspenseCallback !== undefined) {\n        console.error('Unexpected type for suspenseCallback.');\n      }\n    }\n  }\n}\n\nfunction commitSuspenseHydrationCallbacks(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n) {\n  if (!supportsHydration) {\n    return;\n  }\n  const newState: SuspenseState | null = finishedWork.memoizedState;\n  if (newState === null) {\n    const current = finishedWork.alternate;\n    if (current !== null) {\n      const prevState: SuspenseState | null = current.memoizedState;\n      if (prevState !== null) {\n        const suspenseInstance = prevState.dehydrated;\n        if (suspenseInstance !== null) {\n          commitHydratedSuspenseInstance(suspenseInstance);\n          if (enableSuspenseCallback) {\n            const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n            if (hydrationCallbacks !== null) {\n              const onHydrated = hydrationCallbacks.onHydrated;\n              if (onHydrated) {\n                onHydrated(suspenseInstance);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction attachSuspenseRetryListeners(finishedWork: Fiber) {\n  // If this boundary just timed out, then it will have a set of wakeables.\n  // For each wakeable, attach a listener so that when it resolves, React\n  // attempts to re-render the boundary in the primary (pre-timeout) state.\n  const wakeables: Set<Wakeable> | null = (finishedWork.updateQueue: any);\n  if (wakeables !== null) {\n    finishedWork.updateQueue = null;\n    let retryCache = finishedWork.stateNode;\n    if (retryCache === null) {\n      retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n    }\n    wakeables.forEach(wakeable => {\n      // Memoize using the boundary fiber to prevent redundant listeners.\n      const retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n      if (!retryCache.has(wakeable)) {\n        retryCache.add(wakeable);\n\n        if (enableUpdaterTracking) {\n          if (isDevToolsPresent) {\n            if (inProgressLanes !== null && inProgressRoot !== null) {\n              // If we have pending work still, associate the original updaters with it.\n              restorePendingUpdaters(inProgressRoot, inProgressLanes);\n            } else {\n              throw Error(\n                'Expected finished root and lanes to be set. This is a bug in React.',\n              );\n            }\n          }\n        }\n\n        wakeable.then(retry, retry);\n      }\n    });\n  }\n}\n\n// This function detects when a Suspense boundary goes from visible to hidden.\n// It returns false if the boundary is already hidden.\n// TODO: Use an effect tag.\nexport function isSuspenseBoundaryBeingHidden(\n  current: Fiber | null,\n  finishedWork: Fiber,\n): boolean {\n  if (current !== null) {\n    const oldState: SuspenseState | null = current.memoizedState;\n    if (oldState === null || oldState.dehydrated !== null) {\n      const newState: SuspenseState | null = finishedWork.memoizedState;\n      return newState !== null && newState.dehydrated === null;\n    }\n  }\n  return false;\n}\n\nexport function commitMutationEffects(\n  root: FiberRoot,\n  finishedWork: Fiber,\n  committedLanes: Lanes,\n) {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n\n  setCurrentDebugFiberInDEV(finishedWork);\n  commitMutationEffectsOnFiber(finishedWork, root, committedLanes);\n  setCurrentDebugFiberInDEV(finishedWork);\n\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction recursivelyTraverseMutationEffects(\n  root: FiberRoot,\n  parentFiber: Fiber,\n  lanes: Lanes,\n) {\n  // Deletions effects can be scheduled on any fiber type. They need to happen\n  // before the children effects hae fired.\n  const deletions = parentFiber.deletions;\n  if (deletions !== null) {\n    for (let i = 0; i < deletions.length; i++) {\n      const childToDelete = deletions[i];\n      try {\n        commitDeletionEffects(root, parentFiber, childToDelete);\n      } catch (error) {\n        captureCommitPhaseError(childToDelete, parentFiber, error);\n      }\n    }\n  }\n\n  const prevDebugFiber = getCurrentDebugFiberInDEV();\n  if (parentFiber.subtreeFlags & MutationMask) {\n    let child = parentFiber.child;\n    while (child !== null) {\n      setCurrentDebugFiberInDEV(child);\n      commitMutationEffectsOnFiber(child, root, lanes);\n      child = child.sibling;\n    }\n  }\n  setCurrentDebugFiberInDEV(prevDebugFiber);\n}\n\nfunction commitMutationEffectsOnFiber(\n  finishedWork: Fiber,\n  root: FiberRoot,\n  lanes: Lanes,\n) {\n  const current = finishedWork.alternate;\n  const flags = finishedWork.flags;\n\n  // The effect flag should be checked *after* we refine the type of fiber,\n  // because the fiber tag is more specific. An exception is any flag related\n  // to reconcilation, because those can be set on all fiber types.\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        try {\n          commitHookEffectListUnmount(\n            HookInsertion | HookHasEffect,\n            finishedWork,\n            finishedWork.return,\n          );\n          commitHookEffectListMount(\n            HookInsertion | HookHasEffect,\n            finishedWork,\n          );\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n        // Layout effects are destroyed during the mutation phase so that all\n        // destroy functions for all fibers are called before any create functions.\n        // This prevents sibling component effects from interfering with each other,\n        // e.g. a destroy function in one component should never override a ref set\n        // by a create function in another component during the same commit.\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          finishedWork.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            commitHookEffectListUnmount(\n              HookLayout | HookHasEffect,\n              finishedWork,\n              finishedWork.return,\n            );\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n          recordLayoutEffectDuration(finishedWork);\n        } else {\n          try {\n            commitHookEffectListUnmount(\n              HookLayout | HookHasEffect,\n              finishedWork,\n              finishedWork.return,\n            );\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      }\n      return;\n    }\n    case ClassComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Ref) {\n        if (current !== null) {\n          safelyDetachRef(current, current.return);\n        }\n      }\n      return;\n    }\n    case HostComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Ref) {\n        if (current !== null) {\n          safelyDetachRef(current, current.return);\n        }\n      }\n      if (supportsMutation) {\n        // TODO: ContentReset gets cleared by the children during the commit\n        // phase. This is a refactor hazard because it means we must read\n        // flags the flags after `commitReconciliationEffects` has already run;\n        // the order matters. We should refactor so that ContentReset does not\n        // rely on mutating the flag during commit. Like by setting a flag\n        // during the render phase instead.\n        if (finishedWork.flags & ContentReset) {\n          const instance: Instance = finishedWork.stateNode;\n          try {\n            resetTextContent(instance);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n\n        if (flags & Update) {\n          const instance: Instance = finishedWork.stateNode;\n          if (instance != null) {\n            // Commit the work prepared earlier.\n            const newProps = finishedWork.memoizedProps;\n            // For hydration we reuse the update path but we treat the oldProps\n            // as the newProps. The updatePayload will contain the real change in\n            // this case.\n            const oldProps =\n              current !== null ? current.memoizedProps : newProps;\n            const type = finishedWork.type;\n            // TODO: Type the updateQueue to be specific to host components.\n            const updatePayload: null | UpdatePayload = (finishedWork.updateQueue: any);\n            finishedWork.updateQueue = null;\n            if (updatePayload !== null) {\n              try {\n                commitUpdate(\n                  instance,\n                  updatePayload,\n                  type,\n                  oldProps,\n                  newProps,\n                  finishedWork,\n                );\n              } catch (error) {\n                captureCommitPhaseError(\n                  finishedWork,\n                  finishedWork.return,\n                  error,\n                );\n              }\n            }\n          }\n        }\n      }\n      return;\n    }\n    case HostText: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        if (supportsMutation) {\n          if (finishedWork.stateNode === null) {\n            throw new Error(\n              'This should have a text node initialized. This error is likely ' +\n                'caused by a bug in React. Please file an issue.',\n            );\n          }\n\n          const textInstance: TextInstance = finishedWork.stateNode;\n          const newText: string = finishedWork.memoizedProps;\n          // For hydration we reuse the update path but we treat the oldProps\n          // as the newProps. The updatePayload will contain the real change in\n          // this case.\n          const oldText: string =\n            current !== null ? current.memoizedProps : newText;\n\n          try {\n            commitTextUpdate(textInstance, oldText, newText);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      }\n      return;\n    }\n    case HostRoot: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        if (supportsMutation && supportsHydration) {\n          if (current !== null) {\n            const prevRootState: RootState = current.memoizedState;\n            if (prevRootState.isDehydrated) {\n              try {\n                commitHydratedContainer(root.containerInfo);\n              } catch (error) {\n                captureCommitPhaseError(\n                  finishedWork,\n                  finishedWork.return,\n                  error,\n                );\n              }\n            }\n          }\n        }\n        if (supportsPersistence) {\n          const containerInfo = root.containerInfo;\n          const pendingChildren = root.pendingChildren;\n          try {\n            replaceContainerChildren(containerInfo, pendingChildren);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      }\n      return;\n    }\n    case HostPortal: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        if (supportsPersistence) {\n          const portal = finishedWork.stateNode;\n          const containerInfo = portal.containerInfo;\n          const pendingChildren = portal.pendingChildren;\n          try {\n            replaceContainerChildren(containerInfo, pendingChildren);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      }\n      return;\n    }\n    case SuspenseComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      const offscreenFiber: Fiber = (finishedWork.child: any);\n\n      if (offscreenFiber.flags & Visibility) {\n        const offscreenInstance: OffscreenInstance = offscreenFiber.stateNode;\n        const newState: OffscreenState | null = offscreenFiber.memoizedState;\n        const isHidden = newState !== null;\n\n        // Track the current state on the Offscreen instance so we can\n        // read it during an event\n        offscreenInstance.isHidden = isHidden;\n\n        if (isHidden) {\n          const wasHidden =\n            offscreenFiber.alternate !== null &&\n            offscreenFiber.alternate.memoizedState !== null;\n          if (!wasHidden) {\n            // TODO: Move to passive phase\n            markCommitTimeOfFallback();\n          }\n        }\n      }\n\n      if (flags & Update) {\n        try {\n          commitSuspenseCallback(finishedWork);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n        attachSuspenseRetryListeners(finishedWork);\n      }\n      return;\n    }\n    case OffscreenComponent: {\n      const wasHidden = current !== null && current.memoizedState !== null;\n\n      if (\n        // TODO: Remove this dead flag\n        enableSuspenseLayoutEffectSemantics &&\n        finishedWork.mode & ConcurrentMode\n      ) {\n        // Before committing the children, track on the stack whether this\n        // offscreen subtree was already hidden, so that we don't unmount the\n        // effects again.\n        const prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || wasHidden;\n        recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n      } else {\n        recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      }\n\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Visibility) {\n        const offscreenInstance: OffscreenInstance = finishedWork.stateNode;\n        const newState: OffscreenState | null = finishedWork.memoizedState;\n        const isHidden = newState !== null;\n        const offscreenBoundary: Fiber = finishedWork;\n\n        // Track the current state on the Offscreen instance so we can\n        // read it during an event\n        offscreenInstance.isHidden = isHidden;\n\n        if (enableSuspenseLayoutEffectSemantics) {\n          if (isHidden) {\n            if (!wasHidden) {\n              if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {\n                nextEffect = offscreenBoundary;\n                let offscreenChild = offscreenBoundary.child;\n                while (offscreenChild !== null) {\n                  nextEffect = offscreenChild;\n                  disappearLayoutEffects_begin(offscreenChild);\n                  offscreenChild = offscreenChild.sibling;\n                }\n              }\n            }\n          } else {\n            if (wasHidden) {\n              // TODO: Move re-appear call here for symmetry?\n            }\n          }\n        }\n\n        if (supportsMutation) {\n          // TODO: This needs to run whenever there's an insertion or update\n          // inside a hidden Offscreen tree.\n          hideOrUnhideAllChildren(offscreenBoundary, isHidden);\n        }\n      }\n      return;\n    }\n    case SuspenseListComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        attachSuspenseRetryListeners(finishedWork);\n      }\n      return;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n        commitReconciliationEffects(finishedWork);\n\n        // TODO: This is a temporary solution that allowed us to transition away\n        // from React Flare on www.\n        if (flags & Ref) {\n          if (current !== null) {\n            safelyDetachRef(finishedWork, finishedWork.return);\n          }\n          safelyAttachRef(finishedWork, finishedWork.return);\n        }\n        if (flags & Update) {\n          const scopeInstance = finishedWork.stateNode;\n          prepareScopeUpdate(scopeInstance, finishedWork);\n        }\n      }\n      return;\n    }\n    default: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      return;\n    }\n  }\n}\nfunction commitReconciliationEffects(finishedWork: Fiber) {\n  // Placement effects (insertions, reorders) can be scheduled on any fiber\n  // type. They needs to happen after the children effects have fired, but\n  // before the effects on this fiber have fired.\n  const flags = finishedWork.flags;\n  if (flags & Placement) {\n    try {\n      commitPlacement(finishedWork);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n    // Clear the \"placement\" from effect tag so that we know that this is\n    // inserted, before any life-cycles like componentDidMount gets called.\n    // TODO: findDOMNode doesn't rely on this any more but isMounted does\n    // and isMounted is deprecated anyway so we should be able to kill this.\n    finishedWork.flags &= ~Placement;\n  }\n  if (flags & Hydrating) {\n    finishedWork.flags &= ~Hydrating;\n  }\n}\n\nexport function commitLayoutEffects(\n  finishedWork: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes,\n): void {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n  nextEffect = finishedWork;\n\n  commitLayoutEffects_begin(finishedWork, root, committedLanes);\n\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction commitLayoutEffects_begin(\n  subtreeRoot: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes,\n) {\n  // Suspense layout effects semantics don't change for legacy roots.\n  const isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;\n\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const firstChild = fiber.child;\n\n    if (\n      enableSuspenseLayoutEffectSemantics &&\n      fiber.tag === OffscreenComponent &&\n      isModernRoot\n    ) {\n      // Keep track of the current Offscreen stack's state.\n      const isHidden = fiber.memoizedState !== null;\n      const newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;\n      if (newOffscreenSubtreeIsHidden) {\n        // The Offscreen tree is hidden. Skip over its layout effects.\n        commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n        continue;\n      } else {\n        // TODO (Offscreen) Also check: subtreeFlags & LayoutMask\n        const current = fiber.alternate;\n        const wasHidden = current !== null && current.memoizedState !== null;\n        const newOffscreenSubtreeWasHidden =\n          wasHidden || offscreenSubtreeWasHidden;\n        const prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;\n        const prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n\n        // Traverse the Offscreen subtree with the current Offscreen as the root.\n        offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;\n        offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;\n\n        if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {\n          // This is the root of a reappearing boundary. Turn its layout effects\n          // back on.\n          nextEffect = fiber;\n          reappearLayoutEffects_begin(fiber);\n        }\n\n        let child = firstChild;\n        while (child !== null) {\n          nextEffect = child;\n          commitLayoutEffects_begin(\n            child, // New root; bubble back up to here and stop.\n            root,\n            committedLanes,\n          );\n          child = child.sibling;\n        }\n\n        // Restore Offscreen state and resume in our-progress traversal.\n        nextEffect = fiber;\n        offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n        commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n\n        continue;\n      }\n    }\n\n    if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n    }\n  }\n}\n\nfunction commitLayoutMountEffects_complete(\n  subtreeRoot: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    if ((fiber.flags & LayoutMask) !== NoFlags) {\n      const current = fiber.alternate;\n      setCurrentDebugFiberInDEV(fiber);\n      try {\n        commitLayoutEffectOnFiber(root, current, fiber, committedLanes);\n      } catch (error) {\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n      resetCurrentDebugFiberInDEV();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction disappearLayoutEffects_begin(subtreeRoot: Fiber) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const firstChild = fiber.child;\n\n    // TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case MemoComponent:\n      case SimpleMemoComponent: {\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          fiber.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            commitHookEffectListUnmount(HookLayout, fiber, fiber.return);\n          } finally {\n            recordLayoutEffectDuration(fiber);\n          }\n        } else {\n          commitHookEffectListUnmount(HookLayout, fiber, fiber.return);\n        }\n        break;\n      }\n      case ClassComponent: {\n        // TODO (Offscreen) Check: flags & RefStatic\n        safelyDetachRef(fiber, fiber.return);\n\n        const instance = fiber.stateNode;\n        if (typeof instance.componentWillUnmount === 'function') {\n          safelyCallComponentWillUnmount(fiber, fiber.return, instance);\n        }\n        break;\n      }\n      case HostComponent: {\n        safelyDetachRef(fiber, fiber.return);\n        break;\n      }\n      case OffscreenComponent: {\n        // Check if this is a\n        const isHidden = fiber.memoizedState !== null;\n        if (isHidden) {\n          // Nested Offscreen tree is already hidden. Don't disappear\n          // its effects.\n          disappearLayoutEffects_complete(subtreeRoot);\n          continue;\n        }\n        break;\n      }\n    }\n\n    // TODO (Offscreen) Check: subtreeFlags & LayoutStatic\n    if (firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      disappearLayoutEffects_complete(subtreeRoot);\n    }\n  }\n}\n\nfunction disappearLayoutEffects_complete(subtreeRoot: Fiber) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction reappearLayoutEffects_begin(subtreeRoot: Fiber) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const firstChild = fiber.child;\n\n    if (fiber.tag === OffscreenComponent) {\n      const isHidden = fiber.memoizedState !== null;\n      if (isHidden) {\n        // Nested Offscreen tree is still hidden. Don't re-appear its effects.\n        reappearLayoutEffects_complete(subtreeRoot);\n        continue;\n      }\n    }\n\n    // TODO (Offscreen) Check: subtreeFlags & LayoutStatic\n    if (firstChild !== null) {\n      // This node may have been reused from a previous render, so we can't\n      // assume its return pointer is correct.\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      reappearLayoutEffects_complete(subtreeRoot);\n    }\n  }\n}\n\nfunction reappearLayoutEffects_complete(subtreeRoot: Fiber) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    // TODO (Offscreen) Check: flags & LayoutStatic\n    setCurrentDebugFiberInDEV(fiber);\n    try {\n      reappearLayoutEffectsOnFiber(fiber);\n    } catch (error) {\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n    resetCurrentDebugFiberInDEV();\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      // This node may have been reused from a previous render, so we can't\n      // assume its return pointer is correct.\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nexport function commitPassiveMountEffects(\n  root: FiberRoot,\n  finishedWork: Fiber,\n  committedLanes: Lanes,\n  committedTransitions: Array<Transition> | null,\n): void {\n  nextEffect = finishedWork;\n  commitPassiveMountEffects_begin(\n    finishedWork,\n    root,\n    committedLanes,\n    committedTransitions,\n  );\n}\n\nfunction commitPassiveMountEffects_begin(\n  subtreeRoot: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes,\n  committedTransitions: Array<Transition> | null,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const firstChild = fiber.child;\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      commitPassiveMountEffects_complete(\n        subtreeRoot,\n        root,\n        committedLanes,\n        committedTransitions,\n      );\n    }\n  }\n}\n\nfunction commitPassiveMountEffects_complete(\n  subtreeRoot: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes,\n  committedTransitions: Array<Transition> | null,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentDebugFiberInDEV(fiber);\n      try {\n        commitPassiveMountOnFiber(\n          root,\n          fiber,\n          committedLanes,\n          committedTransitions,\n        );\n      } catch (error) {\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n      resetCurrentDebugFiberInDEV();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveMountOnFiber(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n  committedLanes: Lanes,\n  committedTransitions: Array<Transition> | null,\n): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        startPassiveEffectTimer();\n        try {\n          commitHookEffectListMount(HookPassive | HookHasEffect, finishedWork);\n        } finally {\n          recordPassiveEffectDuration(finishedWork);\n        }\n      } else {\n        commitHookEffectListMount(HookPassive | HookHasEffect, finishedWork);\n      }\n      break;\n    }\n    case HostRoot: {\n      if (enableCache) {\n        let previousCache: Cache | null = null;\n        if (finishedWork.alternate !== null) {\n          previousCache = finishedWork.alternate.memoizedState.cache;\n        }\n        const nextCache = finishedWork.memoizedState.cache;\n        // Retain/release the root cache.\n        // Note that on initial mount, previousCache and nextCache will be the same\n        // and this retain won't occur. To counter this, we instead retain the HostRoot's\n        // initial cache when creating the root itself (see createFiberRoot() in\n        // ReactFiberRoot.js). Subsequent updates that change the cache are reflected\n        // here, such that previous/next caches are retained correctly.\n        if (nextCache !== previousCache) {\n          retainCache(nextCache);\n          if (previousCache != null) {\n            releaseCache(previousCache);\n          }\n        }\n      }\n\n      if (enableTransitionTracing) {\n        // Get the transitions that were initiatized during the render\n        // and add a start transition callback for each of them\n        const state = finishedWork.memoizedState;\n        // TODO Since it's a mutable field, this should live on the FiberRoot\n        if (state.transitions === null) {\n          state.transitions = new Set([]);\n        }\n        const pendingTransitions = state.transitions;\n        const pendingSuspenseBoundaries = state.pendingSuspenseBoundaries;\n\n        // Initial render\n        if (committedTransitions !== null) {\n          committedTransitions.forEach(transition => {\n            addTransitionStartCallbackToPendingTransition({\n              transitionName: transition.name,\n              startTime: transition.startTime,\n            });\n            pendingTransitions.add(transition);\n          });\n\n          if (\n            pendingSuspenseBoundaries === null ||\n            pendingSuspenseBoundaries.size === 0\n          ) {\n            pendingTransitions.forEach(transition => {\n              addTransitionCompleteCallbackToPendingTransition({\n                transitionName: transition.name,\n                startTime: transition.startTime,\n              });\n            });\n          }\n\n          clearTransitionsForLanes(finishedRoot, committedLanes);\n        }\n\n        // If there are no more pending suspense boundaries we\n        // clear the transitions because they are all complete.\n        if (\n          pendingSuspenseBoundaries === null ||\n          pendingSuspenseBoundaries.size === 0\n        ) {\n          state.transitions = null;\n        }\n      }\n      break;\n    }\n    case LegacyHiddenComponent:\n    case OffscreenComponent: {\n      if (enableCache) {\n        let previousCache: Cache | null = null;\n        if (\n          finishedWork.alternate !== null &&\n          finishedWork.alternate.memoizedState !== null &&\n          finishedWork.alternate.memoizedState.cachePool !== null\n        ) {\n          previousCache = finishedWork.alternate.memoizedState.cachePool.pool;\n        }\n        let nextCache: Cache | null = null;\n        if (\n          finishedWork.memoizedState !== null &&\n          finishedWork.memoizedState.cachePool !== null\n        ) {\n          nextCache = finishedWork.memoizedState.cachePool.pool;\n        }\n        // Retain/release the cache used for pending (suspended) nodes.\n        // Note that this is only reached in the non-suspended/visible case:\n        // when the content is suspended/hidden, the retain/release occurs\n        // via the parent Suspense component (see case above).\n        if (nextCache !== previousCache) {\n          if (nextCache != null) {\n            retainCache(nextCache);\n          }\n          if (previousCache != null) {\n            releaseCache(previousCache);\n          }\n        }\n      }\n\n      if (enableTransitionTracing) {\n        const isFallback = finishedWork.memoizedState;\n        const queue = (finishedWork.updateQueue: any);\n        const rootMemoizedState = finishedRoot.current.memoizedState;\n\n        if (queue !== null) {\n          // We have one instance of the pendingSuspenseBoundaries map.\n          // We only need one because we update it during the commit phase.\n          // We instantiate a new Map if we haven't already\n          if (rootMemoizedState.pendingSuspenseBoundaries === null) {\n            rootMemoizedState.pendingSuspenseBoundaries = new Map();\n          }\n\n          if (isFallback) {\n            const transitions = queue.transitions;\n            let prevTransitions = finishedWork.memoizedState.transitions;\n            // Add all the transitions saved in the update queue during\n            // the render phase (ie the transitions associated with this boundary)\n            // into the transitions set.\n            if (transitions !== null) {\n              if (prevTransitions === null) {\n                // We only have one instance of the transitions set\n                // because we update it only during the commit phase. We\n                // will create the set on a as needed basis in the commit phase\n                finishedWork.memoizedState.transitions = prevTransitions = new Set();\n              }\n\n              transitions.forEach(transition => {\n                prevTransitions.add(transition);\n              });\n            }\n          }\n        }\n\n        commitTransitionProgress(finishedRoot, finishedWork);\n\n        finishedWork.updateQueue = null;\n      }\n\n      break;\n    }\n    case CacheComponent: {\n      if (enableCache) {\n        let previousCache: Cache | null = null;\n        if (finishedWork.alternate !== null) {\n          previousCache = finishedWork.alternate.memoizedState.cache;\n        }\n        const nextCache = finishedWork.memoizedState.cache;\n        // Retain/release the cache. In theory the cache component\n        // could be \"borrowing\" a cache instance owned by some parent,\n        // in which case we could avoid retaining/releasing. But it\n        // is non-trivial to determine when that is the case, so we\n        // always retain/release.\n        if (nextCache !== previousCache) {\n          retainCache(nextCache);\n          if (previousCache != null) {\n            releaseCache(previousCache);\n          }\n        }\n      }\n      break;\n    }\n  }\n}\n\nexport function commitPassiveUnmountEffects(firstChild: Fiber): void {\n  nextEffect = firstChild;\n  commitPassiveUnmountEffects_begin();\n}\n\nfunction commitPassiveUnmountEffects_begin() {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const child = fiber.child;\n\n    if ((nextEffect.flags & ChildDeletion) !== NoFlags) {\n      const deletions = fiber.deletions;\n      if (deletions !== null) {\n        for (let i = 0; i < deletions.length; i++) {\n          const fiberToDelete = deletions[i];\n          nextEffect = fiberToDelete;\n          commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n            fiberToDelete,\n            fiber,\n          );\n        }\n\n        if (deletedTreeCleanUpLevel >= 1) {\n          // A fiber was deleted from this parent fiber, but it's still part of\n          // the previous (alternate) parent fiber's list of children. Because\n          // children are a linked list, an earlier sibling that's still alive\n          // will be connected to the deleted fiber via its `alternate`:\n          //\n          //   live fiber\n          //   --alternate--> previous live fiber\n          //   --sibling--> deleted fiber\n          //\n          // We can't disconnect `alternate` on nodes that haven't been deleted\n          // yet, but we can disconnect the `sibling` and `child` pointers.\n          const previousFiber = fiber.alternate;\n          if (previousFiber !== null) {\n            let detachedChild = previousFiber.child;\n            if (detachedChild !== null) {\n              previousFiber.child = null;\n              do {\n                const detachedSibling = detachedChild.sibling;\n                detachedChild.sibling = null;\n                detachedChild = detachedSibling;\n              } while (detachedChild !== null);\n            }\n          }\n        }\n\n        nextEffect = fiber;\n      }\n    }\n\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffects_complete();\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffects_complete() {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentDebugFiberInDEV(fiber);\n      commitPassiveUnmountOnFiber(fiber);\n      resetCurrentDebugFiberInDEV();\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveUnmountOnFiber(finishedWork: Fiber): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        startPassiveEffectTimer();\n        commitHookEffectListUnmount(\n          HookPassive | HookHasEffect,\n          finishedWork,\n          finishedWork.return,\n        );\n        recordPassiveEffectDuration(finishedWork);\n      } else {\n        commitHookEffectListUnmount(\n          HookPassive | HookHasEffect,\n          finishedWork,\n          finishedWork.return,\n        );\n      }\n      break;\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n  deletedSubtreeRoot: Fiber,\n  nearestMountedAncestor: Fiber | null,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    // Deletion effects fire in parent -> child order\n    // TODO: Check if fiber has a PassiveStatic flag\n    setCurrentDebugFiberInDEV(fiber);\n    commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);\n    resetCurrentDebugFiberInDEV();\n\n    const child = fiber.child;\n    // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we\n    // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)\n    if (child !== null) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffectsInsideOfDeletedTree_complete(\n        deletedSubtreeRoot,\n      );\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_complete(\n  deletedSubtreeRoot: Fiber,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const sibling = fiber.sibling;\n    const returnFiber = fiber.return;\n\n    if (deletedTreeCleanUpLevel >= 2) {\n      // Recursively traverse the entire deleted tree and clean up fiber fields.\n      // This is more aggressive than ideal, and the long term goal is to only\n      // have to detach the deleted tree at the root.\n      detachFiberAfterEffects(fiber);\n      if (fiber === deletedSubtreeRoot) {\n        nextEffect = null;\n        return;\n      }\n    } else {\n      // This is the default branch (level 0). We do not recursively clear all\n      // the fiber fields. Only the root of the deleted subtree.\n      if (fiber === deletedSubtreeRoot) {\n        detachFiberAfterEffects(fiber);\n        nextEffect = null;\n        return;\n      }\n    }\n\n    if (sibling !== null) {\n      sibling.return = returnFiber;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = returnFiber;\n  }\n}\n\nfunction commitPassiveUnmountInsideDeletedTreeOnFiber(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n): void {\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        current.mode & ProfileMode\n      ) {\n        startPassiveEffectTimer();\n        commitHookEffectListUnmount(\n          HookPassive,\n          current,\n          nearestMountedAncestor,\n        );\n        recordPassiveEffectDuration(current);\n      } else {\n        commitHookEffectListUnmount(\n          HookPassive,\n          current,\n          nearestMountedAncestor,\n        );\n      }\n      break;\n    }\n    // TODO: run passive unmount effects when unmounting a root.\n    // Because passive unmount effects are not currently run,\n    // the cache instance owned by the root will never be freed.\n    // When effects are run, the cache should be freed here:\n    // case HostRoot: {\n    //   if (enableCache) {\n    //     const cache = current.memoizedState.cache;\n    //     releaseCache(cache);\n    //   }\n    //   break;\n    // }\n    case LegacyHiddenComponent:\n    case OffscreenComponent: {\n      if (enableCache) {\n        if (\n          current.memoizedState !== null &&\n          current.memoizedState.cachePool !== null\n        ) {\n          const cache: Cache = current.memoizedState.cachePool.pool;\n          // Retain/release the cache used for pending (suspended) nodes.\n          // Note that this is only reached in the non-suspended/visible case:\n          // when the content is suspended/hidden, the retain/release occurs\n          // via the parent Suspense component (see case above).\n          if (cache != null) {\n            retainCache(cache);\n          }\n        }\n      }\n      break;\n    }\n    case CacheComponent: {\n      if (enableCache) {\n        const cache = current.memoizedState.cache;\n        releaseCache(cache);\n      }\n      break;\n    }\n  }\n}\n\n// TODO: Reuse reappearLayoutEffects traversal here?\nfunction invokeLayoutEffectMountInDEV(fiber: Fiber): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        try {\n          commitHookEffectListMount(HookLayout | HookHasEffect, fiber);\n        } catch (error) {\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        break;\n      }\n      case ClassComponent: {\n        const instance = fiber.stateNode;\n        try {\n          instance.componentDidMount();\n        } catch (error) {\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        break;\n      }\n    }\n  }\n}\n\nfunction invokePassiveEffectMountInDEV(fiber: Fiber): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        try {\n          commitHookEffectListMount(HookPassive | HookHasEffect, fiber);\n        } catch (error) {\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        break;\n      }\n    }\n  }\n}\n\nfunction invokeLayoutEffectUnmountInDEV(fiber: Fiber): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        try {\n          commitHookEffectListUnmount(\n            HookLayout | HookHasEffect,\n            fiber,\n            fiber.return,\n          );\n        } catch (error) {\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        break;\n      }\n      case ClassComponent: {\n        const instance = fiber.stateNode;\n        if (typeof instance.componentWillUnmount === 'function') {\n          safelyCallComponentWillUnmount(fiber, fiber.return, instance);\n        }\n        break;\n      }\n    }\n  }\n}\n\nfunction invokePassiveEffectUnmountInDEV(fiber: Fiber): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        try {\n          commitHookEffectListUnmount(\n            HookPassive | HookHasEffect,\n            fiber,\n            fiber.return,\n          );\n        } catch (error) {\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n      }\n    }\n  }\n}\n\nexport {\n  commitPlacement,\n  commitAttachRef,\n  commitDetachRef,\n  invokeLayoutEffectMountInDEV,\n  invokeLayoutEffectUnmountInDEV,\n  invokePassiveEffectMountInDEV,\n  invokePassiveEffectUnmountInDEV,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber.old';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nimport {warnsIfNotActing} from './ReactFiberHostConfig';\n\nconst {ReactCurrentActQueue} = ReactSharedInternals;\n\nexport function isLegacyActEnvironment(fiber: Fiber) {\n  if (__DEV__) {\n    // Legacy mode. We preserve the behavior of React 17's act. It assumes an\n    // act environment whenever `jest` is defined, but you can still turn off\n    // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly\n    // to false.\n\n    const isReactActEnvironmentGlobal =\n      // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\n      typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined'\n        ? IS_REACT_ACT_ENVIRONMENT\n        : undefined;\n\n    // $FlowExpectedError - Flow doesn't know about jest\n    const jestIsDefined = typeof jest !== 'undefined';\n    return (\n      warnsIfNotActing && jestIsDefined && isReactActEnvironmentGlobal !== false\n    );\n  }\n  return false;\n}\n\nexport function isConcurrentActEnvironment() {\n  if (__DEV__) {\n    const isReactActEnvironmentGlobal =\n      // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\n      typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined'\n        ? IS_REACT_ACT_ENVIRONMENT\n        : undefined;\n\n    if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {\n      // TODO: Include link to relevant documentation page.\n      console.error(\n        'The current testing environment is not configured to support ' +\n          'act(...)',\n      );\n    }\n    return isReactActEnvironmentGlobal;\n  }\n  return false;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Flags} from './ReactFiberFlags';\nimport type {FunctionComponentUpdateQueue} from './ReactFiberHooks.old';\nimport type {EventPriority} from './ReactEventPriorities.old';\nimport type {\n  PendingTransitionCallbacks,\n  TransitionObject,\n  Transition,\n} from './ReactFiberTracingMarkerComponent.old';\n\nimport {\n  warnAboutDeprecatedLifecycles,\n  replayFailedUnitOfWorkWithInvokeGuardedCallback,\n  enableCreateEventHandleAPI,\n  enableProfilerTimer,\n  enableProfilerCommitHooks,\n  enableProfilerNestedUpdatePhase,\n  enableProfilerNestedUpdateScheduledHook,\n  deferRenderPhaseUpdateToNextBatch,\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  disableSchedulerTimeoutInWorkLoop,\n  enableStrictEffects,\n  skipUnmountedBoundaries,\n  enableUpdaterTracking,\n  enableCache,\n  enableTransitionTracing,\n} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport is from 'shared/objectIs';\n\nimport {\n  // Aliased because `act` will override and push to an internal queue\n  scheduleCallback as Scheduler_scheduleCallback,\n  cancelCallback as Scheduler_cancelCallback,\n  shouldYield,\n  requestPaint,\n  now,\n  ImmediatePriority as ImmediateSchedulerPriority,\n  UserBlockingPriority as UserBlockingSchedulerPriority,\n  NormalPriority as NormalSchedulerPriority,\n  IdlePriority as IdleSchedulerPriority,\n} from './Scheduler';\nimport {\n  flushSyncCallbacks,\n  flushSyncCallbacksOnlyInLegacyMode,\n  scheduleSyncCallback,\n  scheduleLegacySyncCallback,\n} from './ReactFiberSyncTaskQueue.old';\nimport {\n  logCommitStarted,\n  logCommitStopped,\n  logLayoutEffectsStarted,\n  logLayoutEffectsStopped,\n  logPassiveEffectsStarted,\n  logPassiveEffectsStopped,\n  logRenderStarted,\n  logRenderStopped,\n} from './DebugTracing';\n\nimport {\n  resetAfterCommit,\n  scheduleTimeout,\n  cancelTimeout,\n  noTimeout,\n  afterActiveInstanceBlur,\n  getCurrentEventPriority,\n  supportsMicrotasks,\n  errorHydratingContainer,\n  scheduleMicrotask,\n} from './ReactFiberHostConfig';\n\nimport {\n  createWorkInProgress,\n  assignFiberPropertiesInDEV,\n} from './ReactFiber.old';\nimport {isRootDehydrated} from './ReactFiberShellHydration';\nimport {didSuspendOrErrorWhileHydratingDEV} from './ReactFiberHydrationContext.old';\nimport {NoMode, ProfileMode, ConcurrentMode} from './ReactTypeOfMode';\nimport {\n  HostRoot,\n  IndeterminateComponent,\n  ClassComponent,\n  SuspenseComponent,\n  SuspenseListComponent,\n  FunctionComponent,\n  ForwardRef,\n  MemoComponent,\n  SimpleMemoComponent,\n  Profiler,\n} from './ReactWorkTags';\nimport {LegacyRoot} from './ReactRootTags';\nimport {\n  NoFlags,\n  Incomplete,\n  StoreConsistency,\n  HostEffectMask,\n  ForceClientRender,\n  BeforeMutationMask,\n  MutationMask,\n  LayoutMask,\n  PassiveMask,\n  MountPassiveDev,\n  MountLayoutDev,\n} from './ReactFiberFlags';\nimport {\n  NoLanes,\n  NoLane,\n  SyncLane,\n  NoTimestamp,\n  claimNextTransitionLane,\n  claimNextRetryLane,\n  includesSomeLane,\n  isSubsetOfLanes,\n  mergeLanes,\n  removeLanes,\n  pickArbitraryLane,\n  includesNonIdleWork,\n  includesOnlyRetries,\n  includesOnlyTransitions,\n  includesBlockingLane,\n  includesExpiredLane,\n  getNextLanes,\n  markStarvedLanesAsExpired,\n  getLanesToRetrySynchronouslyOnError,\n  getMostRecentEventTime,\n  markRootUpdated,\n  markRootSuspended as markRootSuspended_dontCallThisOneDirectly,\n  markRootPinged,\n  markRootEntangled,\n  markRootFinished,\n  getHighestPriorityLane,\n  addFiberToLanesMap,\n  movePendingFibersToMemoized,\n  addTransitionToLanesMap,\n  getTransitionsForLanes,\n} from './ReactFiberLane.old';\nimport {\n  DiscreteEventPriority,\n  ContinuousEventPriority,\n  DefaultEventPriority,\n  IdleEventPriority,\n  getCurrentUpdatePriority,\n  setCurrentUpdatePriority,\n  lowerEventPriority,\n  lanesToEventPriority,\n} from './ReactEventPriorities.old';\nimport {requestCurrentTransition, NoTransition} from './ReactFiberTransition';\nimport {beginWork as originalBeginWork} from './ReactFiberBeginWork.old';\nimport {completeWork} from './ReactFiberCompleteWork.old';\nimport {unwindWork, unwindInterruptedWork} from './ReactFiberUnwindWork.old';\nimport {\n  throwException,\n  createRootErrorUpdate,\n  createClassErrorUpdate,\n} from './ReactFiberThrow.old';\nimport {\n  commitBeforeMutationEffects,\n  commitLayoutEffects,\n  commitMutationEffects,\n  commitPassiveEffectDurations,\n  commitPassiveMountEffects,\n  commitPassiveUnmountEffects,\n  invokeLayoutEffectMountInDEV,\n  invokePassiveEffectMountInDEV,\n  invokeLayoutEffectUnmountInDEV,\n  invokePassiveEffectUnmountInDEV,\n  reportUncaughtErrorInDEV,\n} from './ReactFiberCommitWork.old';\nimport {enqueueUpdate} from './ReactFiberClassUpdateQueue.old';\nimport {resetContextDependencies} from './ReactFiberNewContext.old';\nimport {\n  resetHooksAfterThrow,\n  ContextOnlyDispatcher,\n  getIsUpdatingOpaqueValueInRenderPhaseInDEV,\n} from './ReactFiberHooks.old';\nimport {\n  createCapturedValueAtFiber,\n  type CapturedValue,\n} from './ReactCapturedValue';\nimport {\n  push as pushToStack,\n  pop as popFromStack,\n  createCursor,\n} from './ReactFiberStack.old';\nimport {\n  enqueueConcurrentRenderForLane,\n  finishQueueingConcurrentUpdates,\n} from './ReactFiberConcurrentUpdates.old';\n\nimport {\n  markNestedUpdateScheduled,\n  recordCommitTime,\n  resetNestedUpdateFlag,\n  startProfilerTimer,\n  stopProfilerTimerIfRunningAndRecordDelta,\n  syncNestedUpdateFlag,\n} from './ReactProfilerTimer.old';\n\n// DEV stuff\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {\n  isRendering as ReactCurrentDebugFiberIsRenderingInDEV,\n  current as ReactCurrentFiberCurrent,\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {\n  invokeGuardedCallback,\n  hasCaughtError,\n  clearCaughtError,\n} from 'shared/ReactErrorUtils';\nimport {\n  isDevToolsPresent,\n  markCommitStarted,\n  markCommitStopped,\n  markComponentRenderStopped,\n  markComponentSuspended,\n  markComponentErrored,\n  markLayoutEffectsStarted,\n  markLayoutEffectsStopped,\n  markPassiveEffectsStarted,\n  markPassiveEffectsStopped,\n  markRenderStarted,\n  markRenderYielded,\n  markRenderStopped,\n  onCommitRoot as onCommitRootDevTools,\n  onPostCommitRoot as onPostCommitRootDevTools,\n} from './ReactFiberDevToolsHook.old';\nimport {onCommitRoot as onCommitRootTestSelector} from './ReactTestSelectors';\nimport {releaseCache} from './ReactFiberCacheComponent.old';\nimport {\n  isLegacyActEnvironment,\n  isConcurrentActEnvironment,\n} from './ReactFiberAct.old';\nimport {processTransitionCallbacks} from './ReactFiberTracingMarkerComponent.old';\n\nconst ceil = Math.ceil;\n\nconst {\n  ReactCurrentDispatcher,\n  ReactCurrentOwner,\n  ReactCurrentBatchConfig,\n  ReactCurrentActQueue,\n} = ReactSharedInternals;\n\ntype ExecutionContext = number;\n\nexport const NoContext = /*             */ 0b000;\nconst BatchedContext = /*               */ 0b001;\nconst RenderContext = /*                */ 0b010;\nconst CommitContext = /*                */ 0b100;\n\ntype RootExitStatus = 0 | 1 | 2 | 3 | 4 | 5 | 6;\nconst RootInProgress = 0;\nconst RootFatalErrored = 1;\nconst RootErrored = 2;\nconst RootSuspended = 3;\nconst RootSuspendedWithDelay = 4;\nconst RootCompleted = 5;\nconst RootDidNotComplete = 6;\n\n// Describes where we are in the React execution stack\nlet executionContext: ExecutionContext = NoContext;\n// The root we're working on\nlet workInProgressRoot: FiberRoot | null = null;\n// The fiber we're working on\nlet workInProgress: Fiber | null = null;\n// The lanes we're rendering\nlet workInProgressRootRenderLanes: Lanes = NoLanes;\n\n// Stack that allows components to change the render lanes for its subtree\n// This is a superset of the lanes we started working on at the root. The only\n// case where it's different from `workInProgressRootRenderLanes` is when we\n// enter a subtree that is hidden and needs to be unhidden: Suspense and\n// Offscreen component.\n//\n// Most things in the work loop should deal with workInProgressRootRenderLanes.\n// Most things in begin/complete phases should deal with subtreeRenderLanes.\nexport let subtreeRenderLanes: Lanes = NoLanes;\nconst subtreeRenderLanesCursor: StackCursor<Lanes> = createCursor(NoLanes);\n\n// Whether to root completed, errored, suspended, etc.\nlet workInProgressRootExitStatus: RootExitStatus = RootInProgress;\n// A fatal error, if one is thrown\nlet workInProgressRootFatalError: mixed = null;\n// \"Included\" lanes refer to lanes that were worked on during this render. It's\n// slightly different than `renderLanes` because `renderLanes` can change as you\n// enter and exit an Offscreen tree. This value is the combination of all render\n// lanes for the entire render phase.\nlet workInProgressRootIncludedLanes: Lanes = NoLanes;\n// The work left over by components that were visited during this render. Only\n// includes unprocessed updates, not work in bailed out children.\nlet workInProgressRootSkippedLanes: Lanes = NoLanes;\n// Lanes that were updated (in an interleaved event) during this render.\nlet workInProgressRootInterleavedUpdatedLanes: Lanes = NoLanes;\n// Lanes that were updated during the render phase (*not* an interleaved event).\nlet workInProgressRootRenderPhaseUpdatedLanes: Lanes = NoLanes;\n// Lanes that were pinged (in an interleaved event) during this render.\nlet workInProgressRootPingedLanes: Lanes = NoLanes;\n// Errors that are thrown during the render phase.\nlet workInProgressRootConcurrentErrors: Array<\n  CapturedValue<mixed>,\n> | null = null;\n// These are errors that we recovered from without surfacing them to the UI.\n// We will log them once the tree commits.\nlet workInProgressRootRecoverableErrors: Array<\n  CapturedValue<mixed>,\n> | null = null;\n\n// The most recent time we committed a fallback. This lets us ensure a train\n// model where we don't commit new loading states in too quick succession.\nlet globalMostRecentFallbackTime: number = 0;\nconst FALLBACK_THROTTLE_MS: number = 500;\n\n// The absolute time for when we should start giving up on rendering\n// more and prefer CPU suspense heuristics instead.\nlet workInProgressRootRenderTargetTime: number = Infinity;\n// How long a render is supposed to take before we start following CPU\n// suspense heuristics and opt out of rendering more content.\nconst RENDER_TIMEOUT_MS = 500;\n\nlet workInProgressTransitions: Array<Transition> | null = null;\nexport function getWorkInProgressTransitions() {\n  return workInProgressTransitions;\n}\n\nlet currentPendingTransitionCallbacks: PendingTransitionCallbacks | null = null;\n\nexport function addTransitionStartCallbackToPendingTransition(\n  transition: TransitionObject,\n) {\n  if (enableTransitionTracing) {\n    if (currentPendingTransitionCallbacks === null) {\n      currentPendingTransitionCallbacks = {\n        transitionStart: [],\n        transitionComplete: null,\n      };\n    }\n\n    if (currentPendingTransitionCallbacks.transitionStart === null) {\n      currentPendingTransitionCallbacks.transitionStart = [];\n    }\n\n    currentPendingTransitionCallbacks.transitionStart.push(transition);\n  }\n}\n\nexport function addTransitionCompleteCallbackToPendingTransition(\n  transition: TransitionObject,\n) {\n  if (enableTransitionTracing) {\n    if (currentPendingTransitionCallbacks === null) {\n      currentPendingTransitionCallbacks = {\n        transitionStart: null,\n        transitionComplete: [],\n      };\n    }\n\n    if (currentPendingTransitionCallbacks.transitionComplete === null) {\n      currentPendingTransitionCallbacks.transitionComplete = [];\n    }\n\n    currentPendingTransitionCallbacks.transitionComplete.push(transition);\n  }\n}\n\nfunction resetRenderTimer() {\n  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n}\n\nexport function getRenderTargetTime(): number {\n  return workInProgressRootRenderTargetTime;\n}\n\nlet hasUncaughtError = false;\nlet firstUncaughtError = null;\nlet legacyErrorBoundariesThatAlreadyFailed: Set<mixed> | null = null;\n\n// Only used when enableProfilerNestedUpdateScheduledHook is true;\n// to track which root is currently committing layout effects.\nlet rootCommittingMutationOrLayoutEffects: FiberRoot | null = null;\n\nlet rootDoesHavePassiveEffects: boolean = false;\nlet rootWithPendingPassiveEffects: FiberRoot | null = null;\nlet pendingPassiveEffectsLanes: Lanes = NoLanes;\nlet pendingPassiveProfilerEffects: Array<Fiber> = [];\nlet pendingPassiveEffectsRemainingLanes: Lanes = NoLanes;\nlet pendingPassiveTransitions: Array<Transition> | null = null;\n\n// Use these to prevent an infinite loop of nested updates\nconst NESTED_UPDATE_LIMIT = 50;\nlet nestedUpdateCount: number = 0;\nlet rootWithNestedUpdates: FiberRoot | null = null;\nlet isFlushingPassiveEffects = false;\nlet didScheduleUpdateDuringPassiveEffects = false;\n\nconst NESTED_PASSIVE_UPDATE_LIMIT = 50;\nlet nestedPassiveUpdateCount: number = 0;\nlet rootWithPassiveNestedUpdates: FiberRoot | null = null;\n\n// If two updates are scheduled within the same event, we should treat their\n// event times as simultaneous, even if the actual clock time has advanced\n// between the first and second call.\nlet currentEventTime: number = NoTimestamp;\nlet currentEventTransitionLane: Lanes = NoLanes;\n\nlet isRunningInsertionEffect = false;\n\nexport function getWorkInProgressRoot(): FiberRoot | null {\n  return workInProgressRoot;\n}\n\nexport function requestEventTime() {\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    // We're inside React, so it's fine to read the actual time.\n    return now();\n  }\n  // We're not inside React, so we may be in the middle of a browser event.\n  if (currentEventTime !== NoTimestamp) {\n    // Use the same start time for all updates until we enter React again.\n    return currentEventTime;\n  }\n  // This is the first update since React yielded. Compute a new start time.\n  currentEventTime = now();\n  return currentEventTime;\n}\n\nexport function getCurrentTime() {\n  return now();\n}\n\nexport function requestUpdateLane(fiber: Fiber): Lane {\n  // Special cases\n  const mode = fiber.mode;\n  if ((mode & ConcurrentMode) === NoMode) {\n    return (SyncLane: Lane);\n  } else if (\n    !deferRenderPhaseUpdateToNextBatch &&\n    (executionContext & RenderContext) !== NoContext &&\n    workInProgressRootRenderLanes !== NoLanes\n  ) {\n    // This is a render phase update. These are not officially supported. The\n    // old behavior is to give this the same \"thread\" (lanes) as\n    // whatever is currently rendering. So if you call `setState` on a component\n    // that happens later in the same render, it will flush. Ideally, we want to\n    // remove the special case and treat them as if they came from an\n    // interleaved event. Regardless, this pattern is not officially supported.\n    // This behavior is only a fallback. The flag only exists until we can roll\n    // out the setState warning, since existing code might accidentally rely on\n    // the current behavior.\n    return pickArbitraryLane(workInProgressRootRenderLanes);\n  }\n\n  const isTransition = requestCurrentTransition() !== NoTransition;\n  if (isTransition) {\n    if (__DEV__ && ReactCurrentBatchConfig.transition !== null) {\n      const transition = ReactCurrentBatchConfig.transition;\n      if (!transition._updatedFibers) {\n        transition._updatedFibers = new Set();\n      }\n\n      transition._updatedFibers.add(fiber);\n    }\n    // The algorithm for assigning an update to a lane should be stable for all\n    // updates at the same priority within the same event. To do this, the\n    // inputs to the algorithm must be the same.\n    //\n    // The trick we use is to cache the first of each of these inputs within an\n    // event. Then reset the cached values once we can be sure the event is\n    // over. Our heuristic for that is whenever we enter a concurrent work loop.\n    if (currentEventTransitionLane === NoLane) {\n      // All transitions within the same event are assigned the same lane.\n      currentEventTransitionLane = claimNextTransitionLane();\n    }\n    return currentEventTransitionLane;\n  }\n\n  // Updates originating inside certain React methods, like flushSync, have\n  // their priority set by tracking it with a context variable.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n  const updateLane: Lane = (getCurrentUpdatePriority(): any);\n  if (updateLane !== NoLane) {\n    return updateLane;\n  }\n\n  // This update originated outside React. Ask the host environment for an\n  // appropriate priority, based on the type of event.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n  const eventLane: Lane = (getCurrentEventPriority(): any);\n  return eventLane;\n}\n\nfunction requestRetryLane(fiber: Fiber) {\n  // This is a fork of `requestUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n\n  // Special cases\n  const mode = fiber.mode;\n  if ((mode & ConcurrentMode) === NoMode) {\n    return (SyncLane: Lane);\n  }\n\n  return claimNextRetryLane();\n}\n\nexport function scheduleUpdateOnFiber(\n  root: FiberRoot,\n  fiber: Fiber,\n  lane: Lane,\n  eventTime: number,\n) {\n  checkForNestedUpdates();\n\n  if (__DEV__) {\n    if (isRunningInsertionEffect) {\n      console.error('useInsertionEffect must not schedule updates.');\n    }\n  }\n\n  if (__DEV__) {\n    if (isFlushingPassiveEffects) {\n      didScheduleUpdateDuringPassiveEffects = true;\n    }\n  }\n\n  // Mark that the root has a pending update.\n  markRootUpdated(root, lane, eventTime);\n\n  if (\n    (executionContext & RenderContext) !== NoLanes &&\n    root === workInProgressRoot\n  ) {\n    // This update was dispatched during the render phase. This is a mistake\n    // if the update originates from user space (with the exception of local\n    // hook updates, which are handled differently and don't reach this\n    // function), but there are some internal React features that use this as\n    // an implementation detail, like selective hydration.\n    warnAboutRenderPhaseUpdatesInDEV(fiber);\n\n    // Track lanes that were updated during the render phase\n    workInProgressRootRenderPhaseUpdatedLanes = mergeLanes(\n      workInProgressRootRenderPhaseUpdatedLanes,\n      lane,\n    );\n  } else {\n    // This is a normal update, scheduled from outside the render phase. For\n    // example, during an input event.\n    if (enableUpdaterTracking) {\n      if (isDevToolsPresent) {\n        addFiberToLanesMap(root, fiber, lane);\n      }\n    }\n\n    warnIfUpdatesNotWrappedWithActDEV(fiber);\n\n    if (enableProfilerTimer && enableProfilerNestedUpdateScheduledHook) {\n      if (\n        (executionContext & CommitContext) !== NoContext &&\n        root === rootCommittingMutationOrLayoutEffects\n      ) {\n        if (fiber.mode & ProfileMode) {\n          let current = fiber;\n          while (current !== null) {\n            if (current.tag === Profiler) {\n              const {id, onNestedUpdateScheduled} = current.memoizedProps;\n              if (typeof onNestedUpdateScheduled === 'function') {\n                onNestedUpdateScheduled(id);\n              }\n            }\n            current = current.return;\n          }\n        }\n      }\n    }\n\n    if (enableTransitionTracing) {\n      const transition = ReactCurrentBatchConfig.transition;\n      if (transition !== null) {\n        if (transition.startTime === -1) {\n          transition.startTime = now();\n        }\n\n        addTransitionToLanesMap(root, transition, lane);\n      }\n    }\n\n    if (root === workInProgressRoot) {\n      // Received an update to a tree that's in the middle of rendering. Mark\n      // that there was an interleaved update work on this root. Unless the\n      // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render\n      // phase update. In that case, we don't treat render phase updates as if\n      // they were interleaved, for backwards compat reasons.\n      if (\n        deferRenderPhaseUpdateToNextBatch ||\n        (executionContext & RenderContext) === NoContext\n      ) {\n        workInProgressRootInterleavedUpdatedLanes = mergeLanes(\n          workInProgressRootInterleavedUpdatedLanes,\n          lane,\n        );\n      }\n      if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n        // The root already suspended with a delay, which means this render\n        // definitely won't finish. Since we have a new update, let's mark it as\n        // suspended now, right before marking the incoming update. This has the\n        // effect of interrupting the current render and switching to the update.\n        // TODO: Make sure this doesn't override pings that happen while we've\n        // already started rendering.\n        markRootSuspended(root, workInProgressRootRenderLanes);\n      }\n    }\n\n    ensureRootIsScheduled(root, eventTime);\n    if (\n      lane === SyncLane &&\n      executionContext === NoContext &&\n      (fiber.mode & ConcurrentMode) === NoMode &&\n      // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n      !(__DEV__ && ReactCurrentActQueue.isBatchingLegacy)\n    ) {\n      // Flush the synchronous work now, unless we're already working or inside\n      // a batch. This is intentionally inside scheduleUpdateOnFiber instead of\n      // scheduleCallbackForFiber to preserve the ability to schedule a callback\n      // without immediately flushing it. We only do this for user-initiated\n      // updates, to preserve historical behavior of legacy mode.\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n}\n\nexport function scheduleInitialHydrationOnRoot(\n  root: FiberRoot,\n  lane: Lane,\n  eventTime: number,\n) {\n  // This is a special fork of scheduleUpdateOnFiber that is only used to\n  // schedule the initial hydration of a root that has just been created. Most\n  // of the stuff in scheduleUpdateOnFiber can be skipped.\n  //\n  // The main reason for this separate path, though, is to distinguish the\n  // initial children from subsequent updates. In fully client-rendered roots\n  // (createRoot instead of hydrateRoot), all top-level renders are modeled as\n  // updates, but hydration roots are special because the initial render must\n  // match what was rendered on the server.\n  const current = root.current;\n  current.lanes = lane;\n  markRootUpdated(root, lane, eventTime);\n  ensureRootIsScheduled(root, eventTime);\n}\n\nexport function isUnsafeClassRenderPhaseUpdate(fiber: Fiber) {\n  // Check if this is a render phase update. Only called by class components,\n  // which special (deprecated) behavior for UNSAFE_componentWillReceive props.\n  return (\n    // TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We\n    // decided not to enable it.\n    (!deferRenderPhaseUpdateToNextBatch ||\n      (fiber.mode & ConcurrentMode) === NoMode) &&\n    (executionContext & RenderContext) !== NoContext\n  );\n}\n\n// Use this function to schedule a task for a root. There's only one task per\n// root; if a task was already scheduled, we'll check to make sure the priority\n// of the existing task is the same as the priority of the next level that the\n// root has work on. This function is called on every update, and right before\n// exiting a task.\nfunction ensureRootIsScheduled(root: FiberRoot, currentTime: number) {\n  const existingCallbackNode = root.callbackNode;\n\n  // Check if any lanes are being starved by other work. If so, mark them as\n  // expired so we know to work on those next.\n  markStarvedLanesAsExpired(root, currentTime);\n\n  // Determine the next lanes to work on, and their priority.\n  const nextLanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes,\n  );\n\n  if (nextLanes === NoLanes) {\n    // Special case: There's nothing to work on.\n    if (existingCallbackNode !== null) {\n      cancelCallback(existingCallbackNode);\n    }\n    root.callbackNode = null;\n    root.callbackPriority = NoLane;\n    return;\n  }\n\n  // We use the highest priority lane to represent the priority of the callback.\n  const newCallbackPriority = getHighestPriorityLane(nextLanes);\n\n  // Check if there's an existing task. We may be able to reuse it.\n  const existingCallbackPriority = root.callbackPriority;\n  if (\n    existingCallbackPriority === newCallbackPriority &&\n    // Special case related to `act`. If the currently scheduled task is a\n    // Scheduler task, rather than an `act` task, cancel it and re-scheduled\n    // on the `act` queue.\n    !(\n      __DEV__ &&\n      ReactCurrentActQueue.current !== null &&\n      existingCallbackNode !== fakeActCallbackNode\n    )\n  ) {\n    if (__DEV__) {\n      // If we're going to re-use an existing task, it needs to exist.\n      // Assume that discrete update microtasks are non-cancellable and null.\n      // TODO: Temporary until we confirm this warning is not fired.\n      if (\n        existingCallbackNode == null &&\n        existingCallbackPriority !== SyncLane\n      ) {\n        console.error(\n          'Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.',\n        );\n      }\n    }\n    // The priority hasn't changed. We can reuse the existing task. Exit.\n    return;\n  }\n\n  if (existingCallbackNode != null) {\n    // Cancel the existing callback. We'll schedule a new one below.\n    cancelCallback(existingCallbackNode);\n  }\n\n  // Schedule a new callback.\n  let newCallbackNode;\n  if (newCallbackPriority === SyncLane) {\n    // Special case: Sync React callbacks are scheduled on a special\n    // internal queue\n    if (root.tag === LegacyRoot) {\n      if (__DEV__ && ReactCurrentActQueue.isBatchingLegacy !== null) {\n        ReactCurrentActQueue.didScheduleLegacyUpdate = true;\n      }\n      scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\n    } else {\n      scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n    }\n    if (supportsMicrotasks) {\n      // Flush the queue in a microtask.\n      if (__DEV__ && ReactCurrentActQueue.current !== null) {\n        // Inside `act`, use our internal `act` queue so that these get flushed\n        // at the end of the current scope even when using the sync version\n        // of `act`.\n        ReactCurrentActQueue.current.push(flushSyncCallbacks);\n      } else {\n        scheduleMicrotask(() => {\n          // In Safari, appending an iframe forces microtasks to run.\n          // https://github.com/facebook/react/issues/22459\n          // We don't support running callbacks in the middle of render\n          // or commit so we need to check against that.\n          if (\n            (executionContext & (RenderContext | CommitContext)) ===\n            NoContext\n          ) {\n            // Note that this would still prematurely flush the callbacks\n            // if this happens outside render or commit phase (e.g. in an event).\n            flushSyncCallbacks();\n          }\n        });\n      }\n    } else {\n      // Flush the queue in an Immediate task.\n      scheduleCallback(ImmediateSchedulerPriority, flushSyncCallbacks);\n    }\n    newCallbackNode = null;\n  } else {\n    let schedulerPriorityLevel;\n    switch (lanesToEventPriority(nextLanes)) {\n      case DiscreteEventPriority:\n        schedulerPriorityLevel = ImmediateSchedulerPriority;\n        break;\n      case ContinuousEventPriority:\n        schedulerPriorityLevel = UserBlockingSchedulerPriority;\n        break;\n      case DefaultEventPriority:\n        schedulerPriorityLevel = NormalSchedulerPriority;\n        break;\n      case IdleEventPriority:\n        schedulerPriorityLevel = IdleSchedulerPriority;\n        break;\n      default:\n        schedulerPriorityLevel = NormalSchedulerPriority;\n        break;\n    }\n    newCallbackNode = scheduleCallback(\n      schedulerPriorityLevel,\n      performConcurrentWorkOnRoot.bind(null, root),\n    );\n  }\n\n  root.callbackPriority = newCallbackPriority;\n  root.callbackNode = newCallbackNode;\n}\n\n// This is the entry point for every concurrent task, i.e. anything that\n// goes through Scheduler.\nfunction performConcurrentWorkOnRoot(root, didTimeout) {\n  if (enableProfilerTimer && enableProfilerNestedUpdatePhase) {\n    resetNestedUpdateFlag();\n  }\n\n  // Since we know we're in a React event, we can clear the current\n  // event time. The next update will compute a new event time.\n  currentEventTime = NoTimestamp;\n  currentEventTransitionLane = NoLanes;\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Should not already be working.');\n  }\n\n  // Flush any pending passive effects before deciding which lanes to work on,\n  // in case they schedule additional work.\n  const originalCallbackNode = root.callbackNode;\n  const didFlushPassiveEffects = flushPassiveEffects();\n  if (didFlushPassiveEffects) {\n    // Something in the passive effect phase may have canceled the current task.\n    // Check if the task node for this root was changed.\n    if (root.callbackNode !== originalCallbackNode) {\n      // The current task was canceled. Exit. We don't need to call\n      // `ensureRootIsScheduled` because the check above implies either that\n      // there's a new task, or that there's no remaining work on this root.\n      return null;\n    } else {\n      // Current task was not canceled. Continue.\n    }\n  }\n\n  // Determine the next lanes to work on, using the fields stored\n  // on the root.\n  let lanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes,\n  );\n  if (lanes === NoLanes) {\n    // Defensive coding. This is never expected to happen.\n    return null;\n  }\n\n  // We disable time-slicing in some cases: if the work has been CPU-bound\n  // for too long (\"expired\" work, to prevent starvation), or we're in\n  // sync-updates-by-default mode.\n  // TODO: We only check `didTimeout` defensively, to account for a Scheduler\n  // bug we're still investigating. Once the bug in Scheduler is fixed,\n  // we can remove this, since we track expiration ourselves.\n  const shouldTimeSlice =\n    !includesBlockingLane(root, lanes) &&\n    !includesExpiredLane(root, lanes) &&\n    (disableSchedulerTimeoutInWorkLoop || !didTimeout);\n  let exitStatus = shouldTimeSlice\n    ? renderRootConcurrent(root, lanes)\n    : renderRootSync(root, lanes);\n  if (exitStatus !== RootInProgress) {\n    if (exitStatus === RootErrored) {\n      // If something threw an error, try rendering one more time. We'll\n      // render synchronously to block concurrent data mutations, and we'll\n      // includes all pending updates are included. If it still fails after\n      // the second attempt, we'll give up and commit the resulting tree.\n      const errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n      if (errorRetryLanes !== NoLanes) {\n        lanes = errorRetryLanes;\n        exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n      }\n    }\n    if (exitStatus === RootFatalErrored) {\n      const fatalError = workInProgressRootFatalError;\n      prepareFreshStack(root, NoLanes);\n      markRootSuspended(root, lanes);\n      ensureRootIsScheduled(root, now());\n      throw fatalError;\n    }\n\n    if (exitStatus === RootDidNotComplete) {\n      // The render unwound without completing the tree. This happens in special\n      // cases where need to exit the current render without producing a\n      // consistent tree or committing.\n      //\n      // This should only happen during a concurrent render, not a discrete or\n      // synchronous update. We should have already checked for this when we\n      // unwound the stack.\n      markRootSuspended(root, lanes);\n    } else {\n      // The render completed.\n\n      // Check if this render may have yielded to a concurrent event, and if so,\n      // confirm that any newly rendered stores are consistent.\n      // TODO: It's possible that even a concurrent render may never have yielded\n      // to the main thread, if it was fast enough, or if it expired. We could\n      // skip the consistency check in that case, too.\n      const renderWasConcurrent = !includesBlockingLane(root, lanes);\n      const finishedWork: Fiber = (root.current.alternate: any);\n      if (\n        renderWasConcurrent &&\n        !isRenderConsistentWithExternalStores(finishedWork)\n      ) {\n        // A store was mutated in an interleaved event. Render again,\n        // synchronously, to block further mutations.\n        exitStatus = renderRootSync(root, lanes);\n\n        // We need to check again if something threw\n        if (exitStatus === RootErrored) {\n          const errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n          if (errorRetryLanes !== NoLanes) {\n            lanes = errorRetryLanes;\n            exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n            // We assume the tree is now consistent because we didn't yield to any\n            // concurrent events.\n          }\n        }\n        if (exitStatus === RootFatalErrored) {\n          const fatalError = workInProgressRootFatalError;\n          prepareFreshStack(root, NoLanes);\n          markRootSuspended(root, lanes);\n          ensureRootIsScheduled(root, now());\n          throw fatalError;\n        }\n      }\n\n      // We now have a consistent tree. The next step is either to commit it,\n      // or, if something suspended, wait to commit it after a timeout.\n      root.finishedWork = finishedWork;\n      root.finishedLanes = lanes;\n      finishConcurrentRender(root, exitStatus, lanes);\n    }\n  }\n\n  ensureRootIsScheduled(root, now());\n  if (root.callbackNode === originalCallbackNode) {\n    // The task node scheduled for this root is the same one that's\n    // currently executed. Need to return a continuation.\n    return performConcurrentWorkOnRoot.bind(null, root);\n  }\n  return null;\n}\n\nfunction recoverFromConcurrentError(root, errorRetryLanes) {\n  // If an error occurred during hydration, discard server response and fall\n  // back to client side render.\n\n  // Before rendering again, save the errors from the previous attempt.\n  const errorsFromFirstAttempt = workInProgressRootConcurrentErrors;\n\n  if (isRootDehydrated(root)) {\n    // The shell failed to hydrate. Set a flag to force a client rendering\n    // during the next attempt. To do this, we call prepareFreshStack now\n    // to create the root work-in-progress fiber. This is a bit weird in terms\n    // of factoring, because it relies on renderRootSync not calling\n    // prepareFreshStack again in the call below, which happens because the\n    // root and lanes haven't changed.\n    //\n    // TODO: I think what we should do is set ForceClientRender inside\n    // throwException, like we do for nested Suspense boundaries. The reason\n    // it's here instead is so we can switch to the synchronous work loop, too.\n    // Something to consider for a future refactor.\n    const rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);\n    rootWorkInProgress.flags |= ForceClientRender;\n    if (__DEV__) {\n      errorHydratingContainer(root.containerInfo);\n    }\n  }\n\n  const exitStatus = renderRootSync(root, errorRetryLanes);\n  if (exitStatus !== RootErrored) {\n    // Successfully finished rendering on retry\n\n    // The errors from the failed first attempt have been recovered. Add\n    // them to the collection of recoverable errors. We'll log them in the\n    // commit phase.\n    const errorsFromSecondAttempt = workInProgressRootRecoverableErrors;\n    workInProgressRootRecoverableErrors = errorsFromFirstAttempt;\n    // The errors from the second attempt should be queued after the errors\n    // from the first attempt, to preserve the causal sequence.\n    if (errorsFromSecondAttempt !== null) {\n      queueRecoverableErrors(errorsFromSecondAttempt);\n    }\n  } else {\n    // The UI failed to recover.\n  }\n  return exitStatus;\n}\n\nexport function queueRecoverableErrors(errors: Array<CapturedValue<mixed>>) {\n  if (workInProgressRootRecoverableErrors === null) {\n    workInProgressRootRecoverableErrors = errors;\n  } else {\n    workInProgressRootRecoverableErrors.push.apply(\n      workInProgressRootRecoverableErrors,\n      errors,\n    );\n  }\n}\n\nfunction finishConcurrentRender(root, exitStatus, lanes) {\n  switch (exitStatus) {\n    case RootInProgress:\n    case RootFatalErrored: {\n      throw new Error('Root did not complete. This is a bug in React.');\n    }\n    // Flow knows about invariant, so it complains if I add a break\n    // statement, but eslint doesn't know about invariant, so it complains\n    // if I do. eslint-disable-next-line no-fallthrough\n    case RootErrored: {\n      // We should have already attempted to retry this tree. If we reached\n      // this point, it errored again. Commit it.\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions,\n      );\n      break;\n    }\n    case RootSuspended: {\n      markRootSuspended(root, lanes);\n\n      // We have an acceptable loading state. We need to figure out if we\n      // should immediately commit it or wait a bit.\n\n      if (\n        includesOnlyRetries(lanes) &&\n        // do not delay if we're inside an act() scope\n        !shouldForceFlushFallbacksInDEV()\n      ) {\n        // This render only included retries, no updates. Throttle committing\n        // retries so that we don't show too many loading states too quickly.\n        const msUntilTimeout =\n          globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();\n        // Don't bother with a very short suspense time.\n        if (msUntilTimeout > 10) {\n          const nextLanes = getNextLanes(root, NoLanes);\n          if (nextLanes !== NoLanes) {\n            // There's additional work on this root.\n            break;\n          }\n          const suspendedLanes = root.suspendedLanes;\n          if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n            // We should prefer to render the fallback of at the last\n            // suspended level. Ping the last suspended level to try\n            // rendering it again.\n            // FIXME: What if the suspended lanes are Idle? Should not restart.\n            const eventTime = requestEventTime();\n            markRootPinged(root, suspendedLanes, eventTime);\n            break;\n          }\n\n          // The render is suspended, it hasn't timed out, and there's no\n          // lower priority work to do. Instead of committing the fallback\n          // immediately, wait for more data to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(\n              null,\n              root,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions,\n            ),\n            msUntilTimeout,\n          );\n          break;\n        }\n      }\n      // The work expired. Commit immediately.\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions,\n      );\n      break;\n    }\n    case RootSuspendedWithDelay: {\n      markRootSuspended(root, lanes);\n\n      if (includesOnlyTransitions(lanes)) {\n        // This is a transition, so we should exit without committing a\n        // placeholder and without scheduling a timeout. Delay indefinitely\n        // until we receive more data.\n        break;\n      }\n\n      if (!shouldForceFlushFallbacksInDEV()) {\n        // This is not a transition, but we did trigger an avoided state.\n        // Schedule a placeholder to display after a short delay, using the Just\n        // Noticeable Difference.\n        // TODO: Is the JND optimization worth the added complexity? If this is\n        // the only reason we track the event time, then probably not.\n        // Consider removing.\n\n        const mostRecentEventTime = getMostRecentEventTime(root, lanes);\n        const eventTimeMs = mostRecentEventTime;\n        const timeElapsedMs = now() - eventTimeMs;\n        const msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;\n\n        // Don't bother with a very short suspense time.\n        if (msUntilTimeout > 10) {\n          // Instead of committing the fallback immediately, wait for more data\n          // to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(\n              null,\n              root,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions,\n            ),\n            msUntilTimeout,\n          );\n          break;\n        }\n      }\n\n      // Commit the placeholder.\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions,\n      );\n      break;\n    }\n    case RootCompleted: {\n      // The work completed. Ready to commit.\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions,\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unknown root exit status.');\n    }\n  }\n}\n\nfunction isRenderConsistentWithExternalStores(finishedWork: Fiber): boolean {\n  // Search the rendered tree for external store reads, and check whether the\n  // stores were mutated in a concurrent event. Intentionally using an iterative\n  // loop instead of recursion so we can exit early.\n  let node: Fiber = finishedWork;\n  while (true) {\n    if (node.flags & StoreConsistency) {\n      const updateQueue: FunctionComponentUpdateQueue | null = (node.updateQueue: any);\n      if (updateQueue !== null) {\n        const checks = updateQueue.stores;\n        if (checks !== null) {\n          for (let i = 0; i < checks.length; i++) {\n            const check = checks[i];\n            const getSnapshot = check.getSnapshot;\n            const renderedValue = check.value;\n            try {\n              if (!is(getSnapshot(), renderedValue)) {\n                // Found an inconsistent store.\n                return false;\n              }\n            } catch (error) {\n              // If `getSnapshot` throws, return `false`. This will schedule\n              // a re-render, and the error will be rethrown during render.\n              return false;\n            }\n          }\n        }\n      }\n    }\n    const child = node.child;\n    if (node.subtreeFlags & StoreConsistency && child !== null) {\n      child.return = node;\n      node = child;\n      continue;\n    }\n    if (node === finishedWork) {\n      return true;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === finishedWork) {\n        return true;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  // Flow doesn't know this is unreachable, but eslint does\n  // eslint-disable-next-line no-unreachable\n  return true;\n}\n\nfunction markRootSuspended(root, suspendedLanes) {\n  // When suspending, we should always exclude lanes that were pinged or (more\n  // rarely, since we try to avoid it) updated during the render phase.\n  // TODO: Lol maybe there's a better way to factor this besides this\n  // obnoxiously named function :)\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n  suspendedLanes = removeLanes(\n    suspendedLanes,\n    workInProgressRootInterleavedUpdatedLanes,\n  );\n  markRootSuspended_dontCallThisOneDirectly(root, suspendedLanes);\n}\n\n// This is the entry point for synchronous tasks that don't go\n// through Scheduler\nfunction performSyncWorkOnRoot(root) {\n  if (enableProfilerTimer && enableProfilerNestedUpdatePhase) {\n    syncNestedUpdateFlag();\n  }\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Should not already be working.');\n  }\n\n  flushPassiveEffects();\n\n  let lanes = getNextLanes(root, NoLanes);\n  if (!includesSomeLane(lanes, SyncLane)) {\n    // There's no remaining sync work left.\n    ensureRootIsScheduled(root, now());\n    return null;\n  }\n\n  let exitStatus = renderRootSync(root, lanes);\n  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n    // If something threw an error, try rendering one more time. We'll render\n    // synchronously to block concurrent data mutations, and we'll includes\n    // all pending updates are included. If it still fails after the second\n    // attempt, we'll give up and commit the resulting tree.\n    const errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n    if (errorRetryLanes !== NoLanes) {\n      lanes = errorRetryLanes;\n      exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n    }\n  }\n\n  if (exitStatus === RootFatalErrored) {\n    const fatalError = workInProgressRootFatalError;\n    prepareFreshStack(root, NoLanes);\n    markRootSuspended(root, lanes);\n    ensureRootIsScheduled(root, now());\n    throw fatalError;\n  }\n\n  if (exitStatus === RootDidNotComplete) {\n    throw new Error('Root did not complete. This is a bug in React.');\n  }\n\n  // We now have a consistent tree. Because this is a sync render, we\n  // will commit it even if something suspended.\n  const finishedWork: Fiber = (root.current.alternate: any);\n  root.finishedWork = finishedWork;\n  root.finishedLanes = lanes;\n  commitRoot(\n    root,\n    workInProgressRootRecoverableErrors,\n    workInProgressTransitions,\n  );\n\n  // Before exiting, make sure there's a callback scheduled for the next\n  // pending level.\n  ensureRootIsScheduled(root, now());\n\n  return null;\n}\n\nexport function flushRoot(root: FiberRoot, lanes: Lanes) {\n  if (lanes !== NoLanes) {\n    markRootEntangled(root, mergeLanes(lanes, SyncLane));\n    ensureRootIsScheduled(root, now());\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n      resetRenderTimer();\n      flushSyncCallbacks();\n    }\n  }\n}\n\nexport function getExecutionContext(): ExecutionContext {\n  return executionContext;\n}\n\nexport function deferredUpdates<A>(fn: () => A): A {\n  const previousPriority = getCurrentUpdatePriority();\n  const prevTransition = ReactCurrentBatchConfig.transition;\n\n  try {\n    ReactCurrentBatchConfig.transition = null;\n    setCurrentUpdatePriority(DefaultEventPriority);\n    return fn();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n  }\n}\n\nexport function batchedUpdates<A, R>(fn: A => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n    // If there were legacy sync updates, flush them at the end of the outer\n    // most batchedUpdates-like method.\n    if (\n      executionContext === NoContext &&\n      // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n      !(__DEV__ && ReactCurrentActQueue.isBatchingLegacy)\n    ) {\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n}\n\nexport function discreteUpdates<A, B, C, D, R>(\n  fn: (A, B, C, D) => R,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n): R {\n  const previousPriority = getCurrentUpdatePriority();\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  try {\n    ReactCurrentBatchConfig.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    return fn(a, b, c, d);\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n    if (executionContext === NoContext) {\n      resetRenderTimer();\n    }\n  }\n}\n\n// Overload the definition to the two valid signatures.\n// Warning, this opts-out of checking the function body.\ndeclare function flushSync<R>(fn: () => R): R;\n// eslint-disable-next-line no-redeclare\ndeclare function flushSync(): void;\n// eslint-disable-next-line no-redeclare\nexport function flushSync(fn) {\n  // In legacy mode, we flush pending passive effects at the beginning of the\n  // next event, not at the end of the previous one.\n  if (\n    rootWithPendingPassiveEffects !== null &&\n    rootWithPendingPassiveEffects.tag === LegacyRoot &&\n    (executionContext & (RenderContext | CommitContext)) === NoContext\n  ) {\n    flushPassiveEffects();\n  }\n\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  const previousPriority = getCurrentUpdatePriority();\n\n  try {\n    ReactCurrentBatchConfig.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    if (fn) {\n      return fn();\n    } else {\n      return undefined;\n    }\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    executionContext = prevExecutionContext;\n    // Flush the immediate callbacks that were scheduled during this batch.\n    // Note that this will happen even if batchedUpdates is higher up\n    // the stack.\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n      flushSyncCallbacks();\n    }\n  }\n}\n\nexport function isAlreadyRendering() {\n  // Used by the renderer to print a warning if certain APIs are called from\n  // the wrong context.\n  return (\n    __DEV__ &&\n    (executionContext & (RenderContext | CommitContext)) !== NoContext\n  );\n}\n\nexport function flushControlled(fn: () => mixed): void {\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  const previousPriority = getCurrentUpdatePriority();\n  try {\n    ReactCurrentBatchConfig.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    fn();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      resetRenderTimer();\n      flushSyncCallbacks();\n    }\n  }\n}\n\nexport function pushRenderLanes(fiber: Fiber, lanes: Lanes) {\n  pushToStack(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\n  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n  workInProgressRootIncludedLanes = mergeLanes(\n    workInProgressRootIncludedLanes,\n    lanes,\n  );\n}\n\nexport function popRenderLanes(fiber: Fiber) {\n  subtreeRenderLanes = subtreeRenderLanesCursor.current;\n  popFromStack(subtreeRenderLanesCursor, fiber);\n}\n\nfunction prepareFreshStack(root: FiberRoot, lanes: Lanes): Fiber {\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  const timeoutHandle = root.timeoutHandle;\n  if (timeoutHandle !== noTimeout) {\n    // The root previous suspended and scheduled a timeout to commit a fallback\n    // state. Now that we have additional work, cancel the timeout.\n    root.timeoutHandle = noTimeout;\n    // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n    cancelTimeout(timeoutHandle);\n  }\n\n  if (workInProgress !== null) {\n    let interruptedWork = workInProgress.return;\n    while (interruptedWork !== null) {\n      const current = interruptedWork.alternate;\n      unwindInterruptedWork(\n        current,\n        interruptedWork,\n        workInProgressRootRenderLanes,\n      );\n      interruptedWork = interruptedWork.return;\n    }\n  }\n  workInProgressRoot = root;\n  const rootWorkInProgress = createWorkInProgress(root.current, null);\n  workInProgress = rootWorkInProgress;\n  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n  workInProgressRootExitStatus = RootInProgress;\n  workInProgressRootFatalError = null;\n  workInProgressRootSkippedLanes = NoLanes;\n  workInProgressRootInterleavedUpdatedLanes = NoLanes;\n  workInProgressRootRenderPhaseUpdatedLanes = NoLanes;\n  workInProgressRootPingedLanes = NoLanes;\n  workInProgressRootConcurrentErrors = null;\n  workInProgressRootRecoverableErrors = null;\n\n  finishQueueingConcurrentUpdates();\n\n  if (__DEV__) {\n    ReactStrictModeWarnings.discardPendingWarnings();\n  }\n\n  return rootWorkInProgress;\n}\n\nfunction handleError(root, thrownValue): void {\n  do {\n    let erroredWork = workInProgress;\n    try {\n      // Reset module-level state that was set during the render phase.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      resetCurrentDebugFiberInDEV();\n      // TODO: I found and added this missing line while investigating a\n      // separate issue. Write a regression test using string refs.\n      ReactCurrentOwner.current = null;\n\n      if (erroredWork === null || erroredWork.return === null) {\n        // Expected to be working on a non-root fiber. This is a fatal error\n        // because there's no ancestor that can handle it; the root is\n        // supposed to capture all errors that weren't caught by an error\n        // boundary.\n        workInProgressRootExitStatus = RootFatalErrored;\n        workInProgressRootFatalError = thrownValue;\n        // Set `workInProgress` to null. This represents advancing to the next\n        // sibling, or the parent if there are no siblings. But since the root\n        // has no siblings nor a parent, we set it to null. Usually this is\n        // handled by `completeUnitOfWork` or `unwindWork`, but since we're\n        // intentionally not calling those, we need set it here.\n        // TODO: Consider calling `unwindWork` to pop the contexts.\n        workInProgress = null;\n        return;\n      }\n\n      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n        // Record the time spent rendering before an error was thrown. This\n        // avoids inaccurate Profiler durations in the case of a\n        // suspended render.\n        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n      }\n\n      if (enableSchedulingProfiler) {\n        markComponentRenderStopped();\n\n        if (\n          thrownValue !== null &&\n          typeof thrownValue === 'object' &&\n          typeof thrownValue.then === 'function'\n        ) {\n          const wakeable: Wakeable = (thrownValue: any);\n          markComponentSuspended(\n            erroredWork,\n            wakeable,\n            workInProgressRootRenderLanes,\n          );\n        } else {\n          markComponentErrored(\n            erroredWork,\n            thrownValue,\n            workInProgressRootRenderLanes,\n          );\n        }\n      }\n\n      throwException(\n        root,\n        erroredWork.return,\n        erroredWork,\n        thrownValue,\n        workInProgressRootRenderLanes,\n      );\n      completeUnitOfWork(erroredWork);\n    } catch (yetAnotherThrownValue) {\n      // Something in the return path also threw.\n      thrownValue = yetAnotherThrownValue;\n      if (workInProgress === erroredWork && erroredWork !== null) {\n        // If this boundary has already errored, then we had trouble processing\n        // the error. Bubble it to the next boundary.\n        erroredWork = erroredWork.return;\n        workInProgress = erroredWork;\n      } else {\n        erroredWork = workInProgress;\n      }\n      continue;\n    }\n    // Return to the normal work loop.\n    return;\n  } while (true);\n}\n\nfunction pushDispatcher() {\n  const prevDispatcher = ReactCurrentDispatcher.current;\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n  if (prevDispatcher === null) {\n    // The React isomorphic package does not include a default dispatcher.\n    // Instead the first renderer will lazily attach one, in order to give\n    // nicer error messages.\n    return ContextOnlyDispatcher;\n  } else {\n    return prevDispatcher;\n  }\n}\n\nfunction popDispatcher(prevDispatcher) {\n  ReactCurrentDispatcher.current = prevDispatcher;\n}\n\nexport function markCommitTimeOfFallback() {\n  globalMostRecentFallbackTime = now();\n}\n\nexport function markSkippedUpdateLanes(lane: Lane | Lanes): void {\n  workInProgressRootSkippedLanes = mergeLanes(\n    lane,\n    workInProgressRootSkippedLanes,\n  );\n}\n\nexport function renderDidSuspend(): void {\n  if (workInProgressRootExitStatus === RootInProgress) {\n    workInProgressRootExitStatus = RootSuspended;\n  }\n}\n\nexport function renderDidSuspendDelayIfPossible(): void {\n  if (\n    workInProgressRootExitStatus === RootInProgress ||\n    workInProgressRootExitStatus === RootSuspended ||\n    workInProgressRootExitStatus === RootErrored\n  ) {\n    workInProgressRootExitStatus = RootSuspendedWithDelay;\n  }\n\n  // Check if there are updates that we skipped tree that might have unblocked\n  // this render.\n  if (\n    workInProgressRoot !== null &&\n    (includesNonIdleWork(workInProgressRootSkippedLanes) ||\n      includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))\n  ) {\n    // Mark the current render as suspended so that we switch to working on\n    // the updates that were skipped. Usually we only suspend at the end of\n    // the render phase.\n    // TODO: We should probably always mark the root as suspended immediately\n    // (inside this function), since by suspending at the end of the render\n    // phase introduces a potential mistake where we suspend lanes that were\n    // pinged or updated while we were rendering.\n    markRootSuspended(workInProgressRoot, workInProgressRootRenderLanes);\n  }\n}\n\nexport function renderDidError(error: CapturedValue<mixed>) {\n  if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {\n    workInProgressRootExitStatus = RootErrored;\n  }\n  if (workInProgressRootConcurrentErrors === null) {\n    workInProgressRootConcurrentErrors = [error];\n  } else {\n    workInProgressRootConcurrentErrors.push(error);\n  }\n}\n\n// Called during render to determine if anything has suspended.\n// Returns false if we're not sure.\nexport function renderHasNotSuspendedYet(): boolean {\n  // If something errored or completed, we can't really be sure,\n  // so those are false.\n  return workInProgressRootExitStatus === RootInProgress;\n}\n\nfunction renderRootSync(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  const prevDispatcher = pushDispatcher();\n\n  // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    if (enableUpdaterTracking) {\n      if (isDevToolsPresent) {\n        const memoizedUpdaters = root.memoizedUpdaters;\n        if (memoizedUpdaters.size > 0) {\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\n          memoizedUpdaters.clear();\n        }\n\n        // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n        // If we bailout on this work, we'll move them back (like above).\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\n        // That way we can keep the current update and future updates separate.\n        movePendingFibersToMemoized(root, lanes);\n      }\n    }\n\n    workInProgressTransitions = getTransitionsForLanes(root, lanes);\n    prepareFreshStack(root, lanes);\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStarted(lanes);\n  }\n\n  do {\n    try {\n      workLoopSync();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n  resetContextDependencies();\n\n  executionContext = prevExecutionContext;\n  popDispatcher(prevDispatcher);\n\n  if (workInProgress !== null) {\n    // This is a sync render, so we should have finished the whole tree.\n    throw new Error(\n      'Cannot commit an incomplete root. This error is likely caused by a ' +\n        'bug in React. Please file an issue.',\n    );\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStopped();\n  }\n\n  // Set this to null to indicate there's no in-progress render.\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = NoLanes;\n\n  return workInProgressRootExitStatus;\n}\n\n// The work loop is an extremely hot path. Tell Closure not to inline it.\n/** @noinline */\nfunction workLoopSync() {\n  // Already timed out, so perform work without checking if we need to yield.\n  while (workInProgress !== null) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction renderRootConcurrent(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  const prevDispatcher = pushDispatcher();\n\n  // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    if (enableUpdaterTracking) {\n      if (isDevToolsPresent) {\n        const memoizedUpdaters = root.memoizedUpdaters;\n        if (memoizedUpdaters.size > 0) {\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\n          memoizedUpdaters.clear();\n        }\n\n        // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n        // If we bailout on this work, we'll move them back (like above).\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\n        // That way we can keep the current update and future updates separate.\n        movePendingFibersToMemoized(root, lanes);\n      }\n    }\n\n    workInProgressTransitions = getTransitionsForLanes(root, lanes);\n    resetRenderTimer();\n    prepareFreshStack(root, lanes);\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStarted(lanes);\n  }\n\n  do {\n    try {\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n  resetContextDependencies();\n\n  popDispatcher(prevDispatcher);\n  executionContext = prevExecutionContext;\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStopped();\n    }\n  }\n\n  // Check if the tree has completed.\n  if (workInProgress !== null) {\n    // Still work remaining.\n    if (enableSchedulingProfiler) {\n      markRenderYielded();\n    }\n    return RootInProgress;\n  } else {\n    // Completed the tree.\n    if (enableSchedulingProfiler) {\n      markRenderStopped();\n    }\n\n    // Set this to null to indicate there's no in-progress render.\n    workInProgressRoot = null;\n    workInProgressRootRenderLanes = NoLanes;\n\n    // Return the final exit status.\n    return workInProgressRootExitStatus;\n  }\n}\n\n/** @noinline */\nfunction workLoopConcurrent() {\n  // Perform work until Scheduler asks us to yield\n  while (workInProgress !== null && !shouldYield()) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction performUnitOfWork(unitOfWork: Fiber): void {\n  // The current, flushed, state of this fiber is the alternate. Ideally\n  // nothing should rely on this, but relying on it here means that we don't\n  // need an additional field on the work in progress.\n  const current = unitOfWork.alternate;\n  setCurrentDebugFiberInDEV(unitOfWork);\n\n  let next;\n  if (enableProfilerTimer && (unitOfWork.mode & ProfileMode) !== NoMode) {\n    startProfilerTimer(unitOfWork);\n    next = beginWork(current, unitOfWork, subtreeRenderLanes);\n    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n  } else {\n    next = beginWork(current, unitOfWork, subtreeRenderLanes);\n  }\n\n  resetCurrentDebugFiberInDEV();\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  if (next === null) {\n    // If this doesn't spawn new work, complete the current work.\n    completeUnitOfWork(unitOfWork);\n  } else {\n    workInProgress = next;\n  }\n\n  ReactCurrentOwner.current = null;\n}\n\nfunction completeUnitOfWork(unitOfWork: Fiber): void {\n  // Attempt to complete the current unit of work, then move to the next\n  // sibling. If there are no more siblings, return to the parent fiber.\n  let completedWork = unitOfWork;\n  do {\n    // The current, flushed, state of this fiber is the alternate. Ideally\n    // nothing should rely on this, but relying on it here means that we don't\n    // need an additional field on the work in progress.\n    const current = completedWork.alternate;\n    const returnFiber = completedWork.return;\n\n    // Check if the work completed or if something threw.\n    if ((completedWork.flags & Incomplete) === NoFlags) {\n      setCurrentDebugFiberInDEV(completedWork);\n      let next;\n      if (\n        !enableProfilerTimer ||\n        (completedWork.mode & ProfileMode) === NoMode\n      ) {\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n      } else {\n        startProfilerTimer(completedWork);\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n        // Update render duration assuming we didn't error.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n      }\n      resetCurrentDebugFiberInDEV();\n\n      if (next !== null) {\n        // Completing this fiber spawned new work. Work on that next.\n        workInProgress = next;\n        return;\n      }\n    } else {\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      const next = unwindWork(current, completedWork, subtreeRenderLanes);\n\n      // Because this fiber did not complete, don't reset its lanes.\n\n      if (next !== null) {\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        next.flags &= HostEffectMask;\n        workInProgress = next;\n        return;\n      }\n\n      if (\n        enableProfilerTimer &&\n        (completedWork.mode & ProfileMode) !== NoMode\n      ) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n\n        // Include the time spent working on failed children before continuing.\n        let actualDuration = completedWork.actualDuration;\n        let child = completedWork.child;\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n        completedWork.actualDuration = actualDuration;\n      }\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its subtree flags.\n        returnFiber.flags |= Incomplete;\n        returnFiber.subtreeFlags = NoFlags;\n        returnFiber.deletions = null;\n      } else {\n        // We've unwound all the way to the root.\n        workInProgressRootExitStatus = RootDidNotComplete;\n        workInProgress = null;\n        return;\n      }\n    }\n\n    const siblingFiber = completedWork.sibling;\n    if (siblingFiber !== null) {\n      // If there is more work to do in this returnFiber, do that next.\n      workInProgress = siblingFiber;\n      return;\n    }\n    // Otherwise, return to the parent\n    completedWork = returnFiber;\n    // Update the next thing we're working on in case something throws.\n    workInProgress = completedWork;\n  } while (completedWork !== null);\n\n  // We've reached the root.\n  if (workInProgressRootExitStatus === RootInProgress) {\n    workInProgressRootExitStatus = RootCompleted;\n  }\n}\n\nfunction commitRoot(\n  root: FiberRoot,\n  recoverableErrors: null | Array<CapturedValue<mixed>>,\n  transitions: Array<Transition> | null,\n) {\n  // TODO: This no longer makes any sense. We already wrap the mutation and\n  // layout phases. Should be able to remove.\n  const previousUpdateLanePriority = getCurrentUpdatePriority();\n  const prevTransition = ReactCurrentBatchConfig.transition;\n\n  try {\n    ReactCurrentBatchConfig.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    commitRootImpl(\n      root,\n      recoverableErrors,\n      transitions,\n      previousUpdateLanePriority,\n    );\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n    setCurrentUpdatePriority(previousUpdateLanePriority);\n  }\n\n  return null;\n}\n\nfunction commitRootImpl(\n  root: FiberRoot,\n  recoverableErrors: null | Array<CapturedValue<mixed>>,\n  transitions: Array<Transition> | null,\n  renderPriorityLevel: EventPriority,\n) {\n  do {\n    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which\n    // means `flushPassiveEffects` will sometimes result in additional\n    // passive effects. So we need to keep flushing in a loop until there are\n    // no more pending effects.\n    // TODO: Might be better if `flushPassiveEffects` did not automatically\n    // flush synchronous work at the end, to avoid factoring hazards like this.\n    flushPassiveEffects();\n  } while (rootWithPendingPassiveEffects !== null);\n  flushRenderPhaseStrictModeWarningsInDEV();\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Should not already be working.');\n  }\n\n  const finishedWork = root.finishedWork;\n  const lanes = root.finishedLanes;\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logCommitStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markCommitStarted(lanes);\n  }\n\n  if (finishedWork === null) {\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logCommitStopped();\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markCommitStopped();\n    }\n\n    return null;\n  } else {\n    if (__DEV__) {\n      if (lanes === NoLanes) {\n        console.error(\n          'root.finishedLanes should not be empty during a commit. This is a ' +\n            'bug in React.',\n        );\n      }\n    }\n  }\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  if (finishedWork === root.current) {\n    throw new Error(\n      'Cannot commit the same tree as before. This error is likely caused by ' +\n        'a bug in React. Please file an issue.',\n    );\n  }\n\n  // commitRoot never returns a continuation; it always finishes synchronously.\n  // So we can clear these now to allow a new callback to be scheduled.\n  root.callbackNode = null;\n  root.callbackPriority = NoLane;\n\n  // Update the first and last pending times on this root. The new first\n  // pending time is whatever is left on the root fiber.\n  let remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n  markRootFinished(root, remainingLanes);\n\n  if (root === workInProgressRoot) {\n    // We can reset these now that they are finished.\n    workInProgressRoot = null;\n    workInProgress = null;\n    workInProgressRootRenderLanes = NoLanes;\n  } else {\n    // This indicates that the last root we worked on is not the same one that\n    // we're committing now. This most commonly happens when a suspended root\n    // times out.\n  }\n\n  // If there are pending passive effects, schedule a callback to process them.\n  // Do this as early as possible, so it is queued before anything else that\n  // might get scheduled in the commit phase. (See #16714.)\n  // TODO: Delete all other places that schedule the passive effect callback\n  // They're redundant.\n  if (\n    (finishedWork.subtreeFlags & PassiveMask) !== NoFlags ||\n    (finishedWork.flags & PassiveMask) !== NoFlags\n  ) {\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      pendingPassiveEffectsRemainingLanes = remainingLanes;\n      // workInProgressTransitions might be overwritten, so we want\n      // to store it in pendingPassiveTransitions until they get processed\n      // We need to pass this through as an argument to commitRoot\n      // because workInProgressTransitions might have changed between\n      // the previous render and commit if we throttle the commit\n      // with setTimeout\n      pendingPassiveTransitions = transitions;\n      scheduleCallback(NormalSchedulerPriority, () => {\n        flushPassiveEffects();\n        // This render triggered passive effects: release the root cache pool\n        // *after* passive effects fire to avoid freeing a cache pool that may\n        // be referenced by a node in the tree (HostRoot, Cache boundary etc)\n        return null;\n      });\n    }\n  }\n\n  // Check if there are any effects in the whole tree.\n  // TODO: This is left over from the effect list implementation, where we had\n  // to check for the existence of `firstEffect` to satisfy Flow. I think the\n  // only other reason this optimization exists is because it affects profiling.\n  // Reconsider whether this is necessary.\n  const subtreeHasEffects =\n    (finishedWork.subtreeFlags &\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\n    NoFlags;\n  const rootHasEffect =\n    (finishedWork.flags &\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\n    NoFlags;\n\n  if (subtreeHasEffects || rootHasEffect) {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = null;\n    const previousPriority = getCurrentUpdatePriority();\n    setCurrentUpdatePriority(DiscreteEventPriority);\n\n    const prevExecutionContext = executionContext;\n    executionContext |= CommitContext;\n\n    // Reset this to null before calling lifecycles\n    ReactCurrentOwner.current = null;\n\n    // The commit phase is broken into several sub-phases. We do a separate pass\n    // of the effect list for each phase: all mutation effects come before all\n    // layout effects, and so on.\n\n    // The first phase a \"before mutation\" phase. We use this phase to read the\n    // state of the host tree right before we mutate it. This is where\n    // getSnapshotBeforeUpdate is called.\n    const shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(\n      root,\n      finishedWork,\n    );\n\n    if (enableProfilerTimer) {\n      // Mark the current commit time to be shared by all Profilers in this\n      // batch. This enables them to be grouped later.\n      recordCommitTime();\n    }\n\n    if (enableProfilerTimer && enableProfilerNestedUpdateScheduledHook) {\n      // Track the root here, rather than in commitLayoutEffects(), because of ref setters.\n      // Updates scheduled during ref detachment should also be flagged.\n      rootCommittingMutationOrLayoutEffects = root;\n    }\n\n    // The next phase is the mutation phase, where we mutate the host tree.\n    commitMutationEffects(root, finishedWork, lanes);\n\n    if (enableCreateEventHandleAPI) {\n      if (shouldFireAfterActiveInstanceBlur) {\n        afterActiveInstanceBlur();\n      }\n    }\n    resetAfterCommit(root.containerInfo);\n\n    // The work-in-progress tree is now the current tree. This must come after\n    // the mutation phase, so that the previous tree is still current during\n    // componentWillUnmount, but before the layout phase, so that the finished\n    // work is current during componentDidMount/Update.\n    root.current = finishedWork;\n\n    // The next phase is the layout phase, where we call effects that read\n    // the host tree after it's been mutated. The idiomatic use case for this is\n    // layout, but class component lifecycles also fire here for legacy reasons.\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logLayoutEffectsStarted(lanes);\n      }\n    }\n    if (enableSchedulingProfiler) {\n      markLayoutEffectsStarted(lanes);\n    }\n    commitLayoutEffects(finishedWork, root, lanes);\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logLayoutEffectsStopped();\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markLayoutEffectsStopped();\n    }\n\n    if (enableProfilerTimer && enableProfilerNestedUpdateScheduledHook) {\n      rootCommittingMutationOrLayoutEffects = null;\n    }\n\n    // Tell Scheduler to yield at the end of the frame, so the browser has an\n    // opportunity to paint.\n    requestPaint();\n\n    executionContext = prevExecutionContext;\n\n    // Reset the priority to the previous non-sync value.\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n  } else {\n    // No effects.\n    root.current = finishedWork;\n    // Measure these anyway so the flamegraph explicitly shows that there were\n    // no effects.\n    // TODO: Maybe there's a better way to report this.\n    if (enableProfilerTimer) {\n      recordCommitTime();\n    }\n  }\n\n  const rootDidHavePassiveEffects = rootDoesHavePassiveEffects;\n\n  if (rootDoesHavePassiveEffects) {\n    // This commit has passive effects. Stash a reference to them. But don't\n    // schedule a callback until after flushing layout work.\n    rootDoesHavePassiveEffects = false;\n    rootWithPendingPassiveEffects = root;\n    pendingPassiveEffectsLanes = lanes;\n  } else {\n    // There were no passive effects, so we can immediately release the cache\n    // pool for this render.\n    releaseRootPooledCache(root, remainingLanes);\n    if (__DEV__) {\n      nestedPassiveUpdateCount = 0;\n      rootWithPassiveNestedUpdates = null;\n    }\n  }\n\n  // Read this again, since an effect might have updated it\n  remainingLanes = root.pendingLanes;\n\n  // Check if there's remaining work on this root\n  // TODO: This is part of the `componentDidCatch` implementation. Its purpose\n  // is to detect whether something might have called setState inside\n  // `componentDidCatch`. The mechanism is known to be flawed because `setState`\n  // inside `componentDidCatch` is itself flawed — that's why we recommend\n  // `getDerivedStateFromError` instead. However, it could be improved by\n  // checking if remainingLanes includes Sync work, instead of whether there's\n  // any work remaining at all (which would also include stuff like Suspense\n  // retries or transitions). It's been like this for a while, though, so fixing\n  // it probably isn't that urgent.\n  if (remainingLanes === NoLanes) {\n    // If there's no remaining work, we can clear the set of already failed\n    // error boundaries.\n    legacyErrorBoundariesThatAlreadyFailed = null;\n  }\n\n  if (__DEV__ && enableStrictEffects) {\n    if (!rootDidHavePassiveEffects) {\n      commitDoubleInvokeEffectsInDEV(root.current, false);\n    }\n  }\n\n  onCommitRootDevTools(finishedWork.stateNode, renderPriorityLevel);\n\n  if (enableUpdaterTracking) {\n    if (isDevToolsPresent) {\n      root.memoizedUpdaters.clear();\n    }\n  }\n\n  if (__DEV__) {\n    onCommitRootTestSelector();\n  }\n\n  // Always call this before exiting `commitRoot`, to ensure that any\n  // additional work on this root is scheduled.\n  ensureRootIsScheduled(root, now());\n\n  if (recoverableErrors !== null) {\n    // There were errors during this render, but recovered from them without\n    // needing to surface it to the UI. We log them here.\n    const onRecoverableError = root.onRecoverableError;\n    for (let i = 0; i < recoverableErrors.length; i++) {\n      const recoverableError = recoverableErrors[i];\n      const componentStack = recoverableError.stack;\n      const digest = recoverableError.digest;\n      onRecoverableError(recoverableError.value, {componentStack, digest});\n    }\n  }\n\n  if (hasUncaughtError) {\n    hasUncaughtError = false;\n    const error = firstUncaughtError;\n    firstUncaughtError = null;\n    throw error;\n  }\n\n  // If the passive effects are the result of a discrete render, flush them\n  // synchronously at the end of the current task so that the result is\n  // immediately observable. Otherwise, we assume that they are not\n  // order-dependent and do not need to be observed by external systems, so we\n  // can wait until after paint.\n  // TODO: We can optimize this by not scheduling the callback earlier. Since we\n  // currently schedule the callback in multiple places, will wait until those\n  // are consolidated.\n  if (\n    includesSomeLane(pendingPassiveEffectsLanes, SyncLane) &&\n    root.tag !== LegacyRoot\n  ) {\n    flushPassiveEffects();\n  }\n\n  // Read this again, since a passive effect might have updated it\n  remainingLanes = root.pendingLanes;\n  if (includesSomeLane(remainingLanes, (SyncLane: Lane))) {\n    if (enableProfilerTimer && enableProfilerNestedUpdatePhase) {\n      markNestedUpdateScheduled();\n    }\n\n    // Count the number of times the root synchronously re-renders without\n    // finishing. If there are too many, it indicates an infinite update loop.\n    if (root === rootWithNestedUpdates) {\n      nestedUpdateCount++;\n    } else {\n      nestedUpdateCount = 0;\n      rootWithNestedUpdates = root;\n    }\n  } else {\n    nestedUpdateCount = 0;\n  }\n\n  // If layout work was scheduled, flush it now.\n  flushSyncCallbacks();\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logCommitStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markCommitStopped();\n  }\n\n  return null;\n}\n\nfunction releaseRootPooledCache(root: FiberRoot, remainingLanes: Lanes) {\n  if (enableCache) {\n    const pooledCacheLanes = (root.pooledCacheLanes &= remainingLanes);\n    if (pooledCacheLanes === NoLanes) {\n      // None of the remaining work relies on the cache pool. Clear it so\n      // subsequent requests get a new cache\n      const pooledCache = root.pooledCache;\n      if (pooledCache != null) {\n        root.pooledCache = null;\n        releaseCache(pooledCache);\n      }\n    }\n  }\n}\n\nexport function flushPassiveEffects(): boolean {\n  // Returns whether passive effects were flushed.\n  // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should\n  // probably just combine the two functions. I believe they were only separate\n  // in the first place because we used to wrap it with\n  // `Scheduler.runWithPriority`, which accepts a function. But now we track the\n  // priority within React itself, so we can mutate the variable directly.\n  if (rootWithPendingPassiveEffects !== null) {\n    // Cache the root since rootWithPendingPassiveEffects is cleared in\n    // flushPassiveEffectsImpl\n    const root = rootWithPendingPassiveEffects;\n    // Cache and clear the remaining lanes flag; it must be reset since this\n    // method can be called from various places, not always from commitRoot\n    // where the remaining lanes are known\n    const remainingLanes = pendingPassiveEffectsRemainingLanes;\n    pendingPassiveEffectsRemainingLanes = NoLanes;\n\n    const renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);\n    const priority = lowerEventPriority(DefaultEventPriority, renderPriority);\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    const previousPriority = getCurrentUpdatePriority();\n\n    try {\n      ReactCurrentBatchConfig.transition = null;\n      setCurrentUpdatePriority(priority);\n      return flushPassiveEffectsImpl();\n    } finally {\n      setCurrentUpdatePriority(previousPriority);\n      ReactCurrentBatchConfig.transition = prevTransition;\n\n      // Once passive effects have run for the tree - giving components a\n      // chance to retain cache instances they use - release the pooled\n      // cache at the root (if there is one)\n      releaseRootPooledCache(root, remainingLanes);\n    }\n  }\n  return false;\n}\n\nexport function enqueuePendingPassiveProfilerEffect(fiber: Fiber): void {\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    pendingPassiveProfilerEffects.push(fiber);\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback(NormalSchedulerPriority, () => {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n}\n\nfunction flushPassiveEffectsImpl() {\n  if (rootWithPendingPassiveEffects === null) {\n    return false;\n  }\n\n  // Cache and clear the transitions flag\n  const transitions = pendingPassiveTransitions;\n  pendingPassiveTransitions = null;\n\n  const root = rootWithPendingPassiveEffects;\n  const lanes = pendingPassiveEffectsLanes;\n  rootWithPendingPassiveEffects = null;\n  // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.\n  // Figure out why and fix it. It's not causing any known issues (probably\n  // because it's only used for profiling), but it's a refactor hazard.\n  pendingPassiveEffectsLanes = NoLanes;\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Cannot flush passive effects while already rendering.');\n  }\n\n  if (__DEV__) {\n    isFlushingPassiveEffects = true;\n    didScheduleUpdateDuringPassiveEffects = false;\n\n    if (enableDebugTracing) {\n      logPassiveEffectsStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markPassiveEffectsStarted(lanes);\n  }\n\n  const prevExecutionContext = executionContext;\n  executionContext |= CommitContext;\n\n  commitPassiveUnmountEffects(root.current);\n  commitPassiveMountEffects(root, root.current, lanes, transitions);\n\n  // TODO: Move to commitPassiveMountEffects\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    const profilerEffects = pendingPassiveProfilerEffects;\n    pendingPassiveProfilerEffects = [];\n    for (let i = 0; i < profilerEffects.length; i++) {\n      const fiber = ((profilerEffects[i]: any): Fiber);\n      commitPassiveEffectDurations(root, fiber);\n    }\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logPassiveEffectsStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markPassiveEffectsStopped();\n  }\n\n  if (__DEV__ && enableStrictEffects) {\n    commitDoubleInvokeEffectsInDEV(root.current, true);\n  }\n\n  executionContext = prevExecutionContext;\n\n  flushSyncCallbacks();\n\n  if (enableTransitionTracing) {\n    const prevPendingTransitionCallbacks = currentPendingTransitionCallbacks;\n    const prevRootTransitionCallbacks = root.transitionCallbacks;\n    if (\n      prevPendingTransitionCallbacks !== null &&\n      prevRootTransitionCallbacks !== null\n    ) {\n      // TODO(luna) Refactor this code into the Host Config\n      // TODO(luna) The end time here is not necessarily accurate\n      // because passive effects could be called before paint\n      // (synchronously) or after paint (normally). We need\n      // to come up with a way to get the correct end time for both cases.\n      // One solution is in the host config, if the passive effects\n      // have not yet been run, make a call to flush the passive effects\n      // right after paint.\n      const endTime = now();\n      currentPendingTransitionCallbacks = null;\n\n      scheduleCallback(IdleSchedulerPriority, () =>\n        processTransitionCallbacks(\n          prevPendingTransitionCallbacks,\n          endTime,\n          prevRootTransitionCallbacks,\n        ),\n      );\n    }\n  }\n\n  if (__DEV__) {\n    // If additional passive effects were scheduled, increment a counter. If this\n    // exceeds the limit, we'll fire a warning.\n    if (didScheduleUpdateDuringPassiveEffects) {\n      if (root === rootWithPassiveNestedUpdates) {\n        nestedPassiveUpdateCount++;\n      } else {\n        nestedPassiveUpdateCount = 0;\n        rootWithPassiveNestedUpdates = root;\n      }\n    } else {\n      nestedPassiveUpdateCount = 0;\n    }\n    isFlushingPassiveEffects = false;\n    didScheduleUpdateDuringPassiveEffects = false;\n  }\n\n  // TODO: Move to commitPassiveMountEffects\n  onPostCommitRootDevTools(root);\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    const stateNode = root.current.stateNode;\n    stateNode.effectDuration = 0;\n    stateNode.passiveEffectDuration = 0;\n  }\n\n  return true;\n}\n\nexport function isAlreadyFailedLegacyErrorBoundary(instance: mixed): boolean {\n  return (\n    legacyErrorBoundariesThatAlreadyFailed !== null &&\n    legacyErrorBoundariesThatAlreadyFailed.has(instance)\n  );\n}\n\nexport function markLegacyErrorBoundaryAsFailed(instance: mixed) {\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n  } else {\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\n  }\n}\n\nfunction prepareToThrowUncaughtError(error: mixed) {\n  if (!hasUncaughtError) {\n    hasUncaughtError = true;\n    firstUncaughtError = error;\n  }\n}\nexport const onUncaughtError = prepareToThrowUncaughtError;\n\nfunction captureCommitPhaseErrorOnRoot(\n  rootFiber: Fiber,\n  sourceFiber: Fiber,\n  error: mixed,\n) {\n  const errorInfo = createCapturedValueAtFiber(error, sourceFiber);\n  const update = createRootErrorUpdate(rootFiber, errorInfo, (SyncLane: Lane));\n  const root = enqueueUpdate(rootFiber, update, (SyncLane: Lane));\n  const eventTime = requestEventTime();\n  if (root !== null) {\n    markRootUpdated(root, SyncLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nexport function captureCommitPhaseError(\n  sourceFiber: Fiber,\n  nearestMountedAncestor: Fiber | null,\n  error: mixed,\n) {\n  if (__DEV__) {\n    reportUncaughtErrorInDEV(error);\n    setIsRunningInsertionEffect(false);\n  }\n  if (sourceFiber.tag === HostRoot) {\n    // Error was thrown at the root. There is no parent, so the root\n    // itself should capture it.\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n    return;\n  }\n\n  let fiber = null;\n  if (skipUnmountedBoundaries) {\n    fiber = nearestMountedAncestor;\n  } else {\n    fiber = sourceFiber.return;\n  }\n\n  while (fiber !== null) {\n    if (fiber.tag === HostRoot) {\n      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);\n      return;\n    } else if (fiber.tag === ClassComponent) {\n      const ctor = fiber.type;\n      const instance = fiber.stateNode;\n      if (\n        typeof ctor.getDerivedStateFromError === 'function' ||\n        (typeof instance.componentDidCatch === 'function' &&\n          !isAlreadyFailedLegacyErrorBoundary(instance))\n      ) {\n        const errorInfo = createCapturedValueAtFiber(error, sourceFiber);\n        const update = createClassErrorUpdate(\n          fiber,\n          errorInfo,\n          (SyncLane: Lane),\n        );\n        const root = enqueueUpdate(fiber, update, (SyncLane: Lane));\n        const eventTime = requestEventTime();\n        if (root !== null) {\n          markRootUpdated(root, SyncLane, eventTime);\n          ensureRootIsScheduled(root, eventTime);\n        }\n        return;\n      }\n    }\n    fiber = fiber.return;\n  }\n\n  if (__DEV__) {\n    // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning\n    // will fire for errors that are thrown by destroy functions inside deleted\n    // trees. What it should instead do is propagate the error to the parent of\n    // the deleted tree. In the meantime, do not add this warning to the\n    // allowlist; this is only for our internal use.\n    console.error(\n      'Internal React error: Attempted to capture a commit phase error ' +\n        'inside a detached tree. This indicates a bug in React. Likely ' +\n        'causes include deleting the same fiber more than once, committing an ' +\n        'already-finished tree, or an inconsistent return pointer.\\n\\n' +\n        'Error message:\\n\\n%s',\n      error,\n    );\n  }\n}\n\nexport function pingSuspendedRoot(\n  root: FiberRoot,\n  wakeable: Wakeable,\n  pingedLanes: Lanes,\n) {\n  const pingCache = root.pingCache;\n  if (pingCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    pingCache.delete(wakeable);\n  }\n\n  const eventTime = requestEventTime();\n  markRootPinged(root, pingedLanes, eventTime);\n\n  warnIfSuspenseResolutionNotWrappedWithActDEV(root);\n\n  if (\n    workInProgressRoot === root &&\n    isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)\n  ) {\n    // Received a ping at the same priority level at which we're currently\n    // rendering. We might want to restart this render. This should mirror\n    // the logic of whether or not a root suspends once it completes.\n\n    // TODO: If we're rendering sync either due to Sync, Batched or expired,\n    // we should probably never restart.\n\n    // If we're suspended with delay, or if it's a retry, we'll always suspend\n    // so we can always restart.\n    if (\n      workInProgressRootExitStatus === RootSuspendedWithDelay ||\n      (workInProgressRootExitStatus === RootSuspended &&\n        includesOnlyRetries(workInProgressRootRenderLanes) &&\n        now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS)\n    ) {\n      // Restart from the root.\n      prepareFreshStack(root, NoLanes);\n    } else {\n      // Even though we can't restart right now, we might get an\n      // opportunity later. So we mark this render as having a ping.\n      workInProgressRootPingedLanes = mergeLanes(\n        workInProgressRootPingedLanes,\n        pingedLanes,\n      );\n    }\n  }\n\n  ensureRootIsScheduled(root, eventTime);\n}\n\nfunction retryTimedOutBoundary(boundaryFiber: Fiber, retryLane: Lane) {\n  // The boundary fiber (a Suspense component or SuspenseList component)\n  // previously was rendered in its fallback state. One of the promises that\n  // suspended it has resolved, which means at least part of the tree was\n  // likely unblocked. Try rendering again, at a new lanes.\n  if (retryLane === NoLane) {\n    // TODO: Assign this to `suspenseState.retryLane`? to avoid\n    // unnecessary entanglement?\n    retryLane = requestRetryLane(boundaryFiber);\n  }\n  // TODO: Special case idle priority?\n  const eventTime = requestEventTime();\n  const root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n  if (root !== null) {\n    markRootUpdated(root, retryLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nexport function retryDehydratedSuspenseBoundary(boundaryFiber: Fiber) {\n  const suspenseState: null | SuspenseState = boundaryFiber.memoizedState;\n  let retryLane = NoLane;\n  if (suspenseState !== null) {\n    retryLane = suspenseState.retryLane;\n  }\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\n\nexport function resolveRetryWakeable(boundaryFiber: Fiber, wakeable: Wakeable) {\n  let retryLane = NoLane; // Default\n  let retryCache: WeakSet<Wakeable> | Set<Wakeable> | null;\n  switch (boundaryFiber.tag) {\n    case SuspenseComponent:\n      retryCache = boundaryFiber.stateNode;\n      const suspenseState: null | SuspenseState = boundaryFiber.memoizedState;\n      if (suspenseState !== null) {\n        retryLane = suspenseState.retryLane;\n      }\n      break;\n    case SuspenseListComponent:\n      retryCache = boundaryFiber.stateNode;\n      break;\n    default:\n      throw new Error(\n        'Pinged unknown suspense boundary type. ' +\n          'This is probably a bug in React.',\n      );\n  }\n\n  if (retryCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    retryCache.delete(wakeable);\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\n\n// Computes the next Just Noticeable Difference (JND) boundary.\n// The theory is that a person can't tell the difference between small differences in time.\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\n// difference in the experience. However, waiting for longer might mean that we can avoid\n// showing an intermediate loading state. The longer we have already waited, the harder it\n// is to tell small differences in time. Therefore, the longer we've already waited,\n// the longer we can wait additionally. At some point we have to give up though.\n// We pick a train model where the next boundary commits at a consistent schedule.\n// These particular numbers are vague estimates. We expect to adjust them based on research.\nfunction jnd(timeElapsed: number) {\n  return timeElapsed < 120\n    ? 120\n    : timeElapsed < 480\n    ? 480\n    : timeElapsed < 1080\n    ? 1080\n    : timeElapsed < 1920\n    ? 1920\n    : timeElapsed < 3000\n    ? 3000\n    : timeElapsed < 4320\n    ? 4320\n    : ceil(timeElapsed / 1960) * 1960;\n}\n\nfunction checkForNestedUpdates() {\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n    nestedUpdateCount = 0;\n    rootWithNestedUpdates = null;\n\n    throw new Error(\n      'Maximum update depth exceeded. This can happen when a component ' +\n        'repeatedly calls setState inside componentWillUpdate or ' +\n        'componentDidUpdate. React limits the number of nested updates to ' +\n        'prevent infinite loops.',\n    );\n  }\n\n  if (__DEV__) {\n    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n      nestedPassiveUpdateCount = 0;\n      rootWithPassiveNestedUpdates = null;\n\n      console.error(\n        'Maximum update depth exceeded. This can happen when a component ' +\n          \"calls setState inside useEffect, but useEffect either doesn't \" +\n          'have a dependency array, or one of the dependencies changes on ' +\n          'every render.',\n      );\n    }\n  }\n}\n\nfunction flushRenderPhaseStrictModeWarningsInDEV() {\n  if (__DEV__) {\n    ReactStrictModeWarnings.flushLegacyContextWarning();\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n    }\n  }\n}\n\nfunction commitDoubleInvokeEffectsInDEV(\n  fiber: Fiber,\n  hasPassiveEffects: boolean,\n) {\n  if (__DEV__ && enableStrictEffects) {\n    // TODO (StrictEffects) Should we set a marker on the root if it contains strict effects\n    // so we don't traverse unnecessarily? similar to subtreeFlags but just at the root level.\n    // Maybe not a big deal since this is DEV only behavior.\n\n    setCurrentDebugFiberInDEV(fiber);\n    invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);\n    if (hasPassiveEffects) {\n      invokeEffectsInDev(\n        fiber,\n        MountPassiveDev,\n        invokePassiveEffectUnmountInDEV,\n      );\n    }\n\n    invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);\n    if (hasPassiveEffects) {\n      invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);\n    }\n    resetCurrentDebugFiberInDEV();\n  }\n}\n\nfunction invokeEffectsInDev(\n  firstChild: Fiber,\n  fiberFlags: Flags,\n  invokeEffectFn: (fiber: Fiber) => void,\n): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n\n    let current = firstChild;\n    let subtreeRoot = null;\n    while (current !== null) {\n      const primarySubtreeFlag = current.subtreeFlags & fiberFlags;\n      if (\n        current !== subtreeRoot &&\n        current.child !== null &&\n        primarySubtreeFlag !== NoFlags\n      ) {\n        current = current.child;\n      } else {\n        if ((current.flags & fiberFlags) !== NoFlags) {\n          invokeEffectFn(current);\n        }\n\n        if (current.sibling !== null) {\n          current = current.sibling;\n        } else {\n          current = subtreeRoot = current.return;\n        }\n      }\n    }\n  }\n}\n\nlet didWarnStateUpdateForNotYetMountedComponent: Set<string> | null = null;\nexport function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber: Fiber) {\n  if (__DEV__) {\n    if ((executionContext & RenderContext) !== NoContext) {\n      // We let the other warning about render phase updates deal with this one.\n      return;\n    }\n\n    if (!(fiber.mode & ConcurrentMode)) {\n      return;\n    }\n\n    const tag = fiber.tag;\n    if (\n      tag !== IndeterminateComponent &&\n      tag !== HostRoot &&\n      tag !== ClassComponent &&\n      tag !== FunctionComponent &&\n      tag !== ForwardRef &&\n      tag !== MemoComponent &&\n      tag !== SimpleMemoComponent\n    ) {\n      // Only warn for user-defined components, not internal ones like Suspense.\n      return;\n    }\n\n    // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n    const componentName = getComponentNameFromFiber(fiber) || 'ReactComponent';\n    if (didWarnStateUpdateForNotYetMountedComponent !== null) {\n      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\n        return;\n      }\n      didWarnStateUpdateForNotYetMountedComponent.add(componentName);\n    } else {\n      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\n    }\n\n    const previousFiber = ReactCurrentFiberCurrent;\n    try {\n      setCurrentDebugFiberInDEV(fiber);\n      console.error(\n        \"Can't perform a React state update on a component that hasn't mounted yet. \" +\n          'This indicates that you have a side-effect in your render function that ' +\n          'asynchronously later calls tries to update the component. Move this work to ' +\n          'useEffect instead.',\n      );\n    } finally {\n      if (previousFiber) {\n        setCurrentDebugFiberInDEV(fiber);\n      } else {\n        resetCurrentDebugFiberInDEV();\n      }\n    }\n  }\n}\n\nlet beginWork;\nif (__DEV__ && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n  const dummyFiber = null;\n  beginWork = (current, unitOfWork, lanes) => {\n    // If a component throws an error, we replay it again in a synchronously\n    // dispatched event, so that the debugger will treat it as an uncaught\n    // error See ReactErrorUtils for more information.\n\n    // Before entering the begin phase, copy the work-in-progress onto a dummy\n    // fiber. If beginWork throws, we'll use this to reset the state.\n    const originalWorkInProgressCopy = assignFiberPropertiesInDEV(\n      dummyFiber,\n      unitOfWork,\n    );\n    try {\n      return originalBeginWork(current, unitOfWork, lanes);\n    } catch (originalError) {\n      if (\n        didSuspendOrErrorWhileHydratingDEV() ||\n        (originalError !== null &&\n          typeof originalError === 'object' &&\n          typeof originalError.then === 'function')\n      ) {\n        // Don't replay promises.\n        // Don't replay errors if we are hydrating and have already suspended or handled an error\n        throw originalError;\n      }\n\n      // Keep this code in sync with handleError; any changes here must have\n      // corresponding changes there.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      // Don't reset current debug fiber, since we're about to work on the\n      // same fiber again.\n\n      // Unwind the failed stack frame\n      unwindInterruptedWork(current, unitOfWork, workInProgressRootRenderLanes);\n\n      // Restore the original properties of the fiber.\n      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\n\n      if (enableProfilerTimer && unitOfWork.mode & ProfileMode) {\n        // Reset the profiler timer.\n        startProfilerTimer(unitOfWork);\n      }\n\n      // Run beginWork again.\n      invokeGuardedCallback(\n        null,\n        originalBeginWork,\n        null,\n        current,\n        unitOfWork,\n        lanes,\n      );\n\n      if (hasCaughtError()) {\n        const replayError = clearCaughtError();\n        if (\n          typeof replayError === 'object' &&\n          replayError !== null &&\n          replayError._suppressLogging &&\n          typeof originalError === 'object' &&\n          originalError !== null &&\n          !originalError._suppressLogging\n        ) {\n          // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.\n          originalError._suppressLogging = true;\n        }\n      }\n      // We always throw the original error in case the second render pass is not idempotent.\n      // This can happen if a memoized function or CommonJS module doesn't throw after first invocation.\n      throw originalError;\n    }\n  };\n} else {\n  beginWork = originalBeginWork;\n}\n\nlet didWarnAboutUpdateInRender = false;\nlet didWarnAboutUpdateInRenderForAnotherComponent;\nif (__DEV__) {\n  didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n}\n\nfunction warnAboutRenderPhaseUpdatesInDEV(fiber) {\n  if (__DEV__) {\n    if (\n      ReactCurrentDebugFiberIsRenderingInDEV &&\n      !getIsUpdatingOpaqueValueInRenderPhaseInDEV()\n    ) {\n      switch (fiber.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent: {\n          const renderingComponentName =\n            (workInProgress && getComponentNameFromFiber(workInProgress)) ||\n            'Unknown';\n          // Dedupe by the rendering component because it's the one that needs to be fixed.\n          const dedupeKey = renderingComponentName;\n          if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n            didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n            const setStateComponentName =\n              getComponentNameFromFiber(fiber) || 'Unknown';\n            console.error(\n              'Cannot update a component (`%s`) while rendering a ' +\n                'different component (`%s`). To locate the bad setState() call inside `%s`, ' +\n                'follow the stack trace as described in https://reactjs.org/link/setstate-in-render',\n              setStateComponentName,\n              renderingComponentName,\n              renderingComponentName,\n            );\n          }\n          break;\n        }\n        case ClassComponent: {\n          if (!didWarnAboutUpdateInRender) {\n            console.error(\n              'Cannot update during an existing state transition (such as ' +\n                'within `render`). Render methods should be a pure ' +\n                'function of props and state.',\n            );\n            didWarnAboutUpdateInRender = true;\n          }\n          break;\n        }\n      }\n    }\n  }\n}\n\nexport function restorePendingUpdaters(root: FiberRoot, lanes: Lanes): void {\n  if (enableUpdaterTracking) {\n    if (isDevToolsPresent) {\n      const memoizedUpdaters = root.memoizedUpdaters;\n      memoizedUpdaters.forEach(schedulingFiber => {\n        addFiberToLanesMap(root, schedulingFiber, lanes);\n      });\n\n      // This function intentionally does not clear memoized updaters.\n      // Those may still be relevant to the current commit\n      // and a future one (e.g. Suspense).\n    }\n  }\n}\n\nconst fakeActCallbackNode = {};\nfunction scheduleCallback(priorityLevel, callback) {\n  if (__DEV__) {\n    // If we're currently inside an `act` scope, bypass Scheduler and push to\n    // the `act` queue instead.\n    const actQueue = ReactCurrentActQueue.current;\n    if (actQueue !== null) {\n      actQueue.push(callback);\n      return fakeActCallbackNode;\n    } else {\n      return Scheduler_scheduleCallback(priorityLevel, callback);\n    }\n  } else {\n    // In production, always call Scheduler. This function will be stripped out.\n    return Scheduler_scheduleCallback(priorityLevel, callback);\n  }\n}\n\nfunction cancelCallback(callbackNode) {\n  if (__DEV__ && callbackNode === fakeActCallbackNode) {\n    return;\n  }\n  // In production, always call Scheduler. This function will be stripped out.\n  return Scheduler_cancelCallback(callbackNode);\n}\n\nfunction shouldForceFlushFallbacksInDEV() {\n  // Never force flush in production. This function should get stripped out.\n  return __DEV__ && ReactCurrentActQueue.current !== null;\n}\n\nfunction warnIfUpdatesNotWrappedWithActDEV(fiber: Fiber): void {\n  if (__DEV__) {\n    if (fiber.mode & ConcurrentMode) {\n      if (!isConcurrentActEnvironment()) {\n        // Not in an act environment. No need to warn.\n        return;\n      }\n    } else {\n      // Legacy mode has additional cases where we suppress a warning.\n      if (!isLegacyActEnvironment(fiber)) {\n        // Not in an act environment. No need to warn.\n        return;\n      }\n      if (executionContext !== NoContext) {\n        // Legacy mode doesn't warn if the update is batched, i.e.\n        // batchedUpdates or flushSync.\n        return;\n      }\n      if (\n        fiber.tag !== FunctionComponent &&\n        fiber.tag !== ForwardRef &&\n        fiber.tag !== SimpleMemoComponent\n      ) {\n        // For backwards compatibility with pre-hooks code, legacy mode only\n        // warns for updates that originate from a hook.\n        return;\n      }\n    }\n\n    if (ReactCurrentActQueue.current === null) {\n      const previousFiber = ReactCurrentFiberCurrent;\n      try {\n        setCurrentDebugFiberInDEV(fiber);\n        console.error(\n          'An update to %s inside a test was not wrapped in act(...).\\n\\n' +\n            'When testing, code that causes React state updates should be ' +\n            'wrapped into act(...):\\n\\n' +\n            'act(() => {\\n' +\n            '  /* fire events that update state */\\n' +\n            '});\\n' +\n            '/* assert on the output */\\n\\n' +\n            \"This ensures that you're testing the behavior the user would see \" +\n            'in the browser.' +\n            ' Learn more at https://reactjs.org/link/wrap-tests-with-act',\n          getComponentNameFromFiber(fiber),\n        );\n      } finally {\n        if (previousFiber) {\n          setCurrentDebugFiberInDEV(fiber);\n        } else {\n          resetCurrentDebugFiberInDEV();\n        }\n      }\n    }\n  }\n}\n\nfunction warnIfSuspenseResolutionNotWrappedWithActDEV(root: FiberRoot): void {\n  if (__DEV__) {\n    if (\n      root.tag !== LegacyRoot &&\n      isConcurrentActEnvironment() &&\n      ReactCurrentActQueue.current === null\n    ) {\n      console.error(\n        'A suspended resource finished loading inside a test, but the event ' +\n          'was not wrapped in act(...).\\n\\n' +\n          'When testing, code that resolves suspended data should be wrapped ' +\n          'into act(...):\\n\\n' +\n          'act(() => {\\n' +\n          '  /* finish loading suspended data */\\n' +\n          '});\\n' +\n          '/* assert on the output */\\n\\n' +\n          \"This ensures that you're testing the behavior the user would see \" +\n          'in the browser.' +\n          ' Learn more at https://reactjs.org/link/wrap-tests-with-act',\n      );\n    }\n  }\n}\n\nexport function setIsRunningInsertionEffect(isRunning: boolean): void {\n  if (__DEV__) {\n    isRunningInsertionEffect = isRunning;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {ReactFragment, ReactPortal, ReactScope} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\nimport type {WorkTag} from './ReactWorkTags';\nimport type {TypeOfMode} from './ReactTypeOfMode';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport type {\n  OffscreenProps,\n  OffscreenInstance,\n} from './ReactFiberOffscreenComponent';\n\nimport {\n  createRootStrictEffectsByDefault,\n  enableCache,\n  enableStrictEffects,\n  enableProfilerTimer,\n  enableScopeAPI,\n  enableLegacyHidden,\n  enableSyncDefaultUpdates,\n  allowConcurrentByDefault,\n  enableTransitionTracing,\n  enableDebugTracing,\n} from 'shared/ReactFeatureFlags';\nimport {NoFlags, Placement, StaticMask} from './ReactFiberFlags';\nimport {ConcurrentRoot} from './ReactRootTags';\nimport {\n  IndeterminateComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  DehydratedFragment,\n  FunctionComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n  TracingMarkerComponent,\n} from './ReactWorkTags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\n\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook.old';\nimport {\n  resolveClassForHotReloading,\n  resolveFunctionForHotReloading,\n  resolveForwardRefForHotReloading,\n} from './ReactFiberHotReloading.old';\nimport {NoLanes} from './ReactFiberLane.old';\nimport {\n  NoMode,\n  ConcurrentMode,\n  DebugTracingMode,\n  ProfileMode,\n  StrictLegacyMode,\n  StrictEffectsMode,\n  ConcurrentUpdatesByDefaultMode,\n} from './ReactTypeOfMode';\nimport {\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_DEBUG_TRACING_MODE_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_CONTEXT_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_OFFSCREEN_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n  REACT_CACHE_TYPE,\n  REACT_TRACING_MARKER_TYPE,\n} from 'shared/ReactSymbols';\n\nexport type {Fiber};\n\nlet hasBadMapPolyfill;\n\nif (__DEV__) {\n  hasBadMapPolyfill = false;\n  try {\n    const nonExtensibleObject = Object.preventExtensions({});\n    /* eslint-disable no-new */\n    new Map([[nonExtensibleObject, null]]);\n    new Set([nonExtensibleObject]);\n    /* eslint-enable no-new */\n  } catch (e) {\n    // TODO: Consider warning about bad polyfills\n    hasBadMapPolyfill = true;\n  }\n}\n\nfunction FiberNode(\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n) {\n  // Instance\n  this.tag = tag;\n  this.key = key;\n  this.elementType = null;\n  this.type = null;\n  this.stateNode = null;\n\n  // Fiber\n  this.return = null;\n  this.child = null;\n  this.sibling = null;\n  this.index = 0;\n\n  this.ref = null;\n\n  this.pendingProps = pendingProps;\n  this.memoizedProps = null;\n  this.updateQueue = null;\n  this.memoizedState = null;\n  this.dependencies = null;\n\n  this.mode = mode;\n\n  // Effects\n  this.flags = NoFlags;\n  this.subtreeFlags = NoFlags;\n  this.deletions = null;\n\n  this.lanes = NoLanes;\n  this.childLanes = NoLanes;\n\n  this.alternate = null;\n\n  if (enableProfilerTimer) {\n    // Note: The following is done to avoid a v8 performance cliff.\n    //\n    // Initializing the fields below to smis and later updating them with\n    // double values will cause Fibers to end up having separate shapes.\n    // This behavior/bug has something to do with Object.preventExtension().\n    // Fortunately this only impacts DEV builds.\n    // Unfortunately it makes React unusably slow for some applications.\n    // To work around this, initialize the fields below with doubles.\n    //\n    // Learn more about this here:\n    // https://github.com/facebook/react/issues/14365\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n    this.actualDuration = Number.NaN;\n    this.actualStartTime = Number.NaN;\n    this.selfBaseDuration = Number.NaN;\n    this.treeBaseDuration = Number.NaN;\n\n    // It's okay to replace the initial doubles with smis after initialization.\n    // This won't trigger the performance cliff mentioned above,\n    // and it simplifies other profiler code (including DevTools).\n    this.actualDuration = 0;\n    this.actualStartTime = -1;\n    this.selfBaseDuration = 0;\n    this.treeBaseDuration = 0;\n  }\n\n  if (__DEV__) {\n    // This isn't directly used but is handy for debugging internals:\n\n    this._debugSource = null;\n    this._debugOwner = null;\n    this._debugNeedsRemount = false;\n    this._debugHookTypes = null;\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {\n      Object.preventExtensions(this);\n    }\n  }\n}\n\n// This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\nconst createFiber = function(\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n): Fiber {\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n  return new FiberNode(tag, pendingProps, key, mode);\n};\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function isSimpleFunctionComponent(type: any) {\n  return (\n    typeof type === 'function' &&\n    !shouldConstruct(type) &&\n    type.defaultProps === undefined\n  );\n}\n\nexport function resolveLazyComponentTag(Component: Function): WorkTag {\n  if (typeof Component === 'function') {\n    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n  } else if (Component !== undefined && Component !== null) {\n    const $$typeof = Component.$$typeof;\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\n      return ForwardRef;\n    }\n    if ($$typeof === REACT_MEMO_TYPE) {\n      return MemoComponent;\n    }\n  }\n  return IndeterminateComponent;\n}\n\n// This is used to create an alternate fiber to do work on.\nexport function createWorkInProgress(current: Fiber, pendingProps: any): Fiber {\n  let workInProgress = current.alternate;\n  if (workInProgress === null) {\n    // We use a double buffering pooling technique because we know that we'll\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\n    // node that we're free to reuse. This is lazily created to avoid allocating\n    // extra objects for things that are never updated. It also allow us to\n    // reclaim the extra memory if needed.\n    workInProgress = createFiber(\n      current.tag,\n      pendingProps,\n      current.key,\n      current.mode,\n    );\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n    if (__DEV__) {\n      // DEV-only fields\n\n      workInProgress._debugSource = current._debugSource;\n      workInProgress._debugOwner = current._debugOwner;\n      workInProgress._debugHookTypes = current._debugHookTypes;\n    }\n\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps;\n    // Needed because Blocks store data on type.\n    workInProgress.type = current.type;\n\n    // We already have an alternate.\n    // Reset the effect tag.\n    workInProgress.flags = NoFlags;\n\n    // The effects are no longer valid.\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n\n    if (enableProfilerTimer) {\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n      // This prevents time from endlessly accumulating in new commits.\n      // This has the downside of resetting values for different priority renders,\n      // But works for yielding (the common case) and should support resuming.\n      workInProgress.actualDuration = 0;\n      workInProgress.actualStartTime = -1;\n    }\n  }\n\n  // Reset all effects except static ones.\n  // Static effects are not specific to a render.\n  workInProgress.flags = current.flags & StaticMask;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n\n  // Clone the dependencies object. This is mutated during the render phase, so\n  // it cannot be shared with the current fiber.\n  const currentDependencies = current.dependencies;\n  workInProgress.dependencies =\n    currentDependencies === null\n      ? null\n      : {\n          lanes: currentDependencies.lanes,\n          firstContext: currentDependencies.firstContext,\n        };\n\n  // These will be overridden during the parent's reconciliation\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n  if (enableProfilerTimer) {\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\n  }\n\n  if (__DEV__) {\n    workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n    switch (workInProgress.tag) {\n      case IndeterminateComponent:\n      case FunctionComponent:\n      case SimpleMemoComponent:\n        workInProgress.type = resolveFunctionForHotReloading(current.type);\n        break;\n      case ClassComponent:\n        workInProgress.type = resolveClassForHotReloading(current.type);\n        break;\n      case ForwardRef:\n        workInProgress.type = resolveForwardRefForHotReloading(current.type);\n        break;\n      default:\n        break;\n    }\n  }\n\n  return workInProgress;\n}\n\n// Used to reuse a Fiber for a second pass.\nexport function resetWorkInProgress(workInProgress: Fiber, renderLanes: Lanes) {\n  // This resets the Fiber to what createFiber or createWorkInProgress would\n  // have set the values to before during the first pass. Ideally this wouldn't\n  // be necessary but unfortunately many code paths reads from the workInProgress\n  // when they should be reading from current and writing to workInProgress.\n\n  // We assume pendingProps, index, key, ref, return are still untouched to\n  // avoid doing another reconciliation.\n\n  // Reset the effect flags but keep any Placement tags, since that's something\n  // that child fiber is setting, not the reconciliation.\n  workInProgress.flags &= StaticMask | Placement;\n\n  // The effects are no longer valid.\n\n  const current = workInProgress.alternate;\n  if (current === null) {\n    // Reset to createFiber's initial values.\n    workInProgress.childLanes = NoLanes;\n    workInProgress.lanes = renderLanes;\n\n    workInProgress.child = null;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.memoizedProps = null;\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n\n    workInProgress.dependencies = null;\n\n    workInProgress.stateNode = null;\n\n    if (enableProfilerTimer) {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = 0;\n      workInProgress.treeBaseDuration = 0;\n    }\n  } else {\n    // Reset to the cloned values that createWorkInProgress would've.\n    workInProgress.childLanes = current.childLanes;\n    workInProgress.lanes = current.lanes;\n\n    workInProgress.child = current.child;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue;\n    // Needed because Blocks store data on type.\n    workInProgress.type = current.type;\n\n    // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n    const currentDependencies = current.dependencies;\n    workInProgress.dependencies =\n      currentDependencies === null\n        ? null\n        : {\n            lanes: currentDependencies.lanes,\n            firstContext: currentDependencies.firstContext,\n          };\n\n    if (enableProfilerTimer) {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n  }\n\n  return workInProgress;\n}\n\nexport function createHostRootFiber(\n  tag: RootTag,\n  isStrictMode: boolean,\n  concurrentUpdatesByDefaultOverride: null | boolean,\n): Fiber {\n  let mode;\n  if (tag === ConcurrentRoot) {\n    mode = ConcurrentMode;\n    if (isStrictMode === true) {\n      mode |= StrictLegacyMode;\n\n      if (enableStrictEffects) {\n        mode |= StrictEffectsMode;\n      }\n    } else if (enableStrictEffects && createRootStrictEffectsByDefault) {\n      mode |= StrictLegacyMode | StrictEffectsMode;\n    }\n    if (\n      // We only use this flag for our repo tests to check both behaviors.\n      // TODO: Flip this flag and rename it something like \"forceConcurrentByDefaultForTesting\"\n      !enableSyncDefaultUpdates ||\n      // Only for internal experiments.\n      (allowConcurrentByDefault && concurrentUpdatesByDefaultOverride)\n    ) {\n      mode |= ConcurrentUpdatesByDefaultMode;\n    }\n  } else {\n    mode = NoMode;\n  }\n\n  if (enableProfilerTimer && isDevToolsPresent) {\n    // Always collect profile timings when DevTools are present.\n    // This enables DevTools to start capturing timing at any point–\n    // Without some nodes in the tree having empty base times.\n    mode |= ProfileMode;\n  }\n\n  return createFiber(HostRoot, null, null, mode);\n}\n\nexport function createFiberFromTypeAndProps(\n  type: any, // React$ElementType\n  key: null | string,\n  pendingProps: any,\n  owner: null | Fiber,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  let fiberTag = IndeterminateComponent;\n  // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n  let resolvedType = type;\n  if (typeof type === 'function') {\n    if (shouldConstruct(type)) {\n      fiberTag = ClassComponent;\n      if (__DEV__) {\n        resolvedType = resolveClassForHotReloading(resolvedType);\n      }\n    } else {\n      if (__DEV__) {\n        resolvedType = resolveFunctionForHotReloading(resolvedType);\n      }\n    }\n  } else if (typeof type === 'string') {\n    fiberTag = HostComponent;\n  } else {\n    getTag: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= StrictLegacyMode;\n        if (enableStrictEffects && (mode & ConcurrentMode) !== NoMode) {\n          // Strict effects should never run on legacy roots\n          mode |= StrictEffectsMode;\n        }\n        break;\n      case REACT_PROFILER_TYPE:\n        return createFiberFromProfiler(pendingProps, mode, lanes, key);\n      case REACT_SUSPENSE_TYPE:\n        return createFiberFromSuspense(pendingProps, mode, lanes, key);\n      case REACT_SUSPENSE_LIST_TYPE:\n        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n      case REACT_OFFSCREEN_TYPE:\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n      case REACT_LEGACY_HIDDEN_TYPE:\n        if (enableLegacyHidden) {\n          return createFiberFromLegacyHidden(pendingProps, mode, lanes, key);\n        }\n      // eslint-disable-next-line no-fallthrough\n      case REACT_SCOPE_TYPE:\n        if (enableScopeAPI) {\n          return createFiberFromScope(type, pendingProps, mode, lanes, key);\n        }\n      // eslint-disable-next-line no-fallthrough\n      case REACT_CACHE_TYPE:\n        if (enableCache) {\n          return createFiberFromCache(pendingProps, mode, lanes, key);\n        }\n      // eslint-disable-next-line no-fallthrough\n      case REACT_TRACING_MARKER_TYPE:\n        if (enableTransitionTracing) {\n          return createFiberFromTracingMarker(pendingProps, mode, lanes, key);\n        }\n      // eslint-disable-next-line no-fallthrough\n      case REACT_DEBUG_TRACING_MODE_TYPE:\n        if (enableDebugTracing) {\n          fiberTag = Mode;\n          mode |= DebugTracingMode;\n          break;\n        }\n      // eslint-disable-next-line no-fallthrough\n      default: {\n        if (typeof type === 'object' && type !== null) {\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n              fiberTag = ContextProvider;\n              break getTag;\n            case REACT_CONTEXT_TYPE:\n              // This is a consumer\n              fiberTag = ContextConsumer;\n              break getTag;\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = ForwardRef;\n              if (__DEV__) {\n                resolvedType = resolveForwardRefForHotReloading(resolvedType);\n              }\n              break getTag;\n            case REACT_MEMO_TYPE:\n              fiberTag = MemoComponent;\n              break getTag;\n            case REACT_LAZY_TYPE:\n              fiberTag = LazyComponent;\n              resolvedType = null;\n              break getTag;\n          }\n        }\n        let info = '';\n        if (__DEV__) {\n          if (\n            type === undefined ||\n            (typeof type === 'object' &&\n              type !== null &&\n              Object.keys(type).length === 0)\n          ) {\n            info +=\n              ' You likely forgot to export your component from the file ' +\n              \"it's defined in, or you might have mixed up default and \" +\n              'named imports.';\n          }\n          const ownerName = owner ? getComponentNameFromFiber(owner) : null;\n          if (ownerName) {\n            info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n          }\n        }\n\n        throw new Error(\n          'Element type is invalid: expected a string (for built-in ' +\n            'components) or a class/function (for composite components) ' +\n            `but got: ${type == null ? type : typeof type}.${info}`,\n        );\n      }\n    }\n  }\n\n  const fiber = createFiber(fiberTag, pendingProps, key, mode);\n  fiber.elementType = type;\n  fiber.type = resolvedType;\n  fiber.lanes = lanes;\n\n  if (__DEV__) {\n    fiber._debugOwner = owner;\n  }\n\n  return fiber;\n}\n\nexport function createFiberFromElement(\n  element: ReactElement,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  let owner = null;\n  if (__DEV__) {\n    owner = element._owner;\n  }\n  const type = element.type;\n  const key = element.key;\n  const pendingProps = element.props;\n  const fiber = createFiberFromTypeAndProps(\n    type,\n    key,\n    pendingProps,\n    owner,\n    mode,\n    lanes,\n  );\n  if (__DEV__) {\n    fiber._debugSource = element._source;\n    fiber._debugOwner = element._owner;\n  }\n  return fiber;\n}\n\nexport function createFiberFromFragment(\n  elements: ReactFragment,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  const fiber = createFiber(Fragment, elements, key, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromScope(\n  scope: ReactScope,\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(ScopeComponent, pendingProps, key, mode);\n  fiber.type = scope;\n  fiber.elementType = scope;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromProfiler(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  if (__DEV__) {\n    if (typeof pendingProps.id !== 'string') {\n      console.error(\n        'Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.',\n        typeof pendingProps.id,\n      );\n    }\n  }\n\n  const fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n  fiber.elementType = REACT_PROFILER_TYPE;\n  fiber.lanes = lanes;\n\n  if (enableProfilerTimer) {\n    fiber.stateNode = {\n      effectDuration: 0,\n      passiveEffectDuration: 0,\n    };\n  }\n\n  return fiber;\n}\n\nexport function createFiberFromSuspense(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromSuspenseList(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromOffscreen(\n  pendingProps: OffscreenProps,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_OFFSCREEN_TYPE;\n  fiber.lanes = lanes;\n  const primaryChildInstance: OffscreenInstance = {\n    isHidden: false,\n  };\n  fiber.stateNode = primaryChildInstance;\n  return fiber;\n}\n\nexport function createFiberFromLegacyHidden(\n  pendingProps: OffscreenProps,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(LegacyHiddenComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_LEGACY_HIDDEN_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromCache(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(CacheComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_CACHE_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromTracingMarker(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(TracingMarkerComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_TRACING_MARKER_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromText(\n  content: string,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  const fiber = createFiber(HostText, content, null, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromHostInstanceForDeletion(): Fiber {\n  const fiber = createFiber(HostComponent, null, null, NoMode);\n  fiber.elementType = 'DELETED';\n  return fiber;\n}\n\nexport function createFiberFromDehydratedFragment(\n  dehydratedNode: SuspenseInstance,\n): Fiber {\n  const fiber = createFiber(DehydratedFragment, null, null, NoMode);\n  fiber.stateNode = dehydratedNode;\n  return fiber;\n}\n\nexport function createFiberFromPortal(\n  portal: ReactPortal,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  const pendingProps = portal.children !== null ? portal.children : [];\n  const fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n  fiber.lanes = lanes;\n  fiber.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null, // Used by persistent updates\n    implementation: portal.implementation,\n  };\n  return fiber;\n}\n\n// Used for stashing WIP properties to replay failed work in DEV.\nexport function assignFiberPropertiesInDEV(\n  target: Fiber | null,\n  source: Fiber,\n): Fiber {\n  if (target === null) {\n    // This Fiber's initial properties will always be overwritten.\n    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\n    target = createFiber(IndeterminateComponent, null, null, NoMode);\n  }\n\n  // This is intentionally written as a list of all properties.\n  // We tried to use Object.assign() instead but this is called in\n  // the hottest path, and Object.assign() was too slow:\n  // https://github.com/facebook/react/issues/12502\n  // This code is DEV-only so size is not a concern.\n\n  target.tag = source.tag;\n  target.key = source.key;\n  target.elementType = source.elementType;\n  target.type = source.type;\n  target.stateNode = source.stateNode;\n  target.return = source.return;\n  target.child = source.child;\n  target.sibling = source.sibling;\n  target.index = source.index;\n  target.ref = source.ref;\n  target.pendingProps = source.pendingProps;\n  target.memoizedProps = source.memoizedProps;\n  target.updateQueue = source.updateQueue;\n  target.memoizedState = source.memoizedState;\n  target.dependencies = source.dependencies;\n  target.mode = source.mode;\n  target.flags = source.flags;\n  target.subtreeFlags = source.subtreeFlags;\n  target.deletions = source.deletions;\n  target.lanes = source.lanes;\n  target.childLanes = source.childLanes;\n  target.alternate = source.alternate;\n  if (enableProfilerTimer) {\n    target.actualDuration = source.actualDuration;\n    target.actualStartTime = source.actualStartTime;\n    target.selfBaseDuration = source.selfBaseDuration;\n    target.treeBaseDuration = source.treeBaseDuration;\n  }\n\n  target._debugSource = source._debugSource;\n  target._debugOwner = source._debugOwner;\n  target._debugNeedsRemount = source._debugNeedsRemount;\n  target._debugHookTypes = source._debugHookTypes;\n  return target;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {\n  FiberRoot,\n  SuspenseHydrationCallbacks,\n  TransitionTracingCallbacks,\n} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\nimport type {Cache} from './ReactFiberCacheComponent.old';\nimport type {\n  PendingSuspenseBoundaries,\n  Transition,\n} from './ReactFiberTracingMarkerComponent.old';\n\nimport {noTimeout, supportsHydration} from './ReactFiberHostConfig';\nimport {createHostRootFiber} from './ReactFiber.old';\nimport {\n  NoLane,\n  NoLanes,\n  NoTimestamp,\n  TotalLanes,\n  createLaneMap,\n} from './ReactFiberLane.old';\nimport {\n  enableSuspenseCallback,\n  enableCache,\n  enableProfilerCommitHooks,\n  enableProfilerTimer,\n  enableUpdaterTracking,\n  enableTransitionTracing,\n} from 'shared/ReactFeatureFlags';\nimport {initializeUpdateQueue} from './ReactFiberClassUpdateQueue.old';\nimport {LegacyRoot, ConcurrentRoot} from './ReactRootTags';\nimport {createCache, retainCache} from './ReactFiberCacheComponent.old';\n\nexport type RootState = {\n  element: any,\n  isDehydrated: boolean,\n  cache: Cache,\n  pendingSuspenseBoundaries: PendingSuspenseBoundaries | null,\n  transitions: Set<Transition> | null,\n};\n\nfunction FiberRootNode(\n  containerInfo,\n  tag,\n  hydrate,\n  identifierPrefix,\n  onRecoverableError,\n) {\n  this.tag = tag;\n  this.containerInfo = containerInfo;\n  this.pendingChildren = null;\n  this.current = null;\n  this.pingCache = null;\n  this.finishedWork = null;\n  this.timeoutHandle = noTimeout;\n  this.context = null;\n  this.pendingContext = null;\n  this.callbackNode = null;\n  this.callbackPriority = NoLane;\n  this.eventTimes = createLaneMap(NoLanes);\n  this.expirationTimes = createLaneMap(NoTimestamp);\n\n  this.pendingLanes = NoLanes;\n  this.suspendedLanes = NoLanes;\n  this.pingedLanes = NoLanes;\n  this.expiredLanes = NoLanes;\n  this.mutableReadLanes = NoLanes;\n  this.finishedLanes = NoLanes;\n\n  this.entangledLanes = NoLanes;\n  this.entanglements = createLaneMap(NoLanes);\n\n  this.identifierPrefix = identifierPrefix;\n  this.onRecoverableError = onRecoverableError;\n\n  if (enableCache) {\n    this.pooledCache = null;\n    this.pooledCacheLanes = NoLanes;\n  }\n\n  if (supportsHydration) {\n    this.mutableSourceEagerHydrationData = null;\n  }\n\n  if (enableSuspenseCallback) {\n    this.hydrationCallbacks = null;\n  }\n\n  if (enableTransitionTracing) {\n    this.transitionCallbacks = null;\n    const transitionLanesMap = (this.transitionLanes = []);\n    for (let i = 0; i < TotalLanes; i++) {\n      transitionLanesMap.push(null);\n    }\n  }\n\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    this.effectDuration = 0;\n    this.passiveEffectDuration = 0;\n  }\n\n  if (enableUpdaterTracking) {\n    this.memoizedUpdaters = new Set();\n    const pendingUpdatersLaneMap = (this.pendingUpdatersLaneMap = []);\n    for (let i = 0; i < TotalLanes; i++) {\n      pendingUpdatersLaneMap.push(new Set());\n    }\n  }\n\n  if (__DEV__) {\n    switch (tag) {\n      case ConcurrentRoot:\n        this._debugRootType = hydrate ? 'hydrateRoot()' : 'createRoot()';\n        break;\n      case LegacyRoot:\n        this._debugRootType = hydrate ? 'hydrate()' : 'render()';\n        break;\n    }\n  }\n}\n\nexport function createFiberRoot(\n  containerInfo: any,\n  tag: RootTag,\n  hydrate: boolean,\n  initialChildren: ReactNodeList,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n  isStrictMode: boolean,\n  concurrentUpdatesByDefaultOverride: null | boolean,\n  // TODO: We have several of these arguments that are conceptually part of the\n  // host config, but because they are passed in at runtime, we have to thread\n  // them through the root constructor. Perhaps we should put them all into a\n  // single type, like a DynamicHostConfig that is defined by the renderer.\n  identifierPrefix: string,\n  onRecoverableError: null | ((error: mixed) => void),\n  transitionCallbacks: null | TransitionTracingCallbacks,\n): FiberRoot {\n  const root: FiberRoot = (new FiberRootNode(\n    containerInfo,\n    tag,\n    hydrate,\n    identifierPrefix,\n    onRecoverableError,\n  ): any);\n  if (enableSuspenseCallback) {\n    root.hydrationCallbacks = hydrationCallbacks;\n  }\n\n  if (enableTransitionTracing) {\n    root.transitionCallbacks = transitionCallbacks;\n  }\n\n  // Cyclic construction. This cheats the type system right now because\n  // stateNode is any.\n  const uninitializedFiber = createHostRootFiber(\n    tag,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n  );\n  root.current = uninitializedFiber;\n  uninitializedFiber.stateNode = root;\n\n  if (enableCache) {\n    const initialCache = createCache();\n    retainCache(initialCache);\n\n    // The pooledCache is a fresh cache instance that is used temporarily\n    // for newly mounted boundaries during a render. In general, the\n    // pooledCache is always cleared from the root at the end of a render:\n    // it is either released when render commits, or moved to an Offscreen\n    // component if rendering suspends. Because the lifetime of the pooled\n    // cache is distinct from the main memoizedState.cache, it must be\n    // retained separately.\n    root.pooledCache = initialCache;\n    retainCache(initialCache);\n    const initialState: RootState = {\n      element: initialChildren,\n      isDehydrated: hydrate,\n      cache: initialCache,\n      transitions: null,\n      pendingSuspenseBoundaries: null,\n    };\n    uninitializedFiber.memoizedState = initialState;\n  } else {\n    const initialState: RootState = {\n      element: initialChildren,\n      isDehydrated: hydrate,\n      cache: (null: any), // not enabled yet\n      transitions: null,\n      pendingSuspenseBoundaries: null,\n    };\n    uninitializedFiber.memoizedState = initialState;\n  }\n\n  initializeUpdateQueue(uninitializedFiber);\n\n  return root;\n}\n","export default '18.3.1-next--';\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {REACT_PORTAL_TYPE} from 'shared/ReactSymbols';\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\n\nimport type {ReactNodeList, ReactPortal} from 'shared/ReactTypes';\n\nexport function createPortal(\n  children: ReactNodeList,\n  containerInfo: any,\n  // TODO: figure out the API for cross-renderer implementation.\n  implementation: any,\n  key: ?string = null,\n): ReactPortal {\n  if (__DEV__) {\n    checkKeyStringCoercion(key);\n  }\n  return {\n    // This tag allow us to uniquely identify this as a React Portal\n    $$typeof: REACT_PORTAL_TYPE,\n    key: key == null ? null : '' + key,\n    children,\n    containerInfo,\n    implementation,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  Fiber,\n  SuspenseHydrationCallbacks,\n  TransitionTracingCallbacks,\n} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\nimport type {\n  Instance,\n  TextInstance,\n  Container,\n  PublicInstance,\n} from './ReactFiberHostConfig';\nimport type {RendererInspectionConfig} from './ReactFiberHostConfig';\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {Lane} from './ReactFiberLane.old';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {\n  findCurrentHostFiber,\n  findCurrentHostFiberWithNoPortals,\n} from './ReactFiberTreeReflection';\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport {\n  HostComponent,\n  ClassComponent,\n  HostRoot,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport isArray from 'shared/isArray';\nimport {enableSchedulingProfiler} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {getPublicInstance} from './ReactFiberHostConfig';\nimport {\n  findCurrentUnmaskedContext,\n  processChildContext,\n  emptyContextObject,\n  isContextProvider as isLegacyContextProvider,\n} from './ReactFiberContext.old';\nimport {createFiberRoot} from './ReactFiberRoot.old';\nimport {isRootDehydrated} from './ReactFiberShellHydration';\nimport {\n  injectInternals,\n  markRenderScheduled,\n  onScheduleRoot,\n} from './ReactFiberDevToolsHook.old';\nimport {\n  requestEventTime,\n  requestUpdateLane,\n  scheduleUpdateOnFiber,\n  scheduleInitialHydrationOnRoot,\n  flushRoot,\n  batchedUpdates,\n  flushSync,\n  isAlreadyRendering,\n  flushControlled,\n  deferredUpdates,\n  discreteUpdates,\n  flushPassiveEffects,\n} from './ReactFiberWorkLoop.old';\nimport {enqueueConcurrentRenderForLane} from './ReactFiberConcurrentUpdates.old';\nimport {\n  createUpdate,\n  enqueueUpdate,\n  entangleTransitions,\n} from './ReactFiberClassUpdateQueue.old';\nimport {\n  isRendering as ReactCurrentFiberIsRendering,\n  current as ReactCurrentFiberCurrent,\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {StrictLegacyMode} from './ReactTypeOfMode';\nimport {\n  SyncLane,\n  SelectiveHydrationLane,\n  NoTimestamp,\n  getHighestPriorityPendingLanes,\n  higherPriorityLane,\n} from './ReactFiberLane.old';\nimport {\n  getCurrentUpdatePriority,\n  runWithPriority,\n} from './ReactEventPriorities.old';\nimport {\n  scheduleRefresh,\n  scheduleRoot,\n  setRefreshHandler,\n  findHostInstancesForRefresh,\n} from './ReactFiberHotReloading.old';\nimport ReactVersion from 'shared/ReactVersion';\nexport {registerMutableSourceForHydration} from './ReactMutableSource.old';\nexport {createPortal} from './ReactPortal';\nexport {\n  createComponentSelector,\n  createHasPseudoClassSelector,\n  createRoleSelector,\n  createTestNameSelector,\n  createTextSelector,\n  getFindAllNodesFailureDescription,\n  findAllNodes,\n  findBoundingRects,\n  focusWithin,\n  observeVisibleRects,\n} from './ReactTestSelectors';\n\ntype OpaqueRoot = FiberRoot;\n\n// 0 is PROD, 1 is DEV.\n// Might add PROFILE later.\ntype BundleType = 0 | 1;\n\ntype DevToolsConfig = {|\n  bundleType: BundleType,\n  version: string,\n  rendererPackageName: string,\n  // Note: this actually *does* depend on Fiber internal fields.\n  // Used by \"inspect clicked DOM element\" in React DevTools.\n  findFiberByHostInstance?: (instance: Instance | TextInstance) => Fiber | null,\n  rendererConfig?: RendererInspectionConfig,\n|};\n\nlet didWarnAboutNestedUpdates;\nlet didWarnAboutFindNodeInStrictMode;\n\nif (__DEV__) {\n  didWarnAboutNestedUpdates = false;\n  didWarnAboutFindNodeInStrictMode = {};\n}\n\nfunction getContextForSubtree(\n  parentComponent: ?React$Component<any, any>,\n): Object {\n  if (!parentComponent) {\n    return emptyContextObject;\n  }\n\n  const fiber = getInstance(parentComponent);\n  const parentContext = findCurrentUnmaskedContext(fiber);\n\n  if (fiber.tag === ClassComponent) {\n    const Component = fiber.type;\n    if (isLegacyContextProvider(Component)) {\n      return processChildContext(fiber, Component, parentContext);\n    }\n  }\n\n  return parentContext;\n}\n\nfunction findHostInstance(component: Object): PublicInstance | null {\n  const fiber = getInstance(component);\n  if (fiber === undefined) {\n    if (typeof component.render === 'function') {\n      throw new Error('Unable to find node on an unmounted component.');\n    } else {\n      const keys = Object.keys(component).join(',');\n      throw new Error(\n        `Argument appears to not be a ReactComponent. Keys: ${keys}`,\n      );\n    }\n  }\n  const hostFiber = findCurrentHostFiber(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nfunction findHostInstanceWithWarning(\n  component: Object,\n  methodName: string,\n): PublicInstance | null {\n  if (__DEV__) {\n    const fiber = getInstance(component);\n    if (fiber === undefined) {\n      if (typeof component.render === 'function') {\n        throw new Error('Unable to find node on an unmounted component.');\n      } else {\n        const keys = Object.keys(component).join(',');\n        throw new Error(\n          `Argument appears to not be a ReactComponent. Keys: ${keys}`,\n        );\n      }\n    }\n    const hostFiber = findCurrentHostFiber(fiber);\n    if (hostFiber === null) {\n      return null;\n    }\n    if (hostFiber.mode & StrictLegacyMode) {\n      const componentName = getComponentNameFromFiber(fiber) || 'Component';\n      if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n        didWarnAboutFindNodeInStrictMode[componentName] = true;\n\n        const previousFiber = ReactCurrentFiberCurrent;\n        try {\n          setCurrentDebugFiberInDEV(hostFiber);\n          if (fiber.mode & StrictLegacyMode) {\n            console.error(\n              '%s is deprecated in StrictMode. ' +\n                '%s was passed an instance of %s which is inside StrictMode. ' +\n                'Instead, add a ref directly to the element you want to reference. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-find-node',\n              methodName,\n              methodName,\n              componentName,\n            );\n          } else {\n            console.error(\n              '%s is deprecated in StrictMode. ' +\n                '%s was passed an instance of %s which renders StrictMode children. ' +\n                'Instead, add a ref directly to the element you want to reference. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-find-node',\n              methodName,\n              methodName,\n              componentName,\n            );\n          }\n        } finally {\n          // Ideally this should reset to previous but this shouldn't be called in\n          // render and there's another warning for that anyway.\n          if (previousFiber) {\n            setCurrentDebugFiberInDEV(previousFiber);\n          } else {\n            resetCurrentDebugFiberInDEV();\n          }\n        }\n      }\n    }\n    return hostFiber.stateNode;\n  }\n  return findHostInstance(component);\n}\n\nexport function createContainer(\n  containerInfo: Container,\n  tag: RootTag,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n  isStrictMode: boolean,\n  concurrentUpdatesByDefaultOverride: null | boolean,\n  identifierPrefix: string,\n  onRecoverableError: (error: mixed) => void,\n  transitionCallbacks: null | TransitionTracingCallbacks,\n): OpaqueRoot {\n  const hydrate = false;\n  const initialChildren = null;\n  return createFiberRoot(\n    containerInfo,\n    tag,\n    hydrate,\n    initialChildren,\n    hydrationCallbacks,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n    identifierPrefix,\n    onRecoverableError,\n    transitionCallbacks,\n  );\n}\n\nexport function createHydrationContainer(\n  initialChildren: ReactNodeList,\n  // TODO: Remove `callback` when we delete legacy mode.\n  callback: ?Function,\n  containerInfo: Container,\n  tag: RootTag,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n  isStrictMode: boolean,\n  concurrentUpdatesByDefaultOverride: null | boolean,\n  identifierPrefix: string,\n  onRecoverableError: (error: mixed) => void,\n  transitionCallbacks: null | TransitionTracingCallbacks,\n): OpaqueRoot {\n  const hydrate = true;\n  const root = createFiberRoot(\n    containerInfo,\n    tag,\n    hydrate,\n    initialChildren,\n    hydrationCallbacks,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n    identifierPrefix,\n    onRecoverableError,\n    transitionCallbacks,\n  );\n\n  // TODO: Move this to FiberRoot constructor\n  root.context = getContextForSubtree(null);\n\n  // Schedule the initial render. In a hydration root, this is different from\n  // a regular update because the initial render must match was was rendered\n  // on the server.\n  // NOTE: This update intentionally doesn't have a payload. We're only using\n  // the update to schedule work on the root fiber (and, for legacy roots, to\n  // enqueue the callback if one is provided).\n  const current = root.current;\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(current);\n  const update = createUpdate(eventTime, lane);\n  update.callback =\n    callback !== undefined && callback !== null ? callback : null;\n  enqueueUpdate(current, update, lane);\n  scheduleInitialHydrationOnRoot(root, lane, eventTime);\n\n  return root;\n}\n\nexport function updateContainer(\n  element: ReactNodeList,\n  container: OpaqueRoot,\n  parentComponent: ?React$Component<any, any>,\n  callback: ?Function,\n): Lane {\n  if (__DEV__) {\n    onScheduleRoot(container, element);\n  }\n  const current = container.current;\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(current);\n\n  if (enableSchedulingProfiler) {\n    markRenderScheduled(lane);\n  }\n\n  const context = getContextForSubtree(parentComponent);\n  if (container.context === null) {\n    container.context = context;\n  } else {\n    container.pendingContext = context;\n  }\n\n  if (__DEV__) {\n    if (\n      ReactCurrentFiberIsRendering &&\n      ReactCurrentFiberCurrent !== null &&\n      !didWarnAboutNestedUpdates\n    ) {\n      didWarnAboutNestedUpdates = true;\n      console.error(\n        'Render methods should be a pure function of props and state; ' +\n          'triggering nested component updates from render is not allowed. ' +\n          'If necessary, trigger nested updates in componentDidUpdate.\\n\\n' +\n          'Check the render method of %s.',\n        getComponentNameFromFiber(ReactCurrentFiberCurrent) || 'Unknown',\n      );\n    }\n  }\n\n  const update = createUpdate(eventTime, lane);\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = {element};\n\n  callback = callback === undefined ? null : callback;\n  if (callback !== null) {\n    if (__DEV__) {\n      if (typeof callback !== 'function') {\n        console.error(\n          'render(...): Expected the last optional `callback` argument to be a ' +\n            'function. Instead received: %s.',\n          callback,\n        );\n      }\n    }\n    update.callback = callback;\n  }\n\n  const root = enqueueUpdate(current, update, lane);\n  if (root !== null) {\n    scheduleUpdateOnFiber(root, current, lane, eventTime);\n    entangleTransitions(root, current, lane);\n  }\n\n  return lane;\n}\n\nexport {\n  batchedUpdates,\n  deferredUpdates,\n  discreteUpdates,\n  flushControlled,\n  flushSync,\n  isAlreadyRendering,\n  flushPassiveEffects,\n};\n\nexport function getPublicRootInstance(\n  container: OpaqueRoot,\n): React$Component<any, any> | PublicInstance | null {\n  const containerFiber = container.current;\n  if (!containerFiber.child) {\n    return null;\n  }\n  switch (containerFiber.child.tag) {\n    case HostComponent:\n      return getPublicInstance(containerFiber.child.stateNode);\n    default:\n      return containerFiber.child.stateNode;\n  }\n}\n\nexport function attemptSynchronousHydration(fiber: Fiber): void {\n  switch (fiber.tag) {\n    case HostRoot: {\n      const root: FiberRoot = fiber.stateNode;\n      if (isRootDehydrated(root)) {\n        // Flush the first scheduled \"update\".\n        const lanes = getHighestPriorityPendingLanes(root);\n        flushRoot(root, lanes);\n      }\n      break;\n    }\n    case SuspenseComponent: {\n      flushSync(() => {\n        const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n        if (root !== null) {\n          const eventTime = requestEventTime();\n          scheduleUpdateOnFiber(root, fiber, SyncLane, eventTime);\n        }\n      });\n      // If we're still blocked after this, we need to increase\n      // the priority of any promises resolving within this\n      // boundary so that they next attempt also has higher pri.\n      const retryLane = SyncLane;\n      markRetryLaneIfNotHydrated(fiber, retryLane);\n      break;\n    }\n  }\n}\n\nfunction markRetryLaneImpl(fiber: Fiber, retryLane: Lane) {\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  if (suspenseState !== null && suspenseState.dehydrated !== null) {\n    suspenseState.retryLane = higherPriorityLane(\n      suspenseState.retryLane,\n      retryLane,\n    );\n  }\n}\n\n// Increases the priority of thenables when they resolve within this boundary.\nfunction markRetryLaneIfNotHydrated(fiber: Fiber, retryLane: Lane) {\n  markRetryLaneImpl(fiber, retryLane);\n  const alternate = fiber.alternate;\n  if (alternate) {\n    markRetryLaneImpl(alternate, retryLane);\n  }\n}\n\nexport function attemptDiscreteHydration(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n  const lane = SyncLane;\n  const root = enqueueConcurrentRenderForLane(fiber, lane);\n  if (root !== null) {\n    const eventTime = requestEventTime();\n    scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n  }\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport function attemptContinuousHydration(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n  const lane = SelectiveHydrationLane;\n  const root = enqueueConcurrentRenderForLane(fiber, lane);\n  if (root !== null) {\n    const eventTime = requestEventTime();\n    scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n  }\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport function attemptHydrationAtCurrentPriority(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority other than synchronously flush it.\n    return;\n  }\n  const lane = requestUpdateLane(fiber);\n  const root = enqueueConcurrentRenderForLane(fiber, lane);\n  if (root !== null) {\n    const eventTime = requestEventTime();\n    scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n  }\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport {getCurrentUpdatePriority, runWithPriority};\n\nexport {findHostInstance};\n\nexport {findHostInstanceWithWarning};\n\nexport function findHostInstanceWithNoPortals(\n  fiber: Fiber,\n): PublicInstance | null {\n  const hostFiber = findCurrentHostFiberWithNoPortals(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nlet shouldErrorImpl = fiber => null;\n\nexport function shouldError(fiber: Fiber): ?boolean {\n  return shouldErrorImpl(fiber);\n}\n\nlet shouldSuspendImpl = fiber => false;\n\nexport function shouldSuspend(fiber: Fiber): boolean {\n  return shouldSuspendImpl(fiber);\n}\n\nlet overrideHookState = null;\nlet overrideHookStateDeletePath = null;\nlet overrideHookStateRenamePath = null;\nlet overrideProps = null;\nlet overridePropsDeletePath = null;\nlet overridePropsRenamePath = null;\nlet scheduleUpdate = null;\nlet setErrorHandler = null;\nlet setSuspenseHandler = null;\n\nif (__DEV__) {\n  const copyWithDeleteImpl = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    index: number,\n  ) => {\n    const key = path[index];\n    const updated = isArray(obj) ? obj.slice() : {...obj};\n    if (index + 1 === path.length) {\n      if (isArray(updated)) {\n        updated.splice(((key: any): number), 1);\n      } else {\n        delete updated[key];\n      }\n      return updated;\n    }\n    // $FlowFixMe number or string is fine here\n    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n    return updated;\n  };\n\n  const copyWithDelete = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n  ): Object | Array<any> => {\n    return copyWithDeleteImpl(obj, path, 0);\n  };\n\n  const copyWithRenameImpl = (\n    obj: Object | Array<any>,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n    index: number,\n  ) => {\n    const oldKey = oldPath[index];\n    const updated = isArray(obj) ? obj.slice() : {...obj};\n    if (index + 1 === oldPath.length) {\n      const newKey = newPath[index];\n      // $FlowFixMe number or string is fine here\n      updated[newKey] = updated[oldKey];\n      if (isArray(updated)) {\n        updated.splice(((oldKey: any): number), 1);\n      } else {\n        delete updated[oldKey];\n      }\n    } else {\n      // $FlowFixMe number or string is fine here\n      updated[oldKey] = copyWithRenameImpl(\n        // $FlowFixMe number or string is fine here\n        obj[oldKey],\n        oldPath,\n        newPath,\n        index + 1,\n      );\n    }\n    return updated;\n  };\n\n  const copyWithRename = (\n    obj: Object | Array<any>,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ): Object | Array<any> => {\n    if (oldPath.length !== newPath.length) {\n      console.warn('copyWithRename() expects paths of the same length');\n      return;\n    } else {\n      for (let i = 0; i < newPath.length - 1; i++) {\n        if (oldPath[i] !== newPath[i]) {\n          console.warn(\n            'copyWithRename() expects paths to be the same except for the deepest key',\n          );\n          return;\n        }\n      }\n    }\n    return copyWithRenameImpl(obj, oldPath, newPath, 0);\n  };\n\n  const copyWithSetImpl = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    index: number,\n    value: any,\n  ) => {\n    if (index >= path.length) {\n      return value;\n    }\n    const key = path[index];\n    const updated = isArray(obj) ? obj.slice() : {...obj};\n    // $FlowFixMe number or string is fine here\n    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n    return updated;\n  };\n\n  const copyWithSet = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    value: any,\n  ): Object | Array<any> => {\n    return copyWithSetImpl(obj, path, 0, value);\n  };\n\n  const findHook = (fiber: Fiber, id: number) => {\n    // For now, the \"id\" of stateful hooks is just the stateful hook index.\n    // This may change in the future with e.g. nested hooks.\n    let currentHook = fiber.memoizedState;\n    while (currentHook !== null && id > 0) {\n      currentHook = currentHook.next;\n      id--;\n    }\n    return currentHook;\n  };\n\n  // Support DevTools editable values for useState and useReducer.\n  overrideHookState = (\n    fiber: Fiber,\n    id: number,\n    path: Array<string | number>,\n    value: any,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithSet(hook.memoizedState, path, value);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  };\n  overrideHookStateDeletePath = (\n    fiber: Fiber,\n    id: number,\n    path: Array<string | number>,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithDelete(hook.memoizedState, path);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  };\n  overrideHookStateRenamePath = (\n    fiber: Fiber,\n    id: number,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithRename(hook.memoizedState, oldPath, newPath);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  };\n\n  // Support DevTools props for function components, forwardRef, memo, host components, etc.\n  overrideProps = (fiber: Fiber, path: Array<string | number>, value: any) => {\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n  overridePropsDeletePath = (fiber: Fiber, path: Array<string | number>) => {\n    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n  overridePropsRenamePath = (\n    fiber: Fiber,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ) => {\n    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  scheduleUpdate = (fiber: Fiber) => {\n    const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  setErrorHandler = (newShouldErrorImpl: Fiber => ?boolean) => {\n    shouldErrorImpl = newShouldErrorImpl;\n  };\n\n  setSuspenseHandler = (newShouldSuspendImpl: Fiber => boolean) => {\n    shouldSuspendImpl = newShouldSuspendImpl;\n  };\n}\n\nfunction findHostInstanceByFiber(fiber: Fiber): Instance | TextInstance | null {\n  const hostFiber = findCurrentHostFiber(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nfunction emptyFindFiberByHostInstance(\n  instance: Instance | TextInstance,\n): Fiber | null {\n  return null;\n}\n\nfunction getCurrentFiberForDevTools() {\n  return ReactCurrentFiberCurrent;\n}\n\nexport function injectIntoDevTools(devToolsConfig: DevToolsConfig): boolean {\n  const {findFiberByHostInstance} = devToolsConfig;\n  const {ReactCurrentDispatcher} = ReactSharedInternals;\n\n  return injectInternals({\n    bundleType: devToolsConfig.bundleType,\n    version: devToolsConfig.version,\n    rendererPackageName: devToolsConfig.rendererPackageName,\n    rendererConfig: devToolsConfig.rendererConfig,\n    overrideHookState,\n    overrideHookStateDeletePath,\n    overrideHookStateRenamePath,\n    overrideProps,\n    overridePropsDeletePath,\n    overridePropsRenamePath,\n    setErrorHandler,\n    setSuspenseHandler,\n    scheduleUpdate,\n    currentDispatcherRef: ReactCurrentDispatcher,\n    findHostInstanceByFiber,\n    findFiberByHostInstance:\n      findFiberByHostInstance || emptyFindFiberByHostInstance,\n    // React Refresh\n    findHostInstancesForRefresh: __DEV__ ? findHostInstancesForRefresh : null,\n    scheduleRefresh: __DEV__ ? scheduleRefresh : null,\n    scheduleRoot: __DEV__ ? scheduleRoot : null,\n    setRefreshHandler: __DEV__ ? setRefreshHandler : null,\n    // Enables DevTools to append owner stacks to error messages in DEV mode.\n    getCurrentFiber: __DEV__ ? getCurrentFiberForDevTools : null,\n    // Enables DevTools to detect reconciler version rather than renderer version\n    // which may not match for third party renderers.\n    reconcilerVersion: ReactVersion,\n  });\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {MutableSource, ReactNodeList} from 'shared/ReactTypes';\nimport type {\n  FiberRoot,\n  TransitionTracingCallbacks,\n} from 'react-reconciler/src/ReactInternalTypes';\n\nimport {queueExplicitHydrationTarget} from '../events/ReactDOMEventReplaying';\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\n\nexport type RootType = {\n  render(children: ReactNodeList): void,\n  unmount(): void,\n  _internalRoot: FiberRoot | null,\n  ...\n};\n\nexport type CreateRootOptions = {\n  unstable_strictMode?: boolean,\n  unstable_concurrentUpdatesByDefault?: boolean,\n  identifierPrefix?: string,\n  onRecoverableError?: (error: mixed) => void,\n  transitionCallbacks?: TransitionTracingCallbacks,\n  ...\n};\n\nexport type HydrateRootOptions = {\n  // Hydration options\n  hydratedSources?: Array<MutableSource<any>>,\n  onHydrated?: (suspenseNode: Comment) => void,\n  onDeleted?: (suspenseNode: Comment) => void,\n  // Options for all roots\n  unstable_strictMode?: boolean,\n  unstable_concurrentUpdatesByDefault?: boolean,\n  identifierPrefix?: string,\n  onRecoverableError?: (error: mixed) => void,\n  ...\n};\n\nimport {\n  isContainerMarkedAsRoot,\n  markContainerAsRoot,\n  unmarkContainerAsRoot,\n} from './ReactDOMComponentTree';\nimport {listenToAllSupportedEvents} from '../events/DOMPluginEventSystem';\nimport {\n  ELEMENT_NODE,\n  COMMENT_NODE,\n  DOCUMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n} from '../shared/HTMLNodeType';\n\nimport {\n  createContainer,\n  createHydrationContainer,\n  updateContainer,\n  findHostInstanceWithNoPortals,\n  registerMutableSourceForHydration,\n  flushSync,\n  isAlreadyRendering,\n} from 'react-reconciler/src/ReactFiberReconciler';\nimport {ConcurrentRoot} from 'react-reconciler/src/ReactRootTags';\nimport {\n  allowConcurrentByDefault,\n  disableCommentsAsDOMContainers,\n} from 'shared/ReactFeatureFlags';\n\n/* global reportError */\nconst defaultOnRecoverableError =\n  typeof reportError === 'function'\n    ? // In modern browsers, reportError will dispatch an error event,\n      // emulating an uncaught JavaScript error.\n      reportError\n    : (error: mixed) => {\n        // In older browsers and test environments, fallback to console.error.\n        // eslint-disable-next-line react-internal/no-production-logging\n        console['error'](error);\n      };\n\nfunction ReactDOMRoot(internalRoot: FiberRoot) {\n  this._internalRoot = internalRoot;\n}\n\nReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(\n  children: ReactNodeList,\n): void {\n  const root = this._internalRoot;\n  if (root === null) {\n    throw new Error('Cannot update an unmounted root.');\n  }\n\n  if (__DEV__) {\n    if (typeof arguments[1] === 'function') {\n      console.error(\n        'render(...): does not support the second callback argument. ' +\n          'To execute a side effect after rendering, declare it in a component body with useEffect().',\n      );\n    } else if (isValidContainer(arguments[1])) {\n      console.error(\n        'You passed a container to the second argument of root.render(...). ' +\n          \"You don't need to pass it again since you already passed it to create the root.\",\n      );\n    } else if (typeof arguments[1] !== 'undefined') {\n      console.error(\n        'You passed a second argument to root.render(...) but it only accepts ' +\n          'one argument.',\n      );\n    }\n\n    const container = root.containerInfo;\n\n    if (container.nodeType !== COMMENT_NODE) {\n      const hostInstance = findHostInstanceWithNoPortals(root.current);\n      if (hostInstance) {\n        if (hostInstance.parentNode !== container) {\n          console.error(\n            'render(...): It looks like the React-rendered content of the ' +\n              'root container was removed without using React. This is not ' +\n              'supported and will cause errors. Instead, call ' +\n              \"root.unmount() to empty a root's container.\",\n          );\n        }\n      }\n    }\n  }\n  updateContainer(children, root, null, null);\n};\n\nReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function(): void {\n  if (__DEV__) {\n    if (typeof arguments[0] === 'function') {\n      console.error(\n        'unmount(...): does not support a callback argument. ' +\n          'To execute a side effect after rendering, declare it in a component body with useEffect().',\n      );\n    }\n  }\n  const root = this._internalRoot;\n  if (root !== null) {\n    this._internalRoot = null;\n    const container = root.containerInfo;\n    if (__DEV__) {\n      if (isAlreadyRendering()) {\n        console.error(\n          'Attempted to synchronously unmount a root while React was already ' +\n            'rendering. React cannot finish unmounting the root until the ' +\n            'current render has completed, which may lead to a race condition.',\n        );\n      }\n    }\n    flushSync(() => {\n      updateContainer(null, root, null, null);\n    });\n    unmarkContainerAsRoot(container);\n  }\n};\n\nexport function createRoot(\n  container: Element | Document | DocumentFragment,\n  options?: CreateRootOptions,\n): RootType {\n  if (!isValidContainer(container)) {\n    throw new Error('createRoot(...): Target container is not a DOM element.');\n  }\n\n  warnIfReactDOMContainerInDEV(container);\n\n  let isStrictMode = false;\n  let concurrentUpdatesByDefaultOverride = false;\n  let identifierPrefix = '';\n  let onRecoverableError = defaultOnRecoverableError;\n  let transitionCallbacks = null;\n\n  if (options !== null && options !== undefined) {\n    if (__DEV__) {\n      if ((options: any).hydrate) {\n        console.warn(\n          'hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.',\n        );\n      } else {\n        if (\n          typeof options === 'object' &&\n          options !== null &&\n          (options: any).$$typeof === REACT_ELEMENT_TYPE\n        ) {\n          console.error(\n            'You passed a JSX element to createRoot. You probably meant to ' +\n              'call root.render instead. ' +\n              'Example usage:\\n\\n' +\n              '  let root = createRoot(domContainer);\\n' +\n              '  root.render(<App />);',\n          );\n        }\n      }\n    }\n    if (options.unstable_strictMode === true) {\n      isStrictMode = true;\n    }\n    if (\n      allowConcurrentByDefault &&\n      options.unstable_concurrentUpdatesByDefault === true\n    ) {\n      concurrentUpdatesByDefaultOverride = true;\n    }\n    if (options.identifierPrefix !== undefined) {\n      identifierPrefix = options.identifierPrefix;\n    }\n    if (options.onRecoverableError !== undefined) {\n      onRecoverableError = options.onRecoverableError;\n    }\n    if (options.transitionCallbacks !== undefined) {\n      transitionCallbacks = options.transitionCallbacks;\n    }\n  }\n\n  const root = createContainer(\n    container,\n    ConcurrentRoot,\n    null,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n    identifierPrefix,\n    onRecoverableError,\n    transitionCallbacks,\n  );\n  markContainerAsRoot(root.current, container);\n\n  const rootContainerElement: Document | Element | DocumentFragment =\n    container.nodeType === COMMENT_NODE\n      ? (container.parentNode: any)\n      : container;\n  listenToAllSupportedEvents(rootContainerElement);\n\n  return new ReactDOMRoot(root);\n}\n\nfunction ReactDOMHydrationRoot(internalRoot: FiberRoot) {\n  this._internalRoot = internalRoot;\n}\nfunction scheduleHydration(target: Node) {\n  if (target) {\n    queueExplicitHydrationTarget(target);\n  }\n}\nReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;\n\nexport function hydrateRoot(\n  container: Document | Element,\n  initialChildren: ReactNodeList,\n  options?: HydrateRootOptions,\n): RootType {\n  if (!isValidContainer(container)) {\n    throw new Error('hydrateRoot(...): Target container is not a DOM element.');\n  }\n\n  warnIfReactDOMContainerInDEV(container);\n\n  if (__DEV__) {\n    if (initialChildren === undefined) {\n      console.error(\n        'Must provide initial children as second argument to hydrateRoot. ' +\n          'Example usage: hydrateRoot(domContainer, <App />)',\n      );\n    }\n  }\n\n  // For now we reuse the whole bag of options since they contain\n  // the hydration callbacks.\n  const hydrationCallbacks = options != null ? options : null;\n  // TODO: Delete this option\n  const mutableSources = (options != null && options.hydratedSources) || null;\n\n  let isStrictMode = false;\n  let concurrentUpdatesByDefaultOverride = false;\n  let identifierPrefix = '';\n  let onRecoverableError = defaultOnRecoverableError;\n  if (options !== null && options !== undefined) {\n    if (options.unstable_strictMode === true) {\n      isStrictMode = true;\n    }\n    if (\n      allowConcurrentByDefault &&\n      options.unstable_concurrentUpdatesByDefault === true\n    ) {\n      concurrentUpdatesByDefaultOverride = true;\n    }\n    if (options.identifierPrefix !== undefined) {\n      identifierPrefix = options.identifierPrefix;\n    }\n    if (options.onRecoverableError !== undefined) {\n      onRecoverableError = options.onRecoverableError;\n    }\n  }\n\n  const root = createHydrationContainer(\n    initialChildren,\n    null,\n    container,\n    ConcurrentRoot,\n    hydrationCallbacks,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n    identifierPrefix,\n    onRecoverableError,\n    // TODO(luna) Support hydration later\n    null,\n  );\n  markContainerAsRoot(root.current, container);\n  // This can't be a comment node since hydration doesn't work on comment nodes anyway.\n  listenToAllSupportedEvents(container);\n\n  if (mutableSources) {\n    for (let i = 0; i < mutableSources.length; i++) {\n      const mutableSource = mutableSources[i];\n      registerMutableSourceForHydration(root, mutableSource);\n    }\n  }\n\n  return new ReactDOMHydrationRoot(root);\n}\n\nexport function isValidContainer(node: any): boolean {\n  return !!(\n    node &&\n    (node.nodeType === ELEMENT_NODE ||\n      node.nodeType === DOCUMENT_NODE ||\n      node.nodeType === DOCUMENT_FRAGMENT_NODE ||\n      (!disableCommentsAsDOMContainers &&\n        node.nodeType === COMMENT_NODE &&\n        (node: any).nodeValue === ' react-mount-point-unstable '))\n  );\n}\n\n// TODO: Remove this function which also includes comment nodes.\n// We only use it in places that are currently more relaxed.\nexport function isValidContainerLegacy(node: any): boolean {\n  return !!(\n    node &&\n    (node.nodeType === ELEMENT_NODE ||\n      node.nodeType === DOCUMENT_NODE ||\n      node.nodeType === DOCUMENT_FRAGMENT_NODE ||\n      (node.nodeType === COMMENT_NODE &&\n        (node: any).nodeValue === ' react-mount-point-unstable '))\n  );\n}\n\nfunction warnIfReactDOMContainerInDEV(container: any) {\n  if (__DEV__) {\n    if (\n      container.nodeType === ELEMENT_NODE &&\n      ((container: any): Element).tagName &&\n      ((container: any): Element).tagName.toUpperCase() === 'BODY'\n    ) {\n      console.error(\n        'createRoot(): Creating roots directly with document.body is ' +\n          'discouraged, since its children are often manipulated by third-party ' +\n          'scripts and browser extensions. This may lead to subtle ' +\n          'reconciliation issues. Try using a container element created ' +\n          'for your app.',\n      );\n    }\n    if (isContainerMarkedAsRoot(container)) {\n      if (container._reactRootContainer) {\n        console.error(\n          'You are calling ReactDOMClient.createRoot() on a container that was previously ' +\n            'passed to ReactDOM.render(). This is not supported.',\n        );\n      } else {\n        console.error(\n          'You are calling ReactDOMClient.createRoot() on a container that ' +\n            'has already been passed to createRoot() before. Instead, call ' +\n            'root.render() on the existing root instead if you want to update it.',\n        );\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Container} from './ReactDOMHostConfig';\nimport type {FiberRoot} from 'react-reconciler/src/ReactInternalTypes';\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport {\n  getInstanceFromNode,\n  isContainerMarkedAsRoot,\n  markContainerAsRoot,\n  unmarkContainerAsRoot,\n} from './ReactDOMComponentTree';\nimport {listenToAllSupportedEvents} from '../events/DOMPluginEventSystem';\nimport {isValidContainerLegacy} from './ReactDOMRoot';\nimport {\n  DOCUMENT_NODE,\n  ELEMENT_NODE,\n  COMMENT_NODE,\n} from '../shared/HTMLNodeType';\n\nimport {\n  createContainer,\n  createHydrationContainer,\n  findHostInstanceWithNoPortals,\n  updateContainer,\n  flushSync,\n  getPublicRootInstance,\n  findHostInstance,\n  findHostInstanceWithWarning,\n} from 'react-reconciler/src/ReactFiberReconciler';\nimport {LegacyRoot} from 'react-reconciler/src/ReactRootTags';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {has as hasInstance} from 'shared/ReactInstanceMap';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nlet topLevelUpdateWarnings;\n\nif (__DEV__) {\n  topLevelUpdateWarnings = (container: Container) => {\n    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {\n      const hostInstance = findHostInstanceWithNoPortals(\n        container._reactRootContainer.current,\n      );\n      if (hostInstance) {\n        if (hostInstance.parentNode !== container) {\n          console.error(\n            'render(...): It looks like the React-rendered content of this ' +\n              'container was removed without using React. This is not ' +\n              'supported and will cause errors. Instead, call ' +\n              'ReactDOM.unmountComponentAtNode to empty a container.',\n          );\n        }\n      }\n    }\n\n    const isRootRenderedBySomeReact = !!container._reactRootContainer;\n    const rootEl = getReactRootElementInContainer(container);\n    const hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));\n\n    if (hasNonRootReactChild && !isRootRenderedBySomeReact) {\n      console.error(\n        'render(...): Replacing React-rendered children with a new root ' +\n          'component. If you intended to update the children of this node, ' +\n          'you should instead have the existing children update their state ' +\n          'and render the new components instead of calling ReactDOM.render.',\n      );\n    }\n\n    if (\n      container.nodeType === ELEMENT_NODE &&\n      ((container: any): Element).tagName &&\n      ((container: any): Element).tagName.toUpperCase() === 'BODY'\n    ) {\n      console.error(\n        'render(): Rendering components directly into document.body is ' +\n          'discouraged, since its children are often manipulated by third-party ' +\n          'scripts and browser extensions. This may lead to subtle ' +\n          'reconciliation issues. Try rendering into a container element created ' +\n          'for your app.',\n      );\n    }\n  };\n}\n\nfunction getReactRootElementInContainer(container: any) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOCUMENT_NODE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction noopOnRecoverableError() {\n  // This isn't reachable because onRecoverableError isn't called in the\n  // legacy API.\n}\n\nfunction legacyCreateRootFromDOMContainer(\n  container: Container,\n  initialChildren: ReactNodeList,\n  parentComponent: ?React$Component<any, any>,\n  callback: ?Function,\n  isHydrationContainer: boolean,\n): FiberRoot {\n  if (isHydrationContainer) {\n    if (typeof callback === 'function') {\n      const originalCallback = callback;\n      callback = function() {\n        const instance = getPublicRootInstance(root);\n        originalCallback.call(instance);\n      };\n    }\n\n    const root = createHydrationContainer(\n      initialChildren,\n      callback,\n      container,\n      LegacyRoot,\n      null, // hydrationCallbacks\n      false, // isStrictMode\n      false, // concurrentUpdatesByDefaultOverride,\n      '', // identifierPrefix\n      noopOnRecoverableError,\n      // TODO(luna) Support hydration later\n      null,\n    );\n    container._reactRootContainer = root;\n    markContainerAsRoot(root.current, container);\n\n    const rootContainerElement =\n      container.nodeType === COMMENT_NODE ? container.parentNode : container;\n    listenToAllSupportedEvents(rootContainerElement);\n\n    flushSync();\n    return root;\n  } else {\n    // First clear any existing content.\n    let rootSibling;\n    while ((rootSibling = container.lastChild)) {\n      container.removeChild(rootSibling);\n    }\n\n    if (typeof callback === 'function') {\n      const originalCallback = callback;\n      callback = function() {\n        const instance = getPublicRootInstance(root);\n        originalCallback.call(instance);\n      };\n    }\n\n    const root = createContainer(\n      container,\n      LegacyRoot,\n      null, // hydrationCallbacks\n      false, // isStrictMode\n      false, // concurrentUpdatesByDefaultOverride,\n      '', // identifierPrefix\n      noopOnRecoverableError, // onRecoverableError\n      null, // transitionCallbacks\n    );\n    container._reactRootContainer = root;\n    markContainerAsRoot(root.current, container);\n\n    const rootContainerElement =\n      container.nodeType === COMMENT_NODE ? container.parentNode : container;\n    listenToAllSupportedEvents(rootContainerElement);\n\n    // Initial mount should not be batched.\n    flushSync(() => {\n      updateContainer(initialChildren, root, parentComponent, callback);\n    });\n\n    return root;\n  }\n}\n\nfunction warnOnInvalidCallback(callback: mixed, callerName: string): void {\n  if (__DEV__) {\n    if (callback !== null && typeof callback !== 'function') {\n      console.error(\n        '%s(...): Expected the last optional `callback` argument to be a ' +\n          'function. Instead received: %s.',\n        callerName,\n        callback,\n      );\n    }\n  }\n}\n\nfunction legacyRenderSubtreeIntoContainer(\n  parentComponent: ?React$Component<any, any>,\n  children: ReactNodeList,\n  container: Container,\n  forceHydrate: boolean,\n  callback: ?Function,\n) {\n  if (__DEV__) {\n    topLevelUpdateWarnings(container);\n    warnOnInvalidCallback(callback === undefined ? null : callback, 'render');\n  }\n\n  const maybeRoot = container._reactRootContainer;\n  let root: FiberRoot;\n  if (!maybeRoot) {\n    // Initial mount\n    root = legacyCreateRootFromDOMContainer(\n      container,\n      children,\n      parentComponent,\n      callback,\n      forceHydrate,\n    );\n  } else {\n    root = maybeRoot;\n    if (typeof callback === 'function') {\n      const originalCallback = callback;\n      callback = function() {\n        const instance = getPublicRootInstance(root);\n        originalCallback.call(instance);\n      };\n    }\n    // Update\n    updateContainer(children, root, parentComponent, callback);\n  }\n  return getPublicRootInstance(root);\n}\n\nlet didWarnAboutFindDOMNode = false;\n\nexport function findDOMNode(\n  componentOrElement: Element | ?React$Component<any, any>,\n): null | Element | Text {\n  if (__DEV__) {\n    if (!didWarnAboutFindDOMNode) {\n      didWarnAboutFindDOMNode = true;\n      console.error(\n        'findDOMNode is deprecated and will be removed in the next major ' +\n          'release. Instead, add a ref directly to the element you want ' +\n          'to reference. Learn more about using refs safely here: ' +\n          'https://reactjs.org/link/strict-mode-find-node',\n      );\n    }\n\n    const owner = (ReactCurrentOwner.current: any);\n    if (owner !== null && owner.stateNode !== null) {\n      const warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;\n      if (!warnedAboutRefsInRender) {\n        console.error(\n          '%s is accessing findDOMNode inside its render(). ' +\n            'render() should be a pure function of props and state. It should ' +\n            'never access something that requires stale data from the previous ' +\n            'render, such as refs. Move this logic to componentDidMount and ' +\n            'componentDidUpdate instead.',\n          getComponentNameFromType(owner.type) || 'A component',\n        );\n      }\n      owner.stateNode._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if ((componentOrElement: any).nodeType === ELEMENT_NODE) {\n    return (componentOrElement: any);\n  }\n  if (__DEV__) {\n    return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');\n  }\n  return findHostInstance(componentOrElement);\n}\n\nexport function hydrate(\n  element: React$Node,\n  container: Container,\n  callback: ?Function,\n) {\n  if (__DEV__) {\n    console.error(\n      'ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot ' +\n        'instead. Until you switch to the new API, your app will behave as ' +\n        \"if it's running React 17. Learn \" +\n        'more: https://reactjs.org/link/switch-to-createroot',\n    );\n  }\n\n  if (!isValidContainerLegacy(container)) {\n    throw new Error('Target container is not a DOM element.');\n  }\n\n  if (__DEV__) {\n    const isModernRoot =\n      isContainerMarkedAsRoot(container) &&\n      container._reactRootContainer === undefined;\n    if (isModernRoot) {\n      console.error(\n        'You are calling ReactDOM.hydrate() on a container that was previously ' +\n          'passed to ReactDOMClient.createRoot(). This is not supported. ' +\n          'Did you mean to call hydrateRoot(container, element)?',\n      );\n    }\n  }\n  // TODO: throw or warn if we couldn't hydrate?\n  return legacyRenderSubtreeIntoContainer(\n    null,\n    element,\n    container,\n    true,\n    callback,\n  );\n}\n\nexport function render(\n  element: React$Element<any>,\n  container: Container,\n  callback: ?Function,\n) {\n  if (__DEV__) {\n    console.error(\n      'ReactDOM.render is no longer supported in React 18. Use createRoot ' +\n        'instead. Until you switch to the new API, your app will behave as ' +\n        \"if it's running React 17. Learn \" +\n        'more: https://reactjs.org/link/switch-to-createroot',\n    );\n  }\n\n  if (!isValidContainerLegacy(container)) {\n    throw new Error('Target container is not a DOM element.');\n  }\n\n  if (__DEV__) {\n    const isModernRoot =\n      isContainerMarkedAsRoot(container) &&\n      container._reactRootContainer === undefined;\n    if (isModernRoot) {\n      console.error(\n        'You are calling ReactDOM.render() on a container that was previously ' +\n          'passed to ReactDOMClient.createRoot(). This is not supported. ' +\n          'Did you mean to call root.render(element)?',\n      );\n    }\n  }\n  return legacyRenderSubtreeIntoContainer(\n    null,\n    element,\n    container,\n    false,\n    callback,\n  );\n}\n\nexport function unstable_renderSubtreeIntoContainer(\n  parentComponent: React$Component<any, any>,\n  element: React$Element<any>,\n  containerNode: Container,\n  callback: ?Function,\n) {\n  if (__DEV__) {\n    console.error(\n      'ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported ' +\n        'in React 18. Consider using a portal instead. Until you switch to ' +\n        \"the createRoot API, your app will behave as if it's running React \" +\n        '17. Learn more: https://reactjs.org/link/switch-to-createroot',\n    );\n  }\n\n  if (!isValidContainerLegacy(containerNode)) {\n    throw new Error('Target container is not a DOM element.');\n  }\n\n  if (parentComponent == null || !hasInstance(parentComponent)) {\n    throw new Error('parentComponent must be a valid React Component');\n  }\n\n  return legacyRenderSubtreeIntoContainer(\n    parentComponent,\n    element,\n    containerNode,\n    false,\n    callback,\n  );\n}\n\nlet didWarnAboutUnmountComponentAtNode = false;\nexport function unmountComponentAtNode(container: Container) {\n  if (__DEV__) {\n    if (!didWarnAboutUnmountComponentAtNode) {\n      didWarnAboutUnmountComponentAtNode = true;\n      console.error(\n        'unmountComponentAtNode is deprecated and will be removed in the ' +\n          'next major release. Switch to the createRoot API. Learn ' +\n          'more: https://reactjs.org/link/switch-to-createroot',\n      );\n    }\n  }\n\n  if (!isValidContainerLegacy(container)) {\n    throw new Error(\n      'unmountComponentAtNode(...): Target container is not a DOM element.',\n    );\n  }\n\n  if (__DEV__) {\n    const isModernRoot =\n      isContainerMarkedAsRoot(container) &&\n      container._reactRootContainer === undefined;\n    if (isModernRoot) {\n      console.error(\n        'You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' +\n          'passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?',\n      );\n    }\n  }\n\n  if (container._reactRootContainer) {\n    if (__DEV__) {\n      const rootEl = getReactRootElementInContainer(container);\n      const renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);\n      if (renderedByDifferentReact) {\n        console.error(\n          \"unmountComponentAtNode(): The node you're attempting to unmount \" +\n            'was rendered by another copy of React.',\n        );\n      }\n    }\n\n    // Unmount should not be batched.\n    flushSync(() => {\n      legacyRenderSubtreeIntoContainer(null, null, container, false, () => {\n        // $FlowFixMe This should probably use `delete container._reactRootContainer`\n        container._reactRootContainer = null;\n        unmarkContainerAsRoot(container);\n      });\n    });\n    // If you call unmountComponentAtNode twice in quick succession, you'll\n    // get `true` twice. That's probably fine?\n    return true;\n  } else {\n    if (__DEV__) {\n      const rootEl = getReactRootElementInContainer(container);\n      const hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));\n\n      // Check if the container itself is a React root node.\n      const isContainerReactRoot =\n        container.nodeType === ELEMENT_NODE &&\n        isValidContainerLegacy(container.parentNode) &&\n        !!container.parentNode._reactRootContainer;\n\n      if (hasNonRootReactChild) {\n        console.error(\n          \"unmountComponentAtNode(): The node you're attempting to unmount \" +\n            'was rendered by React and is not a top-level container. %s',\n          isContainerReactRoot\n            ? 'You may have accidentally passed in a React root node instead ' +\n                'of its container.'\n            : 'Instead, have the parent component update its state and ' +\n                'rerender in order to remove this component.',\n        );\n      }\n    }\n\n    return false;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {Container} from './ReactDOMHostConfig';\nimport type {\n  RootType,\n  HydrateRootOptions,\n  CreateRootOptions,\n} from './ReactDOMRoot';\n\nimport {\n  findDOMNode,\n  render,\n  hydrate,\n  unstable_renderSubtreeIntoContainer,\n  unmountComponentAtNode,\n} from './ReactDOMLegacy';\nimport {\n  createRoot as createRootImpl,\n  hydrateRoot as hydrateRootImpl,\n  isValidContainer,\n} from './ReactDOMRoot';\nimport {createEventHandle} from './ReactDOMEventHandle';\n\nimport {\n  batchedUpdates,\n  discreteUpdates,\n  flushSync as flushSyncWithoutWarningIfAlreadyRendering,\n  isAlreadyRendering,\n  flushControlled,\n  injectIntoDevTools,\n  attemptSynchronousHydration,\n  attemptDiscreteHydration,\n  attemptContinuousHydration,\n  attemptHydrationAtCurrentPriority,\n} from 'react-reconciler/src/ReactFiberReconciler';\nimport {\n  runWithPriority,\n  getCurrentUpdatePriority,\n} from 'react-reconciler/src/ReactEventPriorities';\nimport {createPortal as createPortalImpl} from 'react-reconciler/src/ReactPortal';\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\nimport ReactVersion from 'shared/ReactVersion';\nimport {enableNewReconciler} from 'shared/ReactFeatureFlags';\n\nimport {\n  getInstanceFromNode,\n  getNodeFromInstance,\n  getFiberCurrentPropsFromNode,\n  getClosestInstanceFromNode,\n} from './ReactDOMComponentTree';\nimport {restoreControlledState} from './ReactDOMComponent';\nimport {\n  setAttemptSynchronousHydration,\n  setAttemptDiscreteHydration,\n  setAttemptContinuousHydration,\n  setAttemptHydrationAtCurrentPriority,\n  setGetCurrentUpdatePriority,\n  setAttemptHydrationAtPriority,\n} from '../events/ReactDOMEventReplaying';\nimport {setBatchingImplementation} from '../events/ReactDOMUpdateBatching';\nimport {\n  setRestoreImplementation,\n  enqueueStateRestore,\n  restoreStateIfNeeded,\n} from '../events/ReactDOMControlledComponent';\n\nsetAttemptSynchronousHydration(attemptSynchronousHydration);\nsetAttemptDiscreteHydration(attemptDiscreteHydration);\nsetAttemptContinuousHydration(attemptContinuousHydration);\nsetAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority);\nsetGetCurrentUpdatePriority(getCurrentUpdatePriority);\nsetAttemptHydrationAtPriority(runWithPriority);\n\nif (__DEV__) {\n  if (\n    typeof Map !== 'function' ||\n    // $FlowIssue Flow incorrectly thinks Map has no prototype\n    Map.prototype == null ||\n    typeof Map.prototype.forEach !== 'function' ||\n    typeof Set !== 'function' ||\n    // $FlowIssue Flow incorrectly thinks Set has no prototype\n    Set.prototype == null ||\n    typeof Set.prototype.clear !== 'function' ||\n    typeof Set.prototype.forEach !== 'function'\n  ) {\n    console.error(\n      'React depends on Map and Set built-in types. Make sure that you load a ' +\n        'polyfill in older browsers. https://reactjs.org/link/react-polyfills',\n    );\n  }\n}\n\nsetRestoreImplementation(restoreControlledState);\nsetBatchingImplementation(\n  batchedUpdates,\n  discreteUpdates,\n  flushSyncWithoutWarningIfAlreadyRendering,\n);\n\nfunction createPortal(\n  children: ReactNodeList,\n  container: Element | DocumentFragment,\n  key: ?string = null,\n): React$Portal {\n  if (!isValidContainer(container)) {\n    throw new Error('Target container is not a DOM element.');\n  }\n\n  // TODO: pass ReactDOM portal implementation as third argument\n  // $FlowFixMe The Flow type is opaque but there's no way to actually create it.\n  return createPortalImpl(children, container, null, key);\n}\n\nfunction renderSubtreeIntoContainer(\n  parentComponent: React$Component<any, any>,\n  element: React$Element<any>,\n  containerNode: Container,\n  callback: ?Function,\n) {\n  return unstable_renderSubtreeIntoContainer(\n    parentComponent,\n    element,\n    containerNode,\n    callback,\n  );\n}\n\nconst Internals = {\n  usingClientEntryPoint: false,\n  // Keep in sync with ReactTestUtils.js.\n  // This is an array for better minification.\n  Events: [\n    getInstanceFromNode,\n    getNodeFromInstance,\n    getFiberCurrentPropsFromNode,\n    enqueueStateRestore,\n    restoreStateIfNeeded,\n    batchedUpdates,\n  ],\n};\n\nfunction createRoot(\n  container: Element | Document | DocumentFragment,\n  options?: CreateRootOptions,\n): RootType {\n  if (__DEV__) {\n    if (!Internals.usingClientEntryPoint && !__UMD__) {\n      console.error(\n        'You are importing createRoot from \"react-dom\" which is not supported. ' +\n          'You should instead import it from \"react-dom/client\".',\n      );\n    }\n  }\n  return createRootImpl(container, options);\n}\n\nfunction hydrateRoot(\n  container: Document | Element,\n  initialChildren: ReactNodeList,\n  options?: HydrateRootOptions,\n): RootType {\n  if (__DEV__) {\n    if (!Internals.usingClientEntryPoint && !__UMD__) {\n      console.error(\n        'You are importing hydrateRoot from \"react-dom\" which is not supported. ' +\n          'You should instead import it from \"react-dom/client\".',\n      );\n    }\n  }\n  return hydrateRootImpl(container, initialChildren, options);\n}\n\n// Overload the definition to the two valid signatures.\n// Warning, this opts-out of checking the function body.\ndeclare function flushSync<R>(fn: () => R): R;\n// eslint-disable-next-line no-redeclare\ndeclare function flushSync(): void;\n// eslint-disable-next-line no-redeclare\nfunction flushSync(fn) {\n  if (__DEV__) {\n    if (isAlreadyRendering()) {\n      console.error(\n        'flushSync was called from inside a lifecycle method. React cannot ' +\n          'flush when React is already rendering. Consider moving this call to ' +\n          'a scheduler task or micro task.',\n      );\n    }\n  }\n  return flushSyncWithoutWarningIfAlreadyRendering(fn);\n}\n\nexport {\n  createPortal,\n  batchedUpdates as unstable_batchedUpdates,\n  flushSync,\n  Internals as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\n  ReactVersion as version,\n  // Disabled behind disableLegacyReactDOMAPIs\n  findDOMNode,\n  hydrate,\n  render,\n  unmountComponentAtNode,\n  // exposeConcurrentModeAPIs\n  createRoot,\n  hydrateRoot,\n  flushControlled as unstable_flushControlled,\n  // Disabled behind disableUnstableRenderSubtreeIntoContainer\n  renderSubtreeIntoContainer as unstable_renderSubtreeIntoContainer,\n  // enableCreateEventHandleAPI\n  createEventHandle as unstable_createEventHandle,\n  // TODO: Remove this once callers migrate to alternatives.\n  // This should only be used by React internals.\n  runWithPriority as unstable_runWithPriority,\n};\n\nconst foundDevTools = injectIntoDevTools({\n  findFiberByHostInstance: getClosestInstanceFromNode,\n  bundleType: __DEV__ ? 1 : 0,\n  version: ReactVersion,\n  rendererPackageName: 'react-dom',\n});\n\nif (__DEV__) {\n  if (!foundDevTools && canUseDOM && window.top === window.self) {\n    // If we're in Chrome or Firefox, provide a download link if not installed.\n    if (\n      (navigator.userAgent.indexOf('Chrome') > -1 &&\n        navigator.userAgent.indexOf('Edge') === -1) ||\n      navigator.userAgent.indexOf('Firefox') > -1\n    ) {\n      const protocol = window.location.protocol;\n      // Don't warn in exotic cases like chrome-extension://.\n      if (/^(https?|file):$/.test(protocol)) {\n        // eslint-disable-next-line react-internal/no-production-logging\n        console.info(\n          '%cDownload the React DevTools ' +\n            'for a better development experience: ' +\n            'https://reactjs.org/link/react-devtools' +\n            (protocol === 'file:'\n              ? '\\nYou might need to use a local HTTP server (instead of file://): ' +\n                'https://reactjs.org/link/react-devtools-faq'\n              : ''),\n          'font-weight:bold',\n        );\n      }\n    }\n  }\n}\n\nexport const unstable_isNewReconciler = enableNewReconciler;\n"],"names":["formatProdErrorMessage","code","url","i","arguments","length","encodeURIComponent","FunctionComponent","ClassComponent","IndeterminateComponent","HostRoot","HostPortal","HostComponent","HostText","Fragment","Mode","ContextConsumer","ContextProvider","ForwardRef","Profiler","SuspenseComponent","MemoComponent","SimpleMemoComponent","LazyComponent","IncompleteClassComponent","DehydratedFragment","SuspenseListComponent","ScopeComponent","OffscreenComponent","LegacyHiddenComponent","CacheComponent","TracingMarkerComponent","enableClientRenderFallbackOnTextMismatch","enableNewReconciler","enableLazyContextPropagation","enableLegacyHidden","enableSuspenseAvoidThisFallback","disableCommentsAsDOMContainers","enableSchedulingProfiler","__PROFILE__","enableProfilerTimer","enableProfilerCommitHooks","allNativeEvents","Set","registrationNameDependencies","registerTwoPhaseEvent","registrationName","dependencies","registerDirectEvent","add","canUseDOM","window","document","createElement","hasOwnProperty","Object","prototype","RESERVED","STRING","BOOLEANISH_STRING","BOOLEAN","OVERLOADED_BOOLEAN","NUMERIC","POSITIVE_NUMERIC","ATTRIBUTE_NAME_START_CHAR","ATTRIBUTE_NAME_CHAR","VALID_ATTRIBUTE_NAME_REGEX","RegExp","illegalAttributeNameCache","validatedAttributeNameCache","isAttributeNameSafe","attributeName","call","test","shouldIgnoreAttribute","name","propertyInfo","isCustomComponentTag","type","shouldRemoveAttributeWithWarning","value","acceptsBooleans","prefix","toLowerCase","slice","shouldRemoveAttribute","isNaN","getPropertyInfo","properties","PropertyInfoRecord","mustUseProperty","attributeNamespace","sanitizeURL","removeEmptyString","propertyName","reservedProps","push","forEach","_ref","CAMELIZE","capitalize","token","toUpperCase","replace","xlinkHref","getValueForProperty","node","expected","getValueForAttribute","setValueForProperty","enableCustomElementPropertySupport","eventName","useCapture","prevProps","getFiberCurrentPropsFromNode","prevValue","removeEventListener","hasAttribute","removeAttribute","addEventListener","setAttribute","enableTrustedTypesIntegration","attributeValue","toString","setAttributeNS","ReactSharedInternals","React","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_SERVER_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_SCOPE_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_LEGACY_HIDDEN_TYPE","REACT_CACHE_TYPE","REACT_TRACING_MARKER_TYPE","REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","assign","ReactCurrentDispatcher","describeBuiltInComponentFrame","source","ownerFn","undefined","Error","x","match","stack","trim","reentry","describeNativeComponentFrame","fn","construct","disableNativeComponentFrames","control","previousPrepareStackTrace","prepareStackTrace","Fake","defineProperty","set","Reflect","sample","sampleLines","split","controlLines","s","c","frame","displayName","includes","syntheticFrame","describeClassComponentFrame","ctor","describeFunctionComponentFrame","describeFiber","fiber","tag","render","getStackByFiberInDevAndProd","workInProgress","info","return","message","getWrappedName","outerType","innerType","wrapperName","functionName","getContextName","getComponentNameFromType","$$typeof","context","provider","_context","outerName","lazyComponent","payload","_payload","init","_init","context2","_globalName","getComponentNameFromFiber","ReactDebugCurrentFrame","resetCurrentFiber","getToStringValue","isCheckable","elem","nodeName","getTracker","_valueTracker","detachTracker","getValueFromNode","checked","trackValueOnNode","valueField","descriptor","getOwnPropertyDescriptor","constructor","currentValue","get","configurable","enumerable","tracker","getValue","setValue","stopTracking","track","updateValueIfChanged","lastValue","nextValue","getActiveElement","doc","activeElement","body","e","isControlled","props","usesChecked","getHostProps","element","hostProps","defaultChecked","defaultValue","_wrapperState","initialChecked","initWrapperState","initialValue","controlled","updateChecked","updateWrapper","setDefaultValue","postMountWrapper","isHydrating","isButton","restoreControlledState","updateNamedCousins","rootNode","queryRoot","parentNode","group","querySelectorAll","JSON","stringify","otherNode","form","otherProps","_formatProdErrorMessage","ownerDocument","isArrayImpl","Array","isArray","a","updateOptions","multiple","propValue","setDefaultSelected","options","selectedValues","selectedValue","selected","defaultSelected","disabled","wasMultiple","postUpdateWrapper","dangerouslySetInnerHTML","_assign","children","_formatProdErrorMessage2","_formatProdErrorMessage3","newValue","textContent","HTML_NAMESPACE","MATH_NAMESPACE","SVG_NAMESPACE","getIntrinsicNamespace","getChildNamespace","parentNamespace","createMicrosoftUnsafeLocalFunction","func","MSApp","execUnsafeLocalFunction","arg0","arg1","arg2","arg3","reusableSVGContainer","setInnerHTML","html","namespaceURI","innerHTML","valueOf","svgNode","firstChild","removeChild","appendChild","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","setTextContent","text","lastChild","nodeType","nodeValue","isUnitlessNumber","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixKey","key","charAt","substring","prefixes","keys","prop","dangerousStyleValue","isCustomProperty","isEmpty","setValueForStyles","styles","style","styleName","indexOf","styleValue","setProperty","omittedCloseTags","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","wbr","voidElementTags","menuitem","HTML","assertValidProps","_formatProdErrorMessage4","isCustomComponent","tagName","is","IS_EVENT_HANDLE_NON_MANAGED_NODE","IS_NON_DELEGATED","IS_CAPTURE_PHASE","SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS","currentReplayingEvent","setReplayingEvent","event","resetReplayingEvent","isReplayingEvent","getEventTarget","nativeEvent","target","srcElement","correspondingUseElement","restoreImpl","restoreTarget","restoreQueue","restoreStateOfTarget","internalInstance","getInstanceFromNode","stateNode","setRestoreImplementation","impl","enqueueStateRestore","needsStateRestore","restoreStateIfNeeded","queuedTargets","batchedUpdatesImpl","bookkeeping","flushSyncImpl","isInsideEventHandler","finishEventHandler","controlledComponentsHavePendingUpdates","batchedUpdates","b","setBatchingImplementation","_batchedUpdatesImpl","_discreteUpdatesImpl","_flushSyncImpl","isInteractive","shouldPreventMouseEvent","getListener","inst","listener","passiveBrowserEventsSupported","invokeGuardedCallbackProd","d","f","funcArgs","apply","error","onError","invokeGuardedCallbackImpl","hasError","caughtError","hasRethrowError","rethrowError","reporter","invokeGuardedCallback","invokeGuardedCallbackAndCatchFirstError","clearCaughtError","rethrowCaughtError","_reactInternals","has","NoFlags","PerformedWork","Placement","Update","ChildDeletion","ContentReset","Callback","DidCapture","ForceClientRender","Ref","Snapshot","Passive","Hydrating","Visibility","StoreConsistency","LifecycleEffectMask","HostEffectMask","Incomplete","ShouldCapture","ForceUpdateForLegacySuspense","Forked","RefStatic","LayoutStatic","PassiveStatic","BeforeMutationMask","enableCreateEventHandleAPI","MutationMask","LayoutMask","PassiveMask","StaticMask","ReactCurrentOwner","getNearestMountedFiber","nearestMounted","alternate","nextNode","flags","getSuspenseInstanceFromFiber","suspenseState","memoizedState","current","dehydrated","getContainerFromFiber","containerInfo","isFiberMounted","isMounted","component","getInstance","assertIsMounted","findCurrentFiberUsingSlowPath","parentA","parentB","nextParent","child","sibling","didFindChild","_formatProdErrorMessage5","_formatProdErrorMessage6","findCurrentHostFiber","parent","currentParent","findCurrentHostFiberImpl","scheduleCallback","Scheduler","cancelCallback","shouldYield","requestPaint","now","getCurrentPriorityLevel","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","rendererID","injectedHook","injectInternals","internals","__REACT_DEVTOOLS_GLOBAL_HOOK__","hook","isDisabled","supportsFiber","getLaneLabelMap","injectProfilingHooks","inject","err","checkDCE","onCommitRoot","root","eventPriority","onCommitFiberRoot","didError","schedulerPriority","DiscreteEventPriority","ImmediateSchedulerPriority","ContinuousEventPriority","UserBlockingSchedulerPriority","DefaultEventPriority","NormalSchedulerPriority","IdleEventPriority","IdleSchedulerPriority","onPostCommitRoot","onPostCommitFiberRoot","onCommitUnmount","onCommitFiberUnmount","profilingHooks","markComponentRenderStopped","markComponentErrored","thrownValue","lanes","markComponentSuspended","wakeable","NoMode","ConcurrentMode","ProfileMode","StrictLegacyMode","clz32","Math","clz32Fallback","log","LN2","asUint","TotalLanes","NoLanes","NoLane","SyncLane","InputContinuousHydrationLane","InputContinuousLane","DefaultHydrationLane","DefaultLane","TransitionHydrationLane","TransitionLanes","TransitionLane1","TransitionLane2","TransitionLane3","TransitionLane4","TransitionLane5","TransitionLane6","TransitionLane7","TransitionLane8","TransitionLane9","TransitionLane10","TransitionLane11","TransitionLane12","TransitionLane13","TransitionLane14","TransitionLane15","TransitionLane16","RetryLanes","RetryLane1","RetryLane2","RetryLane3","RetryLane4","RetryLane5","SomeRetryLane","SelectiveHydrationLane","NonIdleLanes","IdleHydrationLane","IdleLane","OffscreenLane","NoTimestamp","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","getHighestPriorityLane","getNextLanes","wipLanes","pendingLanes","nextLanes","suspendedLanes","pingedLanes","nonIdlePendingLanes","nonIdleUnblockedLanes","nonIdlePingedLanes","unblockedLanes","nextLane","wipLane","entangledLanes","entanglements","index","pickArbitraryLaneIndex","lane","getMostRecentEventTime","eventTimes","mostRecentEventTime","eventTime","computeExpirationTime","currentTime","markStarvedLanesAsExpired","expirationTimes","expirationTime","expiredLanes","getHighestPriorityPendingLanes","getLanesToRetrySynchronouslyOnError","everythingButOffscreen","includesSyncLane","includesNonIdleWork","includesOnlyRetries","includesOnlyNonUrgentLanes","UrgentLanes","includesOnlyTransitions","includesBlockingLane","SyncDefaultLanes","includesExpiredLane","isTransitionLane","claimNextTransitionLane","claimNextRetryLane","pickArbitraryLane","laneToIndex","includesSomeLane","isSubsetOfLanes","subset","mergeLanes","removeLanes","intersectLanes","laneToLanes","higherPriorityLane","createLaneMap","initial","laneMap","markRootUpdated","updateLane","markRootSuspended","markRootPinged","markRootFinished","remainingLanes","noLongerPendingLanes","mutableReadLanes","markRootEntangled","rootEntangledLanes","getBumpedLaneForHydration","renderLanes","renderLane","getTransitionsForLanes","currentUpdatePriority","getCurrentUpdatePriority","setCurrentUpdatePriority","newPriority","runWithPriority","priority","previousPriority","higherEventPriority","lowerEventPriority","isHigherEventPriority","lanesToEventPriority","isRootDehydrated","currentState","isDehydrated","_attemptSynchronousHydration","setAttemptSynchronousHydration","attemptSynchronousHydration","attemptContinuousHydration","setAttemptContinuousHydration","attemptHydrationAtCurrentPriority","setAttemptHydrationAtCurrentPriority","setGetCurrentUpdatePriority","attemptHydrationAtPriority","setAttemptHydrationAtPriority","hasScheduledReplayAttempt","queuedDiscreteEvents","queuedFocus","queuedDrag","queuedMouse","queuedPointers","Map","queuedPointerCaptures","queuedExplicitHydrationTargets","discreteReplayableEvents","isDiscreteEventThatRequiresHydration","eventType","createQueuedReplayableEvent","blockedOn","domEventName","eventSystemFlags","targetContainer","targetContainers","clearIfContinuousEvent","pointerId","delete","accumulateOrCreateContinuousQueuedReplayableEvent","existingQueuedEvent","queuedEvent","queueIfContinuousEvent","focusEvent","dragEvent","mouseEvent","pointerEvent","attemptExplicitHydrationTarget","queuedTarget","targetInst","getClosestInstanceFromNode","instance","queueExplicitHydrationTarget","updatePriority","splice","attemptReplayContinuousQueuedEvent","nextBlockedOn","findInstanceBlockingEvent","nativeEventClone","dispatchEvent","shift","attemptReplayContinuousQueuedEventInMap","map","replayUnblockedEvents","scheduleCallbackIfUnblocked","unblocked","retryIfBlockedOn","unblock","nextExplicitTarget","ReactCurrentBatchConfig","_enabled","setEnabled","enabled","isEnabled","createEventListenerWrapperWithPriority","getEventPriority","listenerWrapper","dispatchDiscreteEvent","dispatchContinuousEvent","bind","container","prevTransition","transition","dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay","dispatchEventForPluginEventSystem","return_targetInst","stopPropagation","nativeEventTarget","getCurrentSchedulerPriorityLevel","LowSchedulerPriority","addEventBubbleListener","addEventCaptureListener","addEventCaptureListenerWithPassiveFlag","passive","capture","addEventBubbleListenerWithPassiveFlag","startText","fallbackText","initialize","getText","reset","getData","start","startValue","startLength","end","endValue","endLength","minEnd","sliceTail","getEventCharCode","charCode","keyCode","functionThatReturnsTrue","functionThatReturnsFalse","createSyntheticEvent","Interface","SyntheticBaseEvent","reactName","reactEventType","_reactName","_targetInst","currentTarget","propName","normalize","defaultPrevented","returnValue","isDefaultPrevented","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","EventInterface","eventPhase","bubbles","cancelable","timeStamp","Date","isTrusted","SyntheticEvent","UIEventInterface","view","detail","SyntheticUIEvent","lastMovementX","lastMovementY","lastMouseEvent","updateMouseMovementPolyfillState","screenX","screenY","MouseEventInterface","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","getEventModifierState","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","SyntheticMouseEvent","DragEventInterface","dataTransfer","SyntheticDragEvent","FocusEventInterface","SyntheticFocusEvent","AnimationEventInterface","animationName","elapsedTime","pseudoElement","SyntheticAnimationEvent","ClipboardEventInterface","clipboardData","SyntheticClipboardEvent","CompositionEventInterface","data","SyntheticCompositionEvent","SyntheticInputEvent","normalizeKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","translateToKey","getEventKey","String","fromCharCode","modifierKeyToProp","Alt","Control","Meta","Shift","modifierStateGetter","keyArg","syntheticEvent","keyProp","KeyboardEventInterface","location","repeat","locale","which","SyntheticKeyboardEvent","PointerEventInterface","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","SyntheticPointerEvent","TouchEventInterface","touches","targetTouches","changedTouches","SyntheticTouchEvent","TransitionEventInterface","SyntheticTransitionEvent","WheelEventInterface","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","SyntheticWheelEvent","END_KEYCODES","START_KEYCODE","canUseCompositionEvent","documentMode","canUseTextInputEvent","useFallbackCompositionData","SPACEBAR_CODE","SPACEBAR_CHAR","registerEvents","hasSpaceKeypress","isKeypressCommand","getCompositionEventType","isFallbackCompositionStart","isFallbackCompositionEnd","getDataFromCustomEvent","isUsingKoreanIME","isComposing","extractCompositionEvent","dispatchQueue","fallbackData","FallbackCompositionStateInitialize","FallbackCompositionStateGetData","listeners","accumulateTwoPhaseListeners","customData","getNativeBeforeInputChars","chars","getFallbackBeforeInputChars","FallbackCompositionStateReset","char","extractBeforeInputEvent","extractEvents","supportedInputTypes","color","date","datetime","email","month","number","password","range","search","tel","time","week","isTextInputElement","isEventSupported","eventNameSuffix","isSupported","createAndAccumulateChangeEvent","activeElementInst","shouldUseChangeEvent","manualDispatchChangeEvent","runEventInBatch","processDispatchQueue","getInstIfValueChanged","targetNode","getNodeFromInstance","getTargetInstForChangeEvent","isInputEventSupported","startWatchingForValueChange","attachEvent","handlePropertyChange","stopWatchingForValueChange","detachEvent","handleEventsForInputEventPolyfill","getTargetInstForInputEventPolyfill","shouldUseClickEvent","getTargetInstForClickEvent","getTargetInstForInputOrChangeEvent","handleControlledInputBlur","state","getTargetInstFunc","handleEventFunc","elementType","memoizedProps","isOverEvent","isOutEvent","related","isContainerMarkedAsRoot","win","defaultView","parentWindow","from","to","SyntheticEventCtor","leaveEventType","enterEventType","eventTypePrefix","fromNode","toNode","leave","enter","nativeTargetInst","enterEvent","accumulateEnterLeaveTwoPhaseListeners","y","objectIs","shallowEqual","objA","objB","keysA","keysB","currentKey","getLeafNode","getSiblingNode","nextSibling","getNodeForCharacterOffset","offset","nodeStart","nodeEnd","getOffsets","outerNode","selection","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","getModernOffsetsFromPoints","indexWithinAnchor","indexWithinFocus","outer","next","setOffsets","offsets","min","extend","temp","startMarker","endMarker","createRange","setStart","removeAllRanges","addRange","setEnd","isTextNode","containsNode","innerNode","contains","compareDocumentPosition","isInDocument","documentElement","isSameOriginFrame","iframe","contentWindow","href","getActiveElementDeep","HTMLIFrameElement","hasSelectionCapabilities","contentEditable","getSelectionInformation","focusedElem","selectionRange","restoreSelection","priorSelectionInformation","curFocusedElem","priorFocusedElem","priorSelectionRange","setSelection","ancestors","ancestor","left","scrollLeft","top","scrollTop","focus","selectionStart","selectionEnd","skipSelectionChangeEvent","lastSelection","mouseDown","getEventTargetDocument","eventTarget","constructSelectEvent","currentSelection","makePrefixMap","styleProp","vendorPrefixes","animationend","animationiteration","animationstart","transitionend","prefixedEventNames","animation","getVendorPrefixedEventName","prefixMap","ANIMATION_END","ANIMATION_ITERATION","ANIMATION_START","TRANSITION_END","topLevelEventsToReactNames","simpleEventPluginEvents","registerSimpleEvent","registerSimpleEvents","capitalizedEvent","inCapturePhase","accumulateTargetOnly","accumulateSinglePhaseListeners","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","shouldProcessPolyfillPlugins","mediaEventTypes","nonDelegatedEvents","concat","executeDispatch","processDispatchQueueItemsInOrder","dispatchListeners","previousInstance","_dispatchListeners$i","_dispatchListeners$i2","_dispatchQueue$i","dispatchEventsForPlugins","listenToNonDelegatedEvent","targetElement","isCapturePhaseListener","listenerSet","getEventListenerSet","listenerSetKey","getListenerSetKey","addTrappedEventListener","listenToNativeEvent","listeningMarker","random","listenToAllSupportedEvents","rootContainerElement","isDeferredListenerForLegacyFBSupport","isPassiveListener","enableLegacyFBSupport","unsubscribeListener","isMatchingRootContainer","grandContainer","ancestorInst","targetContainerNode","mainLoop","nodeTag","grandNode","grandTag","parentTag","createDispatchListener","targetFiber","nativeEventType","captureName","reactEventName","lastHostComponent","_instance","_instance2","captureListener","unshift","bubbleListener","getParent","getLowestCommonAncestor","instA","instB","nodeA","nodeB","depthA","tempA","depthB","tempB","depth","accumulateEnterLeaveListenersForEvent","common","_instance3","leaveEvent","DANGEROUSLY_SET_INNER_HTML","SUPPRESS_CONTENT_EDITABLE_WARNING","SUPPRESS_HYDRATION_WARNING","AUTOFOCUS","CHILDREN","STYLE","warnForPropDifference","normalizeHTML","NORMALIZE_NEWLINES_REGEX","NORMALIZE_NULL_AND_REPLACEMENT_REGEX","normalizeMarkupForTextOrAttribute","markup","markupString","checkForUnmatchedText","serverText","clientText","isConcurrentMode","shouldWarnDev","normalizedClientText","normalizedServerText","getOwnerDocumentFromRootContainer","noop","trapClickOnNonInteractiveElement","onclick","setInitialDOMProperties","domElement","nextProps","propKey","nextProp","nextHtml","canSetTextContent","updateDOMProperties","updatePayload","wasCustomComponentTag","div","size","createElementNS","createTextNode","setInitialProperties","rawProps","ReactDOMInputInitWrapperState","ReactDOMInputGetHostProps","ReactDOMSelectInitWrapperState","ReactDOMSelectGetHostProps","ReactDOMTextareaInitWrapperState","ReactDOMTextareaGetHostProps","ReactDOMInputPostMountWrapper","ReactDOMTextareaPostMountWrapper","ReactDOMOptionPostMountWrapper","ReactDOMSelectPostMountWrapper","onClick","diffProperties","lastRawProps","nextRawProps","lastProps","styleUpdates","lastStyle","lastProp","lastHtml","updateProperties","ReactDOMInputUpdateChecked","ReactDOMInputUpdateWrapper","ReactDOMTextareaUpdateWrapper","ReactDOMSelectPostUpdateWrapper","getPossibleStandardName","diffHydratedProperties","extraAttributeNames","__DEV__","serverValue","serverHTML","expectedHTML","isMismatchDueToBadCasing","ownNamespace","standardName","diffHydratedText","textNode","isDifferent","ReactDOMInputRestoreControlledState","ReactDOMTextareaRestoreControlledState","ReactDOMSelectRestoreControlledState","SUSPENSE_START_DATA","SUSPENSE_END_DATA","SUSPENSE_PENDING_START_DATA","SUSPENSE_FALLBACK_START_DATA","eventsEnabled","selectionInformation","getRootHostContext","rootContainerInstance","namespace","getChildHostContext","parentHostContext","getPublicInstance","prepareForCommit","ReactBrowserEventEmitterIsEnabled","activeInstance","ReactBrowserEventEmitterSetEnabled","resetAfterCommit","createInstance","hostContext","internalInstanceHandle","precacheFiberNode","updateFiberProps","appendInitialChild","parentInstance","finalizeInitialChildren","autoFocus","prepareUpdate","oldProps","newProps","shouldSetTextContent","__html","createTextInstance","getCurrentEventPriority","currentEvent","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","localPromise","Promise","scheduleMicrotask","queueMicrotask","callback","resolve","then","catch","handleErrorInNextTick","commitMount","src","commitUpdate","resetTextContent","commitTextUpdate","textInstance","oldText","newText","appendChildToContainer","insertBefore","reactRootContainer","_reactRootContainer","beforeChild","insertInContainerBefore","removeChildFromContainer","clearSuspenseBoundary","suspenseInstance","clearSuspenseBoundaryFromContainer","hideInstance","display","hideTextInstance","unhideInstance","unhideTextInstance","clearContainer","canHydrateInstance","canHydrateTextInstance","canHydrateSuspenseInstance","isSuspenseInstancePending","isSuspenseInstanceFallback","getSuspenseInstanceFallbackErrorDetails","dataset","digest","dgst","registerSuspenseInstanceRetry","_reactRetry","getNextHydratable","nodeData","getNextHydratableSibling","getFirstHydratableChild","getFirstHydratableChildWithinContainer","parentContainer","getFirstHydratableChildWithinSuspenseInstance","hydrateInstance","mode","hydrateTextInstance","hydrateSuspenseInstance","getNextHydratableInstanceAfterSuspenseInstance","getParentSuspenseInstance","targetInstance","previousSibling","commitHydratedContainer","commitHydratedSuspenseInstance","shouldDeleteUnhydratedTailInstances","parentType","didNotMatchHydratedContainerTextInstance","didNotMatchHydratedTextInstance","parentProps","preparePortalMount","portalInstance","randomKey","internalInstanceKey","internalPropsKey","internalContainerInstanceKey","internalEventHandlersKey","internalEventHandlerListenersKey","internalEventHandlesSetKey","detachDeletedInstance","hostInst","markContainerAsRoot","hostRoot","unmarkContainerAsRoot","targetSuspenseInst","elementListenerSet","valueStack","createCursor","pop","cursor","emptyContextObject","contextStackCursor","didPerformWorkStackCursor","previousContext","getUnmaskedContext","Component","didPushOwnContextIfProvider","isContextProvider","cacheContext","unmaskedContext","maskedContext","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","getMaskedContext","contextTypes","hasContextChanged","childContextTypes","popContext","popTopLevelContextObject","pushTopLevelContextObject","didChange","processChildContext","parentContext","getChildContext","childContext","contextKey","pushContextProvider","memoizedMergedChildContext","__reactInternalMemoizedMergedChildContext","invalidateContextProvider","mergedContext","findCurrentUnmaskedContext","LegacyRoot","ConcurrentRoot","syncQueue","includesLegacySyncCallbacks","isFlushingSyncQueue","scheduleSyncCallback","scheduleLegacySyncCallback","flushSyncCallbacksOnlyInLegacyMode","flushSyncCallbacks","previousUpdatePriority","isSync","queue","forkStack","forkStackIndex","treeForkProvider","treeForkCount","idStack","idStackIndex","treeContextProvider","treeContextId","treeContextOverflow","isForkedChild","getForksAtLevel","getTreeId","overflow","idWithLeadingBit","id","getLeadingBit","pushTreeFork","totalChildren","pushTreeId","baseIdWithLeadingBit","baseOverflow","baseLength","getBitLength","baseId","slot","numberOfOverflowBits","newOverflowBits","newOverflow","restOfBaseId","restOfBaseLength","restOfLength","restOfNewBits","newBits","pushMaterializedTreeId","returnFiber","numberOfForks","slotIndex","popTreeContext","getSuspendedTreeContext","restoreSuspendedTreeContext","suspendedContext","hydrationParentFiber","nextHydratableInstance","didSuspendOrErrorDEV","hydrationErrors","enterHydrationState","reenterHydrationStateFromDehydratedSuspenseInstance","treeContext","deleteHydratableInstance","childToDelete","createFiberFromHostInstanceForDeletion","deletions","insertNonHydratedInstance","tryHydrate","nextInstance","pendingProps","retryLane","dehydratedFragment","createFiberFromDehydratedFragment","shouldClientRenderOnMismatch","throwOnHydrationMismatch","tryToClaimNextHydratableInstance","firstAttemptedInstance","prevHydrationParentFiber","prepareToHydrateHostInstance","shouldWarnIfMismatchDev","updateQueue","prepareToHydrateHostTextInstance","shouldUpdate","prepareToHydrateHostSuspenseInstance","skipPastDehydratedSuspenseInstance","_formatProdErrorMessage7","popToNextHostParent","popHydrationState","warnIfUnhydratedTailNodes","hasUnhydratedTailNodes","resetHydrationState","upgradeHydrationErrorsToRecoverable","queueRecoverableErrors","getIsHydrating","queueHydrationError","NoTransition","requestCurrentTransition","coerceRef","mixedRef","ref","_owner","owner","ownerFiber","resolvedInst","stringRef","_stringRef","refs","throwOnInvalidObjectType","newChild","childString","join","resolveLazy","lazyType","ChildReconciler","shouldTrackSideEffects","deleteChild","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","existingChild","useFiber","clone","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","oldIndex","placeSingleChild","updateTextNode","created","createFiberFromText","existing","updateElement","updateFragment","createFiberFromElement","updatePortal","portal","implementation","createFiberFromPortal","fragment","createFiberFromFragment","createChild","updateSlot","oldFiber","updateFromMap","newIdx","matchedFiber","reconcileChildrenArray","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","reconcileChildrenIterator","newChildrenIterable","iteratorFn","_formatProdErrorMessage8","step","done","reconcileSingleTextNode","reconcileSingleElement","reconcileSinglePortal","reconcileChildFibers","isUnkeyedTopLevelFragment","mountChildFibers","cloneChildFibers","_formatProdErrorMessage9","currentChild","resetChildFibers","resetWorkInProgress","valueCursor","currentlyRenderingFiber","lastContextDependency","lastFullyObservedContext","resetContextDependencies","pushProvider","providerFiber","_currentValue","popProvider","enableServerContext","_defaultValue","scheduleContextWorkOnParentPath","propagationRoot","childLanes","propagateContextChange","propagateContextChange_eager","nextFiber","list","dependency","firstContext","update","createUpdate","ForceUpdate","sharedQueue","shared","pending","parentSuspense","prepareToReadContext","markWorkInProgressReceivedUpdate","readContext","isPrimaryRenderer","contextItem","memoizedValue","concurrentQueues","pushConcurrentUpdateQueue","finishQueueingConcurrentUpdates","lastInterleavedUpdate","interleaved","firstInterleavedUpdate","lastPendingUpdate","firstPendingUpdate","enqueueConcurrentHookUpdate","markUpdateLaneFromFiberToRoot","enqueueConcurrentHookUpdateAndEagerlyBailout","enqueueConcurrentClassUpdate","enqueueConcurrentRenderForLane","unsafe_markUpdateLaneFromFiberToRoot","sourceFiber","UpdateState","ReplaceState","CaptureUpdate","hasForceUpdate","initializeUpdateQueue","baseState","firstBaseUpdate","lastBaseUpdate","effects","cloneUpdateQueue","currentQueue","enqueueUpdate","isUnsafeClassRenderPhaseUpdate","entangleTransitions","queueLanes","newQueueLanes","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","getStateFromUpdate","prevState","nextState","partialState","processUpdateQueue","pendingQueue","currentLastBaseUpdate","newState","newLanes","newBaseState","newFirstBaseUpdate","newLastBaseUpdate","updateEventTime","lastInterleaved","markSkippedUpdateLanes","callCallback","resetHasForceUpdateBeforeProcessing","checkHasForceUpdateAfterProcessing","commitUpdateQueue","finishedWork","finishedQueue","effect","NO_CONTEXT","contextFiberStackCursor","rootInstanceStackCursor","requiredContext","getRootHostContainer","rootInstance","pushHostContainer","nextRootInstance","nextRootContext","popHostContainer","getHostContext","pushHostContext","nextContext","popHostContext","DefaultSuspenseContext","SubtreeSuspenseContextMask","InvisibleParentSuspenseContext","ForceSuspenseFallback","suspenseStackCursor","hasSuspenseContext","flag","setDefaultShallowSuspenseContext","setShallowSuspenseContext","shallowContext","addSubtreeSuspenseContext","subtreeContext","pushSuspenseContext","newContext","popSuspenseContext","shouldCaptureSuspense","hasInvisibleParent","findFirstSuspended","row","revealOrder","didSuspend","HasEffect","Insertion","Layout","workInProgressSources","resetWorkInProgressVersions","mutableSource","_workInProgressVersionPrimary","registerMutableSourceForHydration","getVersion","_getVersion","version","_source","mutableSourceEagerHydrationData","AbortControllerLocal","enableCache","AbortController","AbortControllerShim","signal","aborted","abort","CacheContext","Consumer","Provider","_currentValue2","_threadCount","createCache","cache","controller","refCount","retainCache","releaseCache","pushCacheProvider","popCacheProvider","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","localIdCounter","globalClientIdCounter","RE_RENDER_LIMIT","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","HooksDispatcherOnMount","HooksDispatcherOnUpdate","numberOfReRenders","HooksDispatcherOnRerender","ContextOnlyDispatcher","didRenderTooFewHooks","checkDidRenderIdHook","didRenderIdHook","bailoutHooks","PassiveEffect","UpdateEffect","resetHooksAfterThrow","mountWorkInProgressHook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","newHook","createFunctionComponentUpdateQueue","lastEffect","stores","basicStateReducer","action","mountReducer","reducer","initialArg","initialState","dispatch","lastRenderedReducer","lastRenderedState","dispatchReducerAction","updateReducer","baseFirst","pendingFirst","first","newBaseQueueFirst","newBaseQueueLast","hasEagerState","eagerState","interleavedLane","rerenderReducer","lastRenderPhaseUpdate","firstRenderPhaseUpdate","mountMutableSource","getSnapshot","subscribe","updateMutableSource","mountSyncExternalStore","getServerSnapshot","nextSnapshot","getWorkInProgressRoot","_formatProdErrorMessage10","pushStoreConsistencyCheck","mountEffect","subscribeToStore","pushEffect","HookHasEffect","HookPassive","updateStoreInstance","updateSyncExternalStore","prevSnapshot","snapshotChanged","updateEffect","_formatProdErrorMessage11","renderedSnapshot","check","componentUpdateQueue","checkIfSnapshotChanged","forceStoreRerender","handleStoreChange","latestGetSnapshot","scheduleUpdateOnFiber","mountState","dispatchSetState","updateState","rerenderState","create","destroy","deps","firstEffect","mountRef","updateRef","mountEffectImpl","fiberFlags","hookFlags","updateEffectImpl","prevEffect","PassiveStaticEffect","mountInsertionEffect","HookInsertion","updateInsertionEffect","mountLayoutEffect","LayoutStaticEffect","HookLayout","updateLayoutEffect","imperativeHandleEffect","refCallback","refObject","mountImperativeHandle","effectDeps","updateImperativeHandle","mountDebugValue","formatterFn","updateDebugValue","mountCallback","updateCallback","mountMemo","nextCreate","updateMemo","mountDeferredValue","updateDeferredValue","resolvedCurrentHook","updateDeferredValueImpl","rerenderDeferredValue","shouldDeferValue","deferredLane","startTransition","setPending","currentTransition","mountTransition","_mountState","isPending","updateTransition","_updateState","rerenderTransition","_rerenderState","mountId","identifierPrefix","treeId","localId","globalClientId","updateId","mountRefresh","refresh","refreshCache","updateRefresh","seedKey","seedValue","requestUpdateLane","requestEventTime","refreshUpdate","createLegacyQueueUpdate","enqueueLegacyQueueUpdate","entangleLegacyQueueTransitions","seededCache","isRenderPhaseUpdate","enqueueRenderPhaseUpdate","entangleTransitionUpdate","getCacheSignal","getCacheForType","resourceType","cacheForType","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","useCacheRefresh","stopProfilerTimerIfRunningAndRecordDelta","overrideBaseTime","recordLayoutEffectDuration","startLayoutEffectTimer","resolveDefaultProps","baseProps","defaultProps","applyDerivedStateFromProps","getDerivedStateFromProps","classComponentUpdater","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldState","shouldComponentUpdate","isPureReactComponent","adoptClassInstance","updater","setInstance","constructClassInstance","isLegacyContextConsumer","contextType","callComponentWillMount","componentWillMount","UNSAFE_componentWillMount","callComponentWillReceiveProps","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","mountClassInstance","getSnapshotBeforeUpdate","componentDidMount","resumeMountClassInstance","oldContext","nextLegacyUnmaskedContext","hasNewLifecycles","updateClassInstance","unresolvedOldProps","unresolvedNewProps","nextUnmaskedContext","componentDidUpdate","UNSAFE_componentWillUpdate","componentWillUpdate","createCapturedValueAtFiber","createCapturedValue","showErrorDialog","boundary","errorInfo","logCapturedError","logError","componentStack","_suppressLogging","console","componentName","componentNameMessage","errorBoundaryMessage","errorBoundaryName","combinedMessage","PossiblyWeakMap","WeakMap","createRootErrorUpdate","onUncaughtError","createClassErrorUpdate","getDerivedStateFromError","componentDidCatch","markLegacyErrorBoundaryAsFailed","attachPingListener","pingCache","threadIDs","ping","pingSuspendedRoot","attachRetryListener","suspenseBoundary","wakeables","resetSuspendedComponent","rootRenderLanes","currentSource","getNearestSuspenseBoundaryToCapture","markSuspenseBoundaryShouldCapture","currentSourceFiber","throwException","renderDidSuspendDelayIfPossible","uncaughtSuspenseError","renderDidError","isAlreadyFailedLegacyErrorBoundary","resumedCache","peekCacheFromPool","cacheResumedFromPreviousRender","cacheFromRootCachePool","pooledCache","requestCacheFromPool","cacheFromPool","freshCache","pooledCacheLanes","pushTransition","offscreenWorkInProgress","prevCachePool","newTransitions","pool","popTransition","getSuspendedCache","getOffscreenDeferredCache","didReceiveUpdate","reconcileChildren","nextChildren","forceUnmountCurrentAndReconcile","updateForwardRef","hasId","bailoutOnAlreadyFinishedWork","updateMemoComponent","isSimpleFunctionComponent","compare","resolvedType","updateSimpleMemoComponent","createFiberFromTypeAndProps","hasScheduledUpdateOrContext","checkScheduledUpdateOrContext","updateFunctionComponent","updateOffscreenComponent","baseLanes","cachePool","transitions","pushRenderLanes","spawnedCachePool","nextBaseLanes","prevBaseLanes","subtreeRenderLanes","updateCacheComponent","parentCache","derivedState","nextCache","updateMode","updateProfiler","markRef","updateClassComponent","hasContext","isLegacyContextProvider","pushLegacyContextProvider","resetSuspendedCurrentOnMountInLegacyMode","nextUnitOfWork","finishClassComponent","didCaptureError","pushHostRootContext","pendingContext","updateHostRoot","prevChildren","supportsHydration","overrideState","pendingSuspenseBoundaries","recoverableError","mountHostRootWithoutHydrating","updateHostComponent","isDirectTextChild","updateHostText","mountLazyComponent","_current","resolvedTag","resolveLazyComponentTag","resolvedProps","hint","mountIncompleteClassComponent","mountIndeterminateComponent","SUSPENDED_MARKER","mountSuspenseOffscreenState","updateSuspenseOffscreenState","prevOffscreenState","shouldRemainOnFallback","suspenseContext","getRemainingWorkInPrimaryTree","updateSuspenseComponent","showFallback","mountDehydratedSuspenseComponent","nextPrimaryChildren","nextFallbackChildren","fallback","fallbackFragment","mountSuspenseFallbackChildren","primaryChildFragment","enableCPUSuspense","unstable_expectedLoadTime","mountSuspensePrimaryChildren","updateDehydratedSuspenseComponent","fallbackChildFragment","updateSuspenseFallbackChildren","updateSuspensePrimaryChildren","primaryChildren","primaryChildProps","mountWorkInProgressOffscreenFiber","fallbackChildren","progressedPrimaryFragment","offscreenProps","createFiberFromOffscreen","updateWorkInProgressOffscreenFiber","currentPrimaryChildFragment","currentFallbackChildFragment","subtreeFlags","retrySuspenseComponentWithoutHydrating","mountSuspenseFallbackAfterRetryWithoutHydrating","fiberMode","_getSuspenseInstanceF2","capturedValue","attemptHydrationAtLane","retry","retryDehydratedSuspenseBoundary","scheduleSuspenseWorkOnFiber","propagateSuspenseContextChange","findLastContentRow","lastContentRow","currentRow","initSuspenseListRenderState","isBackwards","tail","tailMode","renderState","rendering","renderingStartTime","last","updateSuspenseListComponent","shouldForceFallback","didSuspendBefore","nextRow","updatePortalComponent","updateContextProvider","providerType","oldValue","hasLegacyContextChanged","updateContextConsumer","updateLanes","attemptEarlyBailoutIfNoScheduledUpdate","primaryChildLanes","hasChildWork","beginWork","unresolvedProps","markUpdate","appendAllChildren","updateHostContainer","needsVisibilityToggle","isHidden","currentHostContext","cutOffTailIfNeeded","hasRenderedATailFallback","tailNode","lastTailNode","bubbleProperties","completedWork","didBailout","newChildLanes","completeDehydratedSuspenseBoundary","wasHydrated","completeWork","popLegacyContext","fiberRoot","previousCache","popTopLevelLegacyContextObject","resetMutableSourceWorkInProgressVersions","fallthroughToNormalSuspensePath","nextDidTimeout","prevDidTimeout","offscreenFiber","hasInvisibleChildContext","unstable_avoidThisFallback","renderDidSuspend","didSuspendAlready","renderedTail","cannotBeSuspended","renderHasNotSuspendedYet","suspended","newThenables","getRenderTargetTime","popRenderLanes","nextIsHidden","prevIsHidden","unwindWork","unwindInterruptedWork","interruptedWork","offscreenSubtreeIsHidden","offscreenSubtreeWasHidden","PossiblyWeakSet","WeakSet","nextEffect","callComponentWillUnmountWithTimer","componentWillUnmount","safelyCallCommitHookLayoutEffectListMount","nearestMountedAncestor","commitHookEffectListMount","captureCommitPhaseError","safelyCallComponentWillUnmount","safelyCallComponentDidMount","safelyAttachRef","commitAttachRef","safelyDetachRef","retVal","safelyCallDestroy","focusedInstanceHandle","shouldFireAfterActiveInstanceBlur","commitBeforeMutationEffects","commitBeforeMutationEffects_begin","shouldFire","commitBeforeMutationEffects_complete","commitBeforeMutationEffectsOnFiber","snapshot","__reactInternalSnapshotBeforeUpdate","commitHookEffectListUnmount","commitLayoutEffectOnFiber","finishedRoot","committedLanes","commitSuspenseHydrationCallbacks","reappearLayoutEffectsOnFiber","hideOrUnhideAllChildren","hostSubtreeRoot","instanceToUse","detachFiberMutation","detachFiberAfterEffects","hostInstance","getHostParentFiber","isHostParent","getHostSibling","siblings","commitPlacement","parentFiber","before","insertOrAppendPlacementNode","insertOrAppendPlacementNodeIntoContainer","isHost","hostParent","hostParentIsContainer","commitDeletionEffects","deletedFiber","findParent","commitDeletionEffectsOnFiber","recursivelyTraverseDeletionEffects","prevHostParent","prevHostParentIsContainer","_effect","NoHookEffect","enableSuspenseLayoutEffectSemantics","prevOffscreenSubtreeWasHidden","commitSuspenseCallback","attachSuspenseRetryListeners","retryCache","resolveRetryWakeable","commitMutationEffects","commitMutationEffectsOnFiber","recursivelyTraverseMutationEffects","commitReconciliationEffects","prevRootState","offscreenInstance","wasHidden","markCommitTimeOfFallback","offscreenBoundary","offscreenChild","disappearLayoutEffects_begin","commitLayoutEffects","commitLayoutEffects_begin","subtreeRoot","isModernRoot","newOffscreenSubtreeIsHidden","commitLayoutMountEffects_complete","newOffscreenSubtreeWasHidden","prevOffscreenSubtreeIsHidden","reappearLayoutEffects_begin","disappearLayoutEffects_complete","reappearLayoutEffects_complete","commitPassiveMountEffects","committedTransitions","commitPassiveMountEffects_begin","commitPassiveMountEffects_complete","commitPassiveMountOnFiber","commitPassiveUnmountEffects","commitPassiveUnmountEffects_begin","fiberToDelete","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","previousFiber","detachedChild","detachedSibling","commitPassiveUnmountEffects_complete","commitPassiveUnmountOnFiber","deletedSubtreeRoot","commitPassiveUnmountInsideDeletedTreeOnFiber","commitPassiveUnmountEffectsInsideOfDeletedTree_complete","ReactCurrentActQueue","ceil","NoContext","BatchedContext","RenderContext","CommitContext","RootInProgress","RootFatalErrored","RootErrored","RootSuspended","RootSuspendedWithDelay","RootCompleted","RootDidNotComplete","executionContext","workInProgressRoot","workInProgressRootRenderLanes","subtreeRenderLanesCursor","workInProgressRootExitStatus","workInProgressRootFatalError","workInProgressRootIncludedLanes","workInProgressRootSkippedLanes","workInProgressRootInterleavedUpdatedLanes","workInProgressRootPingedLanes","workInProgressRootConcurrentErrors","workInProgressRootRecoverableErrors","globalMostRecentFallbackTime","FALLBACK_THROTTLE_MS","workInProgressRootRenderTargetTime","Infinity","RENDER_TIMEOUT_MS","workInProgressTransitions","resetRenderTimer","hasUncaughtError","firstUncaughtError","legacyErrorBoundariesThatAlreadyFailed","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsLanes","pendingPassiveEffectsRemainingLanes","pendingPassiveTransitions","NESTED_UPDATE_LIMIT","nestedUpdateCount","rootWithNestedUpdates","currentEventTime","currentEventTransitionLane","isTransition","eventLane","requestRetryLane","checkForNestedUpdates","deferRenderPhaseUpdateToNextBatch","ensureRootIsScheduled","scheduleInitialHydrationOnRoot","existingCallbackNode","callbackNode","callbackPriority","newCallbackPriority","existingCallbackPriority","newCallbackNode","performSyncWorkOnRoot","schedulerPriorityLevel","performConcurrentWorkOnRoot","didTimeout","originalCallbackNode","didFlushPassiveEffects","flushPassiveEffects","shouldTimeSlice","disableSchedulerTimeoutInWorkLoop","exitStatus","renderRootConcurrent","renderRootSync","errorRetryLanes","recoverFromConcurrentError","fatalError","prepareFreshStack","renderWasConcurrent","isRenderConsistentWithExternalStores","finishedLanes","finishConcurrentRender","errorsFromFirstAttempt","rootWorkInProgress","errorsFromSecondAttempt","errors","commitRoot","shouldForceFlushFallbacksInDEV","msUntilTimeout","timeoutHandle","eventTimeMs","timeElapsedMs","jnd","checks","renderedValue","markRootSuspended_dontCallThisOneDirectly","flushRoot","prevExecutionContext","discreteUpdates","flushSync","pushToStack","popFromStack","handleError","erroredWork","resetCurrentDebugFiberInDEV","completeUnitOfWork","yetAnotherThrownValue","pushDispatcher","prevDispatcher","popDispatcher","workLoopSync","performUnitOfWork","workLoopConcurrent","unitOfWork","siblingFiber","recoverableErrors","previousUpdateLanePriority","commitRootImpl","renderPriorityLevel","subtreeHasEffects","rootHasEffect","releaseRootPooledCache","onCommitRootDevTools","onRecoverableError","renderPriority","flushPassiveEffectsImpl","onPostCommitRootDevTools","prepareToThrowUncaughtError","captureCommitPhaseErrorOnRoot","rootFiber","retryTimedOutBoundary","boundaryFiber","timeElapsed","originalBeginWork","priorityLevel","Scheduler_scheduleCallback","Scheduler_cancelCallback","FiberNode","createFiber","shouldConstruct","isReactComponent","currentDependencies","createHostRootFiber","isStrictMode","concurrentUpdatesByDefaultOverride","fiberTag","getTag","createFiberFromProfiler","createFiberFromSuspense","createFiberFromSuspenseList","createFiberFromCache","elements","primaryChildInstance","content","dehydratedNode","pendingChildren","FiberRootNode","hydrate","createFiberRoot","initialChildren","hydrationCallbacks","transitionCallbacks","uninitializedFiber","initialCache","createPortal","getContextForSubtree","parentComponent","findHostInstance","hostFiber","createContainer","createHydrationContainer","updateContainer","getPublicRootInstance","containerFiber","markRetryLaneIfNotHydrated","markRetryLaneImpl","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","scheduleUpdate","setErrorHandler","setSuspenseHandler","findHostInstanceByFiber","emptyFindFiberByHostInstance","injectIntoDevTools","devToolsConfig","findFiberByHostInstance","bundleType","rendererPackageName","rendererConfig","currentDispatcherRef","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","ReactVersion","defaultOnRecoverableError","reportError","ReactDOMRoot","internalRoot","_internalRoot","ReactDOMHydrationRoot","unmount","createRoot","isValidContainer","unstable_strictMode","scheduleHydration","unstable_scheduleHydration","hydrateRoot","mutableSources","hydratedSources","isValidContainerLegacy","noopOnRecoverableError","legacyCreateRootFromDOMContainer","isHydrationContainer","originalCallback","rootSibling","legacyRenderSubtreeIntoContainer","forceHydrate","maybeRoot","findDOMNode","componentOrElement","unstable_renderSubtreeIntoContainer","containerNode","hasInstance","unmountComponentAtNode","setAttemptDiscreteHydration","flushSyncWithoutWarningIfAlreadyRendering","createPortalImpl","renderSubtreeIntoContainer","Internals","usingClientEntryPoint","Events","createRootImpl","hydrateRootImpl","foundDevTools"],"mappings":"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"}