{"version":3,"file":"react.production.min.js","sources":["../../../../packages/shared/ReactVersion.js","../../../../packages/shared/ReactSymbols.js","../../../../packages/react/src/ReactNoopUpdateQueue.js","../../../../packages/shared/assign.js","../../../../packages/react/src/ReactBaseClasses.js","../../../../packages/react/src/ReactCreateRef.js","../../../../packages/shared/isArray.js","../../../../packages/shared/hasOwnProperty.js","../../../../packages/react/src/ReactCurrentOwner.js","../../../../packages/react/src/ReactElement.js","../../../../packages/react/src/ReactChildren.js","../../../../packages/react/src/ReactContext.js","../../../../packages/react/src/ReactLazy.js","../../../../packages/react/src/ReactForwardRef.js","../../../../packages/react/src/ReactMemo.js","../../../../packages/react/src/ReactCurrentDispatcher.js","../../../../packages/react/src/ReactHooks.js","../../../../packages/react/src/ReactCurrentBatchConfig.js","../../../../packages/react/src/ReactServerContextRegistry.js","../../../../packages/react/src/ReactSharedInternals.js","../../../../packages/react/src/ReactServerContext.js","../../../../packages/react/src/ReactStartTransition.js","../../../../packages/react/src/ReactAct.js","../../../../packages/react/src/React.js"],"sourcesContent":["export default '18.3.1-next--';\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types.\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\n  'react.debug_trace_mode',\n);\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\n  'react.default_value',\n);\n\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  if (__DEV__) {\n    const constructor = publicInstance.constructor;\n    const componentName =\n      (constructor && (constructor.displayName || constructor.name)) ||\n      'ReactClass';\n    const warningKey = `${componentName}.${callerName}`;\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n    console.error(\n      \"Can't call %s on a component that is not yet mounted. \" +\n        'This is a no-op, but it might indicate a bug in your application. ' +\n        'Instead, assign to `this.state` directly or define a `state = {};` ' +\n        'class property with the desired state in the %s component.',\n      callerName,\n      componentName,\n    );\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nconst ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function(publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function(publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function(\n    publicInstance,\n    completeState,\n    callback,\n    callerName,\n  ) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function(\n    publicInstance,\n    partialState,\n    callback,\n    callerName,\n  ) {\n    warnNoop(publicInstance, 'setState');\n  },\n};\n\nexport default ReactNoopUpdateQueue;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst assign = Object.assign;\n\nexport default assign;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactNoopUpdateQueue from './ReactNoopUpdateQueue';\nimport assign from 'shared/assign';\n\nconst emptyObject = {};\nif (__DEV__) {\n  Object.freeze(emptyObject);\n}\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nComponent.prototype.setState = function(partialState, callback) {\n  if (\n    typeof partialState !== 'object' &&\n    typeof partialState !== 'function' &&\n    partialState != null\n  ) {\n    throw new Error(\n      'setState(...): takes an object of state variables to update or a ' +\n        'function which returns an object of state variables.',\n    );\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nComponent.prototype.forceUpdate = function(callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (__DEV__) {\n  const deprecatedAPIs = {\n    isMounted: [\n      'isMounted',\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\n        'componentWillUnmount to prevent memory leaks.',\n    ],\n    replaceState: [\n      'replaceState',\n      'Refactor your code to use setState instead (see ' +\n        'https://github.com/facebook/react/issues/3236).',\n    ],\n  };\n  const defineDeprecationWarning = function(methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function() {\n        console.warn(\n          '%s(...) is deprecated in plain JavaScript React classes. %s',\n          info[0],\n          info[1],\n        );\n        return undefined;\n      },\n    });\n  };\n  for (const fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\n\n/**\n * Convenience component with default shallow equality check for sCU.\n */\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nconst pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\n// Avoid an extra prototype jump for these methods.\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\nexport {Component, PureComponent};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport type {RefObject} from 'shared/ReactTypes';\n\n// an immutable object with a single mutable value\nexport function createRef(): RefObject {\n  const refObject = {\n    current: null,\n  };\n  if (__DEV__) {\n    Object.seal(refObject);\n  }\n  return refObject;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\n\nconst isArrayImpl = Array.isArray;\n\n// eslint-disable-next-line no-redeclare\nfunction isArray(a: mixed): boolean {\n  return isArrayImpl(a);\n}\n\nexport default isArray;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport default hasOwnProperty;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nconst ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: (null: null | Fiber),\n};\n\nexport default ReactCurrentOwner;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\nimport assign from 'shared/assign';\nimport hasOwnProperty from 'shared/hasOwnProperty';\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\n\nimport ReactCurrentOwner from './ReactCurrentOwner';\n\nconst RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true,\n};\n\nlet specialPropKeyWarningShown,\n  specialPropRefWarningShown,\n  didWarnAboutStringRefs;\n\nif (__DEV__) {\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'ref')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'key')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  const warnAboutAccessingKey = function() {\n    if (__DEV__) {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n        console.error(\n          '%s: `key` is not a prop. Trying to access it will result ' +\n            'in `undefined` being returned. If you need to access the same ' +\n            'value within the child component, you should pass it as a different ' +\n            'prop. (https://reactjs.org/link/special-props)',\n          displayName,\n        );\n      }\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true,\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  const warnAboutAccessingRef = function() {\n    if (__DEV__) {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n        console.error(\n          '%s: `ref` is not a prop. Trying to access it will result ' +\n            'in `undefined` being returned. If you need to access the same ' +\n            'value within the child component, you should pass it as a different ' +\n            'prop. (https://reactjs.org/link/special-props)',\n          displayName,\n        );\n      }\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true,\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  if (__DEV__) {\n    if (\n      typeof config.ref === 'string' &&\n      ReactCurrentOwner.current &&\n      config.__self &&\n      ReactCurrentOwner.current.stateNode !== config.__self\n    ) {\n      const componentName = getComponentNameFromType(\n        ReactCurrentOwner.current.type,\n      );\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        console.error(\n          'Component \"%s\" contains the string ref \"%s\". ' +\n            'Support for string refs will be removed in a future major release. ' +\n            'This case cannot be automatically converted to an arrow function. ' +\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\n            'Learn more about using refs safely here: ' +\n            'https://reactjs.org/link/strict-mode-string-ref',\n          componentName,\n          config.ref,\n        );\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\n  const element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner,\n  };\n\n  if (__DEV__) {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false,\n    });\n    // self and source are DEV only properties.\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self,\n    });\n    // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source,\n    });\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\nexport function jsx(type, config, maybeKey) {\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n  let ref = null;\n\n  // Currently, key can be spread in as a prop. This causes a potential\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n  // but as an intermediary step, we will use jsxDEV for everything except\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n  // key is explicitly declared to be undefined or not.\n  if (maybeKey !== undefined) {\n    if (__DEV__) {\n      checkKeyStringCoercion(maybeKey);\n    }\n    key = '' + maybeKey;\n  }\n\n  if (hasValidKey(config)) {\n    if (__DEV__) {\n      checkKeyStringCoercion(config.key);\n    }\n    key = '' + config.key;\n  }\n\n  if (hasValidRef(config)) {\n    ref = config.ref;\n  }\n\n  // Remaining properties are added to a new props object\n  for (propName in config) {\n    if (\n      hasOwnProperty.call(config, propName) &&\n      !RESERVED_PROPS.hasOwnProperty(propName)\n    ) {\n      props[propName] = config[propName];\n    }\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return ReactElement(\n    type,\n    key,\n    ref,\n    undefined,\n    undefined,\n    ReactCurrentOwner.current,\n    props,\n  );\n}\n\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\nexport function jsxDEV(type, config, maybeKey, source, self) {\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n  let ref = null;\n\n  // Currently, key can be spread in as a prop. This causes a potential\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n  // but as an intermediary step, we will use jsxDEV for everything except\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n  // key is explicitly declared to be undefined or not.\n  if (maybeKey !== undefined) {\n    if (__DEV__) {\n      checkKeyStringCoercion(maybeKey);\n    }\n    key = '' + maybeKey;\n  }\n\n  if (hasValidKey(config)) {\n    if (__DEV__) {\n      checkKeyStringCoercion(config.key);\n    }\n    key = '' + config.key;\n  }\n\n  if (hasValidRef(config)) {\n    ref = config.ref;\n    warnIfStringRefCannotBeAutoConverted(config);\n  }\n\n  // Remaining properties are added to a new props object\n  for (propName in config) {\n    if (\n      hasOwnProperty.call(config, propName) &&\n      !RESERVED_PROPS.hasOwnProperty(propName)\n    ) {\n      props[propName] = config[propName];\n    }\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  if (key || ref) {\n    const displayName =\n      typeof type === 'function'\n        ? type.displayName || type.name || 'Unknown'\n        : type;\n    if (key) {\n      defineKeyPropWarningGetter(props, displayName);\n    }\n    if (ref) {\n      defineRefPropWarningGetter(props, displayName);\n    }\n  }\n\n  return ReactElement(\n    type,\n    key,\n    ref,\n    self,\n    source,\n    ReactCurrentOwner.current,\n    props,\n  );\n}\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\nexport function createElement(type, config, children) {\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n  let ref = null;\n  let self = null;\n  let source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      if (__DEV__) {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n    if (hasValidKey(config)) {\n      if (__DEV__) {\n        checkKeyStringCoercion(config.key);\n      }\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (\n        hasOwnProperty.call(config, propName) &&\n        !RESERVED_PROPS.hasOwnProperty(propName)\n      ) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  const childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    const childArray = Array(childrenLength);\n    for (let i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    if (__DEV__) {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  if (__DEV__) {\n    if (key || ref) {\n      const displayName =\n        typeof type === 'function'\n          ? type.displayName || type.name || 'Unknown'\n          : type;\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n  return ReactElement(\n    type,\n    key,\n    ref,\n    self,\n    source,\n    ReactCurrentOwner.current,\n    props,\n  );\n}\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://reactjs.org/docs/react-api.html#createfactory\n */\nexport function createFactory(type) {\n  const factory = createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook: remove it\n  factory.type = type;\n  return factory;\n}\n\nexport function cloneAndReplaceKey(oldElement, newKey) {\n  const newElement = ReactElement(\n    oldElement.type,\n    newKey,\n    oldElement.ref,\n    oldElement._self,\n    oldElement._source,\n    oldElement._owner,\n    oldElement.props,\n  );\n\n  return newElement;\n}\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\nexport function cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\n      `React.cloneElement(...): The argument must be a React element, but you passed ${element}.`,\n    );\n  }\n\n  let propName;\n\n  // Original props are copied\n  const props = assign({}, element.props);\n\n  // Reserved names are extracted\n  let key = element.key;\n  let ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  const self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  const source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  let owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      if (__DEV__) {\n        checkKeyStringCoercion(config.key);\n      }\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    let defaultProps;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (\n        hasOwnProperty.call(config, propName) &&\n        !RESERVED_PROPS.hasOwnProperty(propName)\n      ) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  const childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    const childArray = Array(childrenLength);\n    for (let i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\nexport function isValidElement(object) {\n  return (\n    typeof object === 'object' &&\n    object !== null &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport isArray from 'shared/isArray';\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_PORTAL_TYPE,\n} from 'shared/ReactSymbols';\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\n\nimport {isValidElement, cloneAndReplaceKey} from './ReactElement';\n\nconst SEPARATOR = '.';\nconst SUBSEPARATOR = ':';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\nfunction escape(key: string): string {\n  const escapeRegex = /[=:]/g;\n  const escaperLookup = {\n    '=': '=0',\n    ':': '=2',\n  };\n  const escapedString = key.replace(escapeRegex, function(match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nlet didWarnAboutMaps = false;\n\nconst userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text: string): string {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getElementKey(element: any, index: number): string {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    if (__DEV__) {\n      checkKeyStringCoercion(element.key);\n    }\n    return escape('' + element.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\nfunction mapIntoArray(\n  children: ?ReactNodeList,\n  array: Array<React$Node>,\n  escapedPrefix: string,\n  nameSoFar: string,\n  callback: (?React$Node) => ?ReactNodeList,\n): number {\n  const type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  let invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n      case 'object':\n        switch ((children: any).$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n    }\n  }\n\n  if (invokeCallback) {\n    const child = children;\n    let mappedChild = callback(child);\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n    const childKey =\n      nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;\n    if (isArray(mappedChild)) {\n      let escapedChildKey = '';\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n      mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        if (__DEV__) {\n          // The `if` statement here prevents auto-disabling of the safe\n          // coercion ESLint rule, so we must manually disable it below.\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n          if (mappedChild.key && (!child || child.key !== mappedChild.key)) {\n            checkKeyStringCoercion(mappedChild.key);\n          }\n        }\n        mappedChild = cloneAndReplaceKey(\n          mappedChild,\n          // Keep both the (mapped) and old keys if they differ, just as\n          // traverseAllChildren used to do for objects as children\n          escapedPrefix +\n            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n            (mappedChild.key && (!child || child.key !== mappedChild.key)\n              ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n                // eslint-disable-next-line react-internal/safe-string-coercion\n                escapeUserProvidedKey('' + mappedChild.key) + '/'\n              : '') +\n            childKey,\n        );\n      }\n      array.push(mappedChild);\n    }\n    return 1;\n  }\n\n  let child;\n  let nextName;\n  let subtreeCount = 0; // Count of children found in the current subtree.\n  const nextNamePrefix =\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (let i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(\n        child,\n        array,\n        escapedPrefix,\n        nextName,\n        callback,\n      );\n    }\n  } else {\n    const iteratorFn = getIteratorFn(children);\n    if (typeof iteratorFn === 'function') {\n      const iterableChildren: Iterable<React$Node> & {\n        entries: any,\n      } = (children: any);\n\n      if (__DEV__) {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            console.warn(\n              'Using Maps as children is not supported. ' +\n                'Use an array of keyed ReactElements instead.',\n            );\n          }\n          didWarnAboutMaps = true;\n        }\n      }\n\n      const iterator = iteratorFn.call(iterableChildren);\n      let step;\n      let ii = 0;\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(\n          child,\n          array,\n          escapedPrefix,\n          nextName,\n          callback,\n        );\n      }\n    } else if (type === 'object') {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      const childrenString = String((children: any));\n\n      throw new Error(\n        `Objects are not valid as a React child (found: ${\n          childrenString === '[object Object]'\n            ? 'object with keys {' +\n              Object.keys((children: any)).join(', ') +\n              '}'\n            : childrenString\n        }). ` +\n          'If you meant to render a collection of children, use an array ' +\n          'instead.',\n      );\n    }\n  }\n\n  return subtreeCount;\n}\n\ntype MapFunc = (child: ?React$Node) => ?ReactNodeList;\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(\n  children: ?ReactNodeList,\n  func: MapFunc,\n  context: mixed,\n): ?Array<React$Node> {\n  if (children == null) {\n    return children;\n  }\n  const result = [];\n  let count = 0;\n  mapIntoArray(children, result, '', '', function(child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children: ?ReactNodeList): number {\n  let n = 0;\n  mapChildren(children, () => {\n    n++;\n    // Don't return anything\n  });\n  return n;\n}\n\ntype ForEachFunc = (child: ?React$Node) => void;\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(\n  children: ?ReactNodeList,\n  forEachFunc: ForEachFunc,\n  forEachContext: mixed,\n): void {\n  mapChildren(\n    children,\n    function() {\n      forEachFunc.apply(this, arguments);\n      // Don't return anything.\n    },\n    forEachContext,\n  );\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\nfunction toArray(children: ?ReactNodeList): Array<React$Node> {\n  return mapChildren(children, child => child) || [];\n}\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild<T>(children: T): T {\n  if (!isValidElement(children)) {\n    throw new Error(\n      'React.Children.only expected to receive a single React element child.',\n    );\n  }\n\n  return children;\n}\n\nexport {\n  forEachChildren as forEach,\n  mapChildren as map,\n  countChildren as count,\n  onlyChild as only,\n  toArray,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {REACT_PROVIDER_TYPE, REACT_CONTEXT_TYPE} from 'shared/ReactSymbols';\n\nimport type {ReactContext} from 'shared/ReactTypes';\n\nexport function createContext<T>(defaultValue: T): ReactContext<T> {\n  // TODO: Second argument used to be an optional `calculateChangedBits`\n  // function. Warn to reserve for future use?\n\n  const context: ReactContext<T> = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: (null: any),\n    Consumer: (null: any),\n\n    // Add these to use same hidden class in VM as ServerContext\n    _defaultValue: (null: any),\n    _globalName: (null: any),\n  };\n\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context,\n  };\n\n  let hasWarnedAboutUsingNestedContextConsumers = false;\n  let hasWarnedAboutUsingConsumerProvider = false;\n  let hasWarnedAboutDisplayNameOnConsumer = false;\n\n  if (__DEV__) {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    const Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context,\n    };\n    // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get() {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n            console.error(\n              'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' +\n                'a future major release. Did you mean to render <Context.Provider> instead?',\n            );\n          }\n          return context.Provider;\n        },\n        set(_Provider) {\n          context.Provider = _Provider;\n        },\n      },\n      _currentValue: {\n        get() {\n          return context._currentValue;\n        },\n        set(_currentValue) {\n          context._currentValue = _currentValue;\n        },\n      },\n      _currentValue2: {\n        get() {\n          return context._currentValue2;\n        },\n        set(_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        },\n      },\n      _threadCount: {\n        get() {\n          return context._threadCount;\n        },\n        set(_threadCount) {\n          context._threadCount = _threadCount;\n        },\n      },\n      Consumer: {\n        get() {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n            console.error(\n              'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' +\n                'a future major release. Did you mean to render <Context.Consumer> instead?',\n            );\n          }\n          return context.Consumer;\n        },\n      },\n      displayName: {\n        get() {\n          return context.displayName;\n        },\n        set(displayName) {\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\n            console.warn(\n              'Setting `displayName` on Context.Consumer has no effect. ' +\n                \"You should set it directly on the context with Context.displayName = '%s'.\",\n              displayName,\n            );\n            hasWarnedAboutDisplayNameOnConsumer = true;\n          }\n        },\n      },\n    });\n    // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n    context.Consumer = Consumer;\n  } else {\n    context.Consumer = context;\n  }\n\n  if (__DEV__) {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Wakeable, Thenable} from 'shared/ReactTypes';\n\nimport {REACT_LAZY_TYPE} from 'shared/ReactSymbols';\n\nconst Uninitialized = -1;\nconst Pending = 0;\nconst Resolved = 1;\nconst Rejected = 2;\n\ntype UninitializedPayload<T> = {\n  _status: -1,\n  _result: () => Thenable<{default: T, ...}>,\n};\n\ntype PendingPayload = {\n  _status: 0,\n  _result: Wakeable,\n};\n\ntype ResolvedPayload<T> = {\n  _status: 1,\n  _result: {default: T},\n};\n\ntype RejectedPayload = {\n  _status: 2,\n  _result: mixed,\n};\n\ntype Payload<T> =\n  | UninitializedPayload<T>\n  | PendingPayload\n  | ResolvedPayload<T>\n  | RejectedPayload;\n\nexport type LazyComponent<T, P> = {\n  $$typeof: Symbol | number,\n  _payload: P,\n  _init: (payload: P) => T,\n};\n\nfunction lazyInitializer<T>(payload: Payload<T>): T {\n  if (payload._status === Uninitialized) {\n    const ctor = payload._result;\n    const thenable = ctor();\n    // Transition to the next state.\n    // This might throw either because it's missing or throws. If so, we treat it\n    // as still uninitialized and try again next time. Which is the same as what\n    // happens if the ctor or any wrappers processing the ctor throws. This might\n    // end up fixing it if the resolution was a concurrency bug.\n    thenable.then(\n      moduleObject => {\n        if (payload._status === Pending || payload._status === Uninitialized) {\n          // Transition to the next state.\n          const resolved: ResolvedPayload<T> = (payload: any);\n          resolved._status = Resolved;\n          resolved._result = moduleObject;\n        }\n      },\n      error => {\n        if (payload._status === Pending || payload._status === Uninitialized) {\n          // Transition to the next state.\n          const rejected: RejectedPayload = (payload: any);\n          rejected._status = Rejected;\n          rejected._result = error;\n        }\n      },\n    );\n    if (payload._status === Uninitialized) {\n      // In case, we're still uninitialized, then we're waiting for the thenable\n      // to resolve. Set it as pending in the meantime.\n      const pending: PendingPayload = (payload: any);\n      pending._status = Pending;\n      pending._result = thenable;\n    }\n  }\n  if (payload._status === Resolved) {\n    const moduleObject = payload._result;\n    if (__DEV__) {\n      if (moduleObject === undefined) {\n        console.error(\n          'lazy: Expected the result of a dynamic imp' +\n            'ort() call. ' +\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' +\n            \"ort('./MyComponent'))\\n\\n\" +\n            'Did you accidentally put curly braces around the import?',\n          moduleObject,\n        );\n      }\n    }\n    if (__DEV__) {\n      if (!('default' in moduleObject)) {\n        console.error(\n          'lazy: Expected the result of a dynamic imp' +\n            'ort() call. ' +\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' +\n            \"ort('./MyComponent'))\",\n          moduleObject,\n        );\n      }\n    }\n    return moduleObject.default;\n  } else {\n    throw payload._result;\n  }\n}\n\nexport function lazy<T>(\n  ctor: () => Thenable<{default: T, ...}>,\n): LazyComponent<T, Payload<T>> {\n  const payload: Payload<T> = {\n    // We use these fields to store the result.\n    _status: Uninitialized,\n    _result: ctor,\n  };\n\n  const lazyType: LazyComponent<T, Payload<T>> = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer,\n  };\n\n  if (__DEV__) {\n    // In production, this would just set it on the object.\n    let defaultProps;\n    let propTypes;\n    // $FlowFixMe\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get() {\n          return defaultProps;\n        },\n        set(newDefaultProps) {\n          console.error(\n            'React.lazy(...): It is not supported to assign `defaultProps` to ' +\n              'a lazy component import. Either specify them where the component ' +\n              'is defined, or create a wrapping component around it.',\n          );\n          defaultProps = newDefaultProps;\n          // Match production behavior more closely:\n          // $FlowFixMe\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true,\n          });\n        },\n      },\n      propTypes: {\n        configurable: true,\n        get() {\n          return propTypes;\n        },\n        set(newPropTypes) {\n          console.error(\n            'React.lazy(...): It is not supported to assign `propTypes` to ' +\n              'a lazy component import. Either specify them where the component ' +\n              'is defined, or create a wrapping component around it.',\n          );\n          propTypes = newPropTypes;\n          // Match production behavior more closely:\n          // $FlowFixMe\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true,\n          });\n        },\n      },\n    });\n  }\n\n  return lazyType;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE} from 'shared/ReactSymbols';\n\nexport function forwardRef<Props, ElementType: React$ElementType>(\n  render: (props: Props, ref: React$Ref<ElementType>) => React$Node,\n) {\n  if (__DEV__) {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      console.error(\n        'forwardRef requires a render function but received a `memo` ' +\n          'component. Instead of forwardRef(memo(...)), use ' +\n          'memo(forwardRef(...)).',\n      );\n    } else if (typeof render !== 'function') {\n      console.error(\n        'forwardRef requires a render function but was given %s.',\n        render === null ? 'null' : typeof render,\n      );\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        console.error(\n          'forwardRef render functions accept exactly two parameters: props and ref. %s',\n          render.length === 1\n            ? 'Did you forget to use the ref parameter?'\n            : 'Any additional parameter will be undefined.',\n        );\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        console.error(\n          'forwardRef render functions do not support propTypes or defaultProps. ' +\n            'Did you accidentally pass a React component?',\n        );\n      }\n    }\n  }\n\n  const elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render,\n  };\n  if (__DEV__) {\n    let ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function() {\n        return ownName;\n      },\n      set: function(name) {\n        ownName = name;\n\n        // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.forwardRef((props, ref) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n        if (!render.name && !render.displayName) {\n          render.displayName = name;\n        }\n      },\n    });\n  }\n  return elementType;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {REACT_MEMO_TYPE} from 'shared/ReactSymbols';\n\nimport isValidElementType from 'shared/isValidElementType';\n\nexport function memo<Props>(\n  type: React$ElementType,\n  compare?: (oldProps: Props, newProps: Props) => boolean,\n) {\n  if (__DEV__) {\n    if (!isValidElementType(type)) {\n      console.error(\n        'memo: The first argument must be a component. Instead ' +\n          'received: %s',\n        type === null ? 'null' : typeof type,\n      );\n    }\n  }\n  const elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type,\n    compare: compare === undefined ? null : compare,\n  };\n  if (__DEV__) {\n    let ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function() {\n        return ownName;\n      },\n      set: function(name) {\n        ownName = name;\n\n        // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.memo((props) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n        if (!type.name && !type.displayName) {\n          type.displayName = name;\n        }\n      },\n    });\n  }\n  return elementType;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\n\n/**\n * Keeps track of the current dispatcher.\n */\nconst ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: (null: null | Dispatcher),\n};\n\nexport default ReactCurrentDispatcher;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\nimport type {\n  MutableSource,\n  MutableSourceGetSnapshotFn,\n  MutableSourceSubscribeFn,\n  ReactContext,\n  StartTransitionOptions,\n} from 'shared/ReactTypes';\n\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\n\ntype BasicStateAction<S> = (S => S) | S;\ntype Dispatch<A> = A => void;\n\nfunction resolveDispatcher() {\n  const dispatcher = ReactCurrentDispatcher.current;\n  if (__DEV__) {\n    if (dispatcher === null) {\n      console.error(\n        'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n          ' one of the following reasons:\\n' +\n          '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n          '2. You might be breaking the Rules of Hooks\\n' +\n          '3. You might have more than one copy of React in the same app\\n' +\n          'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\n      );\n    }\n  }\n  // Will result in a null access error if accessed outside render phase. We\n  // intentionally don't throw our own error because this is in a hot path.\n  // Also helps ensure this is inlined.\n  return ((dispatcher: any): Dispatcher);\n}\n\nexport function getCacheSignal(): AbortSignal {\n  const dispatcher = resolveDispatcher();\n  // $FlowFixMe This is unstable, thus optional\n  return dispatcher.getCacheSignal();\n}\n\nexport function getCacheForType<T>(resourceType: () => T): T {\n  const dispatcher = resolveDispatcher();\n  // $FlowFixMe This is unstable, thus optional\n  return dispatcher.getCacheForType(resourceType);\n}\n\nexport function useContext<T>(Context: ReactContext<T>): T {\n  const dispatcher = resolveDispatcher();\n  if (__DEV__) {\n    // TODO: add a more generic warning for invalid values.\n    if ((Context: any)._context !== undefined) {\n      const realContext = (Context: any)._context;\n      // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n      if (realContext.Consumer === Context) {\n        console.error(\n          'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' +\n            'removed in a future major release. Did you mean to call useContext(Context) instead?',\n        );\n      } else if (realContext.Provider === Context) {\n        console.error(\n          'Calling useContext(Context.Provider) is not supported. ' +\n            'Did you mean to call useContext(Context) instead?',\n        );\n      }\n    }\n  }\n  return dispatcher.useContext(Context);\n}\n\nexport function useState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\n\nexport function useReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\n\nexport function useRef<T>(initialValue: T): {|current: T|} {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\n\nexport function useEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\n\nexport function useInsertionEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useInsertionEffect(create, deps);\n}\n\nexport function useLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\n\nexport function useCallback<T>(\n  callback: T,\n  deps: Array<mixed> | void | null,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\n\nexport function useMemo<T>(\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\n\nexport function useImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\n\nexport function useDebugValue<T>(\n  value: T,\n  formatterFn: ?(value: T) => mixed,\n): void {\n  if (__DEV__) {\n    const dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\nexport const emptyObject = {};\n\nexport function useTransition(): [\n  boolean,\n  (callback: () => void, options?: StartTransitionOptions) => void,\n] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\n\nexport function useDeferredValue<T>(value: T): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value);\n}\n\nexport function useId(): string {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useId();\n}\n\nexport function useMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useMutableSource(source, getSnapshot, subscribe);\n}\n\nexport function useSyncExternalStore<T>(\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot,\n  );\n}\n\nexport function useCacheRefresh(): <T>(?() => T, ?T) => void {\n  const dispatcher = resolveDispatcher();\n  // $FlowFixMe This is unstable, thus optional\n  return dispatcher.useCacheRefresh();\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {BatchConfigTransition} from 'react-reconciler/src/ReactFiberTracingMarkerComponent.new';\n\ntype BatchConfig = {\n  transition: BatchConfigTransition | null,\n};\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nconst ReactCurrentBatchConfig: BatchConfig = {\n  transition: null,\n};\n\nexport default ReactCurrentBatchConfig;\n","import type {ReactServerContext} from 'shared/ReactTypes';\n\nexport const ContextRegistry: {\n  [globalName: string]: ReactServerContext<any>,\n} = {};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\nimport ReactCurrentOwner from './ReactCurrentOwner';\nimport ReactDebugCurrentFrame from './ReactDebugCurrentFrame';\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\nimport {ContextRegistry} from './ReactServerContextRegistry';\n\nconst ReactSharedInternals = {\n  ReactCurrentDispatcher,\n  ReactCurrentBatchConfig,\n  ReactCurrentOwner,\n};\n\nif (__DEV__) {\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n}\n\nif (enableServerContext) {\n  ReactSharedInternals.ContextRegistry = ContextRegistry;\n}\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  REACT_PROVIDER_TYPE,\n  REACT_SERVER_CONTEXT_TYPE,\n  REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED,\n} from 'shared/ReactSymbols';\n\nimport type {\n  ReactServerContext,\n  ServerContextJSONValue,\n} from 'shared/ReactTypes';\n\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst ContextRegistry = ReactSharedInternals.ContextRegistry;\n\nexport function createServerContext<T: ServerContextJSONValue>(\n  globalName: string,\n  defaultValue: T,\n): ReactServerContext<T> {\n  if (!enableServerContext) {\n    throw new Error('Not implemented.');\n  }\n  let wasDefined = true;\n  if (!ContextRegistry[globalName]) {\n    wasDefined = false;\n    const context: ReactServerContext<T> = {\n      $$typeof: REACT_SERVER_CONTEXT_TYPE,\n\n      // As a workaround to support multiple concurrent renderers, we categorize\n      // some renderers as primary and others as secondary. We only expect\n      // there to be two concurrent renderers at most: React Native (primary) and\n      // Fabric (secondary); React DOM (primary) and React ART (secondary).\n      // Secondary renderers store their context values on separate fields.\n      _currentValue: defaultValue,\n      _currentValue2: defaultValue,\n\n      _defaultValue: defaultValue,\n\n      // Used to track how many concurrent renderers this context currently\n      // supports within in a single renderer. Such as parallel server rendering.\n      _threadCount: 0,\n      // These are circular\n      Provider: (null: any),\n      Consumer: (null: any),\n      _globalName: globalName,\n    };\n\n    context.Provider = {\n      $$typeof: REACT_PROVIDER_TYPE,\n      _context: context,\n    };\n\n    if (__DEV__) {\n      let hasWarnedAboutUsingConsumer;\n      context._currentRenderer = null;\n      context._currentRenderer2 = null;\n      Object.defineProperties(\n        context,\n        ({\n          Consumer: {\n            get() {\n              if (!hasWarnedAboutUsingConsumer) {\n                console.error(\n                  'Consumer pattern is not supported by ReactServerContext',\n                );\n                hasWarnedAboutUsingConsumer = true;\n              }\n              return null;\n            },\n          },\n        }: any),\n      );\n    }\n    ContextRegistry[globalName] = context;\n  }\n\n  const context = ContextRegistry[globalName];\n  if (context._defaultValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n    context._defaultValue = defaultValue;\n    if (\n      context._currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\n    ) {\n      context._currentValue = defaultValue;\n    }\n    if (\n      context._currentValue2 === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\n    ) {\n      context._currentValue2 = defaultValue;\n    }\n  } else if (wasDefined) {\n    throw new Error(`ServerContext: ${globalName} already defined`);\n  }\n  return context;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nimport type {StartTransitionOptions} from 'shared/ReactTypes';\n\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\nimport {enableTransitionTracing} from 'shared/ReactFeatureFlags';\n\nexport function startTransition(\n  scope: () => void,\n  options?: StartTransitionOptions,\n) {\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = {};\n  const currentTransition = ReactCurrentBatchConfig.transition;\n\n  if (__DEV__) {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  if (enableTransitionTracing) {\n    if (options !== undefined && options.name !== undefined) {\n      ReactCurrentBatchConfig.transition.name = options.name;\n      ReactCurrentBatchConfig.transition.startTime = -1;\n    }\n  }\n\n  try {\n    scope();\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    if (__DEV__) {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        const updatedFibersCount = currentTransition._updatedFibers.size;\n        if (updatedFibersCount > 10) {\n          console.warn(\n            'Detected a large number of updates inside startTransition. ' +\n              'If this is due to a subscription please re-write it to use React provided hooks. ' +\n              'Otherwise concurrent mode guarantees are off the table.',\n          );\n        }\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Thenable} from 'shared/ReactTypes';\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\nimport enqueueTask from 'shared/enqueueTask';\n\nlet actScopeDepth = 0;\nlet didWarnNoAwaitAct = false;\n\nexport function act<T>(callback: () => T | Thenable<T>): Thenable<T> {\n  if (__DEV__) {\n    // `act` calls can be nested, so we track the depth. This represents the\n    // number of `act` scopes on the stack.\n    const prevActScopeDepth = actScopeDepth;\n    actScopeDepth++;\n\n    if (ReactCurrentActQueue.current === null) {\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\n      // will detect the queue and use it instead of Scheduler.\n      ReactCurrentActQueue.current = [];\n    }\n\n    const prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n    let result;\n    try {\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n      // set to `true` while the given callback is executed, not for updates\n      // triggered during an async event, because this is how the legacy\n      // implementation of `act` behaved.\n      ReactCurrentActQueue.isBatchingLegacy = true;\n      result = callback();\n\n      // Replicate behavior of original `act` implementation in legacy mode,\n      // which flushed updates immediately after the scope function exits, even\n      // if it's an async function.\n      if (\n        !prevIsBatchingLegacy &&\n        ReactCurrentActQueue.didScheduleLegacyUpdate\n      ) {\n        const queue = ReactCurrentActQueue.current;\n        if (queue !== null) {\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n          flushActQueue(queue);\n        }\n      }\n    } catch (error) {\n      popActScope(prevActScopeDepth);\n      throw error;\n    } finally {\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n    }\n\n    if (\n      result !== null &&\n      typeof result === 'object' &&\n      typeof result.then === 'function'\n    ) {\n      const thenableResult: Thenable<T> = (result: any);\n      // The callback is an async function (i.e. returned a promise). Wait\n      // for it to resolve before exiting the current scope.\n      let wasAwaited = false;\n      const thenable: Thenable<T> = {\n        then(resolve, reject) {\n          wasAwaited = true;\n          thenableResult.then(\n            returnValue => {\n              popActScope(prevActScopeDepth);\n              if (actScopeDepth === 0) {\n                // We've exited the outermost act scope. Recursively flush the\n                // queue until there's no remaining work.\n                recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n              } else {\n                resolve(returnValue);\n              }\n            },\n            error => {\n              // The callback threw an error.\n              popActScope(prevActScopeDepth);\n              reject(error);\n            },\n          );\n        },\n      };\n\n      if (__DEV__) {\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\n          // eslint-disable-next-line no-undef\n          Promise.resolve()\n            .then(() => {})\n            .then(() => {\n              if (!wasAwaited) {\n                didWarnNoAwaitAct = true;\n                console.error(\n                  'You called act(async () => ...) without await. ' +\n                    'This could lead to unexpected testing behaviour, ' +\n                    'interleaving multiple act calls and mixing their ' +\n                    'scopes. ' +\n                    'You should - await act(async () => ...);',\n                );\n              }\n            });\n        }\n      }\n      return thenable;\n    } else {\n      const returnValue: T = (result: any);\n      // The callback is not an async function. Exit the current scope\n      // immediately, without awaiting.\n      popActScope(prevActScopeDepth);\n      if (actScopeDepth === 0) {\n        // Exiting the outermost act scope. Flush the queue.\n        const queue = ReactCurrentActQueue.current;\n        if (queue !== null) {\n          flushActQueue(queue);\n          ReactCurrentActQueue.current = null;\n        }\n        // Return a thenable. If the user awaits it, we'll flush again in\n        // case additional work was scheduled by a microtask.\n        const thenable: Thenable<T> = {\n          then(resolve, reject) {\n            // Confirm we haven't re-entered another `act` scope, in case\n            // the user does something weird like await the thenable\n            // multiple times.\n            if (ReactCurrentActQueue.current === null) {\n              // Recursively flush the queue until there's no remaining work.\n              ReactCurrentActQueue.current = [];\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          },\n        };\n        return thenable;\n      } else {\n        // Since we're inside a nested `act` scope, the returned thenable\n        // immediately resolves. The outer scope will flush the queue.\n        const thenable: Thenable<T> = {\n          then(resolve, reject) {\n            resolve(returnValue);\n          },\n        };\n        return thenable;\n      }\n    }\n  } else {\n    throw new Error('act(...) is not supported in production builds of React.');\n  }\n}\n\nfunction popActScope(prevActScopeDepth) {\n  if (__DEV__) {\n    if (prevActScopeDepth !== actScopeDepth - 1) {\n      console.error(\n        'You seem to have overlapping act() calls, this is not supported. ' +\n          'Be sure to await previous act() calls before making a new one. ',\n      );\n    }\n    actScopeDepth = prevActScopeDepth;\n  }\n}\n\nfunction recursivelyFlushAsyncActWork<T>(\n  returnValue: T,\n  resolve: T => mixed,\n  reject: mixed => mixed,\n) {\n  if (__DEV__) {\n    const queue = ReactCurrentActQueue.current;\n    if (queue !== null) {\n      try {\n        flushActQueue(queue);\n        enqueueTask(() => {\n          if (queue.length === 0) {\n            // No additional work was scheduled. Finish.\n            ReactCurrentActQueue.current = null;\n            resolve(returnValue);\n          } else {\n            // Keep flushing work until there's none left.\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n          }\n        });\n      } catch (error) {\n        reject(error);\n      }\n    } else {\n      resolve(returnValue);\n    }\n  }\n}\n\nlet isFlushing = false;\nfunction flushActQueue(queue) {\n  if (__DEV__) {\n    if (!isFlushing) {\n      // Prevent re-entrance.\n      isFlushing = true;\n      let i = 0;\n      try {\n        for (; i < queue.length; i++) {\n          let callback = queue[i];\n          do {\n            callback = callback(true);\n          } while (callback !== null);\n        }\n        queue.length = 0;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        queue = queue.slice(i + 1);\n        throw error;\n      } finally {\n        isFlushing = false;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactVersion from 'shared/ReactVersion';\nimport {\n  REACT_FRAGMENT_TYPE,\n  REACT_DEBUG_TRACING_MODE_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n  REACT_OFFSCREEN_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_CACHE_TYPE,\n  REACT_TRACING_MARKER_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {Component, PureComponent} from './ReactBaseClasses';\nimport {createRef} from './ReactCreateRef';\nimport {forEach, map, count, toArray, only} from './ReactChildren';\nimport {\n  createElement as createElementProd,\n  createFactory as createFactoryProd,\n  cloneElement as cloneElementProd,\n  isValidElement,\n} from './ReactElement';\nimport {createContext} from './ReactContext';\nimport {lazy} from './ReactLazy';\nimport {forwardRef} from './ReactForwardRef';\nimport {memo} from './ReactMemo';\nimport {\n  getCacheSignal,\n  getCacheForType,\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useDebugValue,\n  useInsertionEffect,\n  useLayoutEffect,\n  useMemo,\n  useMutableSource,\n  useSyncExternalStore,\n  useReducer,\n  useRef,\n  useState,\n  useTransition,\n  useDeferredValue,\n  useId,\n  useCacheRefresh,\n} from './ReactHooks';\nimport {\n  createElementWithValidation,\n  createFactoryWithValidation,\n  cloneElementWithValidation,\n} from './ReactElementValidator';\nimport {createServerContext} from './ReactServerContext';\nimport {createMutableSource} from './ReactMutableSource';\nimport ReactSharedInternals from './ReactSharedInternals';\nimport {startTransition} from './ReactStartTransition';\nimport {act} from './ReactAct';\n\n// TODO: Move this branching into the other module instead and just re-export.\nconst createElement = __DEV__ ? createElementWithValidation : createElementProd;\nconst cloneElement = __DEV__ ? cloneElementWithValidation : cloneElementProd;\nconst createFactory = __DEV__ ? createFactoryWithValidation : createFactoryProd;\n\nconst Children = {\n  map,\n  forEach,\n  count,\n  toArray,\n  only,\n};\n\nexport {\n  Children,\n  createMutableSource,\n  createRef,\n  Component,\n  PureComponent,\n  createContext,\n  createServerContext,\n  forwardRef,\n  lazy,\n  memo,\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useDebugValue,\n  useInsertionEffect,\n  useLayoutEffect,\n  useMemo,\n  useMutableSource,\n  useSyncExternalStore,\n  useReducer,\n  useRef,\n  useState,\n  REACT_FRAGMENT_TYPE as Fragment,\n  REACT_PROFILER_TYPE as Profiler,\n  REACT_STRICT_MODE_TYPE as StrictMode,\n  REACT_DEBUG_TRACING_MODE_TYPE as unstable_DebugTracingMode,\n  REACT_SUSPENSE_TYPE as Suspense,\n  createElement,\n  cloneElement,\n  isValidElement,\n  ReactVersion as version,\n  ReactSharedInternals as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\n  // Deprecated behind disableCreateFactory\n  createFactory,\n  // Concurrent Mode\n  useTransition,\n  startTransition,\n  useDeferredValue,\n  REACT_SUSPENSE_LIST_TYPE as SuspenseList,\n  REACT_LEGACY_HIDDEN_TYPE as unstable_LegacyHidden,\n  REACT_OFFSCREEN_TYPE as unstable_Offscreen,\n  getCacheSignal as unstable_getCacheSignal,\n  getCacheForType as unstable_getCacheForType,\n  useCacheRefresh as unstable_useCacheRefresh,\n  REACT_CACHE_TYPE as unstable_Cache,\n  // enableScopeAPI\n  REACT_SCOPE_TYPE as unstable_Scope,\n  // enableTransitionTracing\n  REACT_TRACING_MARKER_TYPE as unstable_TracingMarker,\n  useId,\n  act,\n};\n"],"names":["REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_SERVER_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_CACHE_TYPE","REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactNoopUpdateQueue","isMounted","publicInstance","enqueueForceUpdate","callback","callerName","enqueueReplaceState","completeState","enqueueSetState","partialState","assign","Object","emptyObject","Component","props","context","updater","refs","prototype","isReactComponent","setState","Error","forceUpdate","ComponentDummy","PureComponent","pureComponentPrototype","constructor","isPureReactComponent","createRef","refObject","current","isArrayImpl","Array","isArray","a","hasOwnProperty","ReactCurrentOwner","RESERVED_PROPS","key","ref","__self","__source","hasValidRef","config","undefined","hasValidKey","ReactElement","type","self","source","owner","element","$$typeof","_owner","createElement","children","propName","call","childrenLength","arguments","length","childArray","i","defaultProps","createFactory","factory","bind","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneElement","isValidElement","object","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","replace","match","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","getElementKey","index","toString","mapIntoArray","array","escapedPrefix","nameSoFar","invokeCallback","child","mappedChild","childKey","escapedChildKey","c","push","nextName","subtreeCount","nextNamePrefix","iteratorFn","iterableChildren","step","ii","next","done","value","childrenString","String","keys","join","mapChildren","func","result","count","countChildren","n","forEachChildren","forEachFunc","forEachContext","apply","toArray","onlyChild","createContext","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","_context","Uninitialized","Pending","Resolved","Rejected","lazyInitializer","payload","_status","ctor","_result","thenable","then","moduleObject","resolved","error","rejected","pending","default","lazy","lazyType","_payload","_init","forwardRef","render","elementType","memo","compare","ReactCurrentDispatcher","resolveDispatcher","dispatcher","getCacheSignal","getCacheForType","resourceType","useContext","Context","useState","initialState","useReducer","reducer","initialArg","init","useRef","initialValue","useEffect","create","deps","useInsertionEffect","useLayoutEffect","useCallback","useMemo","useImperativeHandle","useDebugValue","formatterFn","useTransition","useDeferredValue","useId","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","useCacheRefresh","ReactCurrentBatchConfig","transition","ContextRegistry","ReactSharedInternals","createServerContext","globalName","wasDefined","startTransition","scope","options","prevTransition","act","__DEV__","createElementProd","cloneElementProd","createFactoryProd","Children","map","forEach","only"],"mappings":"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"}